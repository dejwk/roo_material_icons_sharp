#include "alert.h"

using namespace roo_display;

// Image file ic_sharp_36_alert_add_alert 36x36, 4-bit Alpha,  RLE, 176 bytes.
static const uint8_t ic_sharp_36_alert_add_alert_data[] PROGMEM = {
  0x75, 0x82, 0x6E, 0xE6, 0x77, 0x72, 0x02, 0xC0, 0x27, 0x77, 0x10, 0x5C, 0x05, 0x77, 0x70, 0x20,
  0xAC, 0x0A, 0x02, 0x77, 0x40, 0x30, 0xBF, 0x90, 0xB0, 0x37, 0x71, 0x07, 0xFD, 0x07, 0x76, 0x08,
  0xFF, 0x08, 0x74, 0x05, 0xFF, 0xA0, 0x57, 0x20, 0x10, 0xEF, 0xFA, 0x0E, 0x01, 0x71, 0x07, 0xF0,
  0x72, 0x07, 0xF0, 0x77, 0x10, 0xDF, 0x07, 0x20, 0x7F, 0x0D, 0x70, 0x1F, 0x90, 0x72, 0x07, 0xF9,
  0x01, 0x60, 0x3F, 0x90, 0x72, 0x07, 0xF9, 0x03, 0x60, 0x4C, 0x80, 0x07, 0x03, 0x20, 0x38, 0x00,
  0x7C, 0x04, 0x60, 0x4C, 0x75, 0xC0, 0x46, 0x04, 0xC7, 0x5C, 0x04, 0x60, 0x4C, 0x80, 0x07, 0x03,
  0x20, 0x38, 0x00, 0x7C, 0x04, 0x60, 0x4F, 0x90, 0x72, 0x07, 0xF9, 0x04, 0x60, 0x4F, 0x90, 0x72,
  0x07, 0xF9, 0x04, 0x60, 0x4F, 0x90, 0x72, 0x07, 0xF9, 0x04, 0x60, 0x4F, 0x90, 0x72, 0x07, 0xF9,
  0x04, 0x60, 0x4F, 0xFE, 0x04, 0x60, 0x9F, 0xFE, 0x09, 0x50, 0x9F, 0xFF, 0x90, 0x93, 0x09, 0xFF,
  0xFB, 0x81, 0x90, 0x6F, 0xFF, 0xD0, 0x60, 0x7F, 0xFF, 0xD0, 0x78, 0x0C, 0x30, 0x80, 0x27, 0x77,
  0x71, 0x0B, 0xC0, 0xB7, 0x77, 0x10, 0x30, 0xEA, 0x0E, 0x03, 0x77, 0x72, 0x82, 0x16, 0x61, 0x75,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_36_alert_add_alert() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 31, 34), Box(0, 0, 35, 35),
      ic_sharp_36_alert_add_alert_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_36_alert_auto_delete 36x36, 4-bit Alpha,  RLE, 232 bytes.
static const uint8_t ic_sharp_36_alert_auto_delete_data[] PROGMEM = {
  0x78, 0x04, 0x77, 0x77, 0x40, 0xBF, 0x90, 0xB7, 0x74, 0x07, 0xFF, 0xE0, 0x77, 0x50, 0x7F, 0xFE,
  0x07, 0x75, 0x07, 0xFF, 0xE0, 0x78, 0x0D, 0x40, 0x80, 0x96, 0x77, 0x72, 0xFF, 0xC7, 0x72, 0xFF,
  0xC7, 0x72, 0xFF, 0xC7, 0x72, 0xFF, 0xC7, 0x72, 0xFF, 0xC7, 0x72, 0xFF, 0xC8, 0x42, 0x57, 0x75,
  0x27, 0x3F, 0xFF, 0xB0, 0xD0, 0x77, 0x1F, 0xFF, 0xD0, 0xD0, 0x36, 0xFF, 0xC8, 0x4E, 0xA8, 0x8A,
  0xEC, 0x05, 0x5F, 0xFA, 0x0E, 0x06, 0x60, 0x60, 0xEB, 0x03, 0x4F, 0xF9, 0x0C, 0x01, 0x28, 0x17,
  0xFB, 0x30, 0x10, 0xCA, 0x0D, 0x4F, 0xF0, 0xE0, 0x13, 0x81, 0x7F, 0xB4, 0x01, 0x0E, 0xA0, 0x73,
  0xFF, 0x06, 0x48, 0x17, 0xFB, 0x50, 0x6A, 0x0D, 0x3F, 0xE0, 0xE5, 0x81, 0x7F, 0xB6, 0x0E, 0xA0,
  0x22, 0xFE, 0x0A, 0x58, 0x17, 0xFB, 0x60, 0xAA, 0x05, 0x2F, 0xE0, 0x85, 0x81, 0x7F, 0xB6, 0x08,
  0xA0, 0x62, 0xFE, 0x08, 0x58, 0x27, 0xFE, 0x45, 0x08, 0xA0, 0x62, 0xFE, 0x0A, 0x50, 0x50, 0xEA,
  0x0A, 0x01, 0x30, 0xAA, 0x05, 0x20, 0xBF, 0xD0, 0xE6, 0x01, 0x0A, 0xA0, 0xE0, 0x72, 0x0E, 0xA0,
  0x22, 0x03, 0x0E, 0xFD, 0x06, 0x78, 0x43, 0xCF, 0xA0, 0x6A, 0x0D, 0x40, 0x10, 0x68, 0x04, 0x70,
  0xAA, 0x0E, 0x01, 0x71, 0x82, 0x61, 0x1E, 0xA0, 0x77, 0x71, 0x0D, 0xA0, 0xC0, 0x17, 0x10, 0x10,
  0xCA, 0x0D, 0x77, 0x20, 0x3B, 0x0E, 0x06, 0x60, 0x60, 0xEB, 0x03, 0x77, 0x30, 0x5C, 0x84, 0xEA,
  0x88, 0xAE, 0xC0, 0x57, 0x75, 0x03, 0x0D, 0xFB, 0x0D, 0x03, 0x77, 0x71, 0x07, 0x0D, 0xE0, 0xD0,
  0x77, 0x77, 0x58, 0x42, 0x57, 0x75, 0x27, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_36_alert_auto_delete() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 1, 34, 34), Box(0, 0, 35, 35),
      ic_sharp_36_alert_auto_delete_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_36_alert_error_outline 36x36, 4-bit Alpha,  RLE, 253 bytes.
static const uint8_t ic_sharp_36_alert_error_outline_data[] PROGMEM = {
  0x73, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x74, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x05,
  0x0D, 0xFF, 0x0D, 0x05, 0x74, 0x08, 0xC8, 0x2D, 0x94, 0x22, 0x82, 0x24, 0x9D, 0xC0, 0x77, 0x20,
  0xAB, 0x0D, 0x06, 0x73, 0x06, 0x0D, 0xB0, 0xA7, 0x08, 0xB0, 0xA7, 0x70, 0xAB, 0x07, 0x50, 0x5B,
  0x08, 0x77, 0x20, 0x8B, 0x05, 0x40, 0xDA, 0x0A, 0x78, 0x23, 0x77, 0x37, 0x0A, 0xA0, 0xD3, 0x07,
  0xA0, 0xD7, 0x10, 0x7A, 0x07, 0x71, 0x0D, 0xA0, 0x72, 0x0E, 0xA0, 0x67, 0x10, 0x7A, 0x07, 0x71,
  0x06, 0xA8, 0x1E, 0x03, 0xA0, 0xD7, 0x20, 0x7A, 0x07, 0x72, 0x0D, 0xA0, 0x30, 0x8A, 0x08, 0x72,
  0x07, 0xA0, 0x77, 0x20, 0x8A, 0x08, 0x0B, 0xA0, 0x47, 0x20, 0x7A, 0x07, 0x72, 0x04, 0xA0, 0xB0,
  0xDA, 0x02, 0x72, 0x07, 0xA0, 0x77, 0x20, 0x2A, 0x0D, 0x0E, 0xA7, 0x30, 0x7A, 0x07, 0x73, 0xA0,
  0x0E, 0xA7, 0x30, 0x7A, 0x07, 0x73, 0xA0, 0xE0, 0xDA, 0x02, 0x72, 0x82, 0x37, 0x73, 0x72, 0x02,
  0xA0, 0xD0, 0xBA, 0x04, 0x77, 0x71, 0x04, 0xA0, 0xB0, 0x8A, 0x08, 0x77, 0x71, 0x08, 0xA0, 0x80,
  0x3A, 0x0D, 0x72, 0x82, 0x37, 0x73, 0x72, 0x0D, 0xA8, 0x13, 0x0E, 0xA0, 0x67, 0x10, 0x7A, 0x07,
  0x71, 0x06, 0xA0, 0xE2, 0x07, 0xA0, 0xD7, 0x10, 0x7A, 0x07, 0x71, 0x0D, 0xA0, 0x73, 0x0D, 0xA0,
  0xA7, 0x82, 0x37, 0x73, 0x70, 0xAA, 0x0D, 0x40, 0x5B, 0x08, 0x77, 0x20, 0x8B, 0x05, 0x50, 0x8B,
  0x0A, 0x77, 0x0A, 0xB0, 0x77, 0x0A, 0xB0, 0xD0, 0x67, 0x30, 0x60, 0xDB, 0x0A, 0x72, 0x08, 0xC8,
  0x2D, 0x94, 0x22, 0x82, 0x24, 0x9D, 0xC0, 0x77, 0x40, 0x50, 0xDF, 0xF0, 0xD0, 0x57, 0x70, 0x70,
  0xEF, 0xB0, 0xE0, 0x77, 0x74, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_36_alert_error_outline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_sharp_36_alert_error_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_36_alert_error 36x36, 4-bit Alpha,  RLE, 149 bytes.
static const uint8_t ic_sharp_36_alert_error_data[] PROGMEM = {
  0x73, 0x89, 0x03, 0x8B, 0xDE, 0xED, 0xB8, 0x37, 0x74, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x05,
  0x0D, 0xFF, 0x0D, 0x05, 0x74, 0x07, 0xFF, 0xC0, 0x77, 0x20, 0xAF, 0xFE, 0x0A, 0x70, 0x8F, 0xFF,
  0x90, 0x85, 0x05, 0xFF, 0xFB, 0x05, 0x40, 0xDF, 0xFF, 0xB0, 0xD3, 0x07, 0xFD, 0x2F, 0xD0, 0x72,
  0x0E, 0xFD, 0x2F, 0xD8, 0x1E, 0x03, 0xFE, 0x2F, 0xE0, 0x30, 0x8F, 0xE2, 0xFE, 0x08, 0x0B, 0xFE,
  0x2F, 0xE0, 0xB0, 0xDF, 0xE2, 0xFE, 0x0D, 0x0E, 0xFE, 0x2F, 0xE0, 0x0E, 0xFE, 0x2F, 0xE0, 0xE0,
  0xDF, 0xE2, 0xFE, 0x0D, 0x0B, 0xFF, 0xFF, 0x0B, 0x08, 0xFF, 0xFF, 0x08, 0x03, 0xFF, 0xFF, 0x81,
  0x30, 0xEF, 0xD2, 0xFD, 0x0E, 0x20, 0x7F, 0xD2, 0xFD, 0x07, 0x30, 0xDF, 0xFF, 0xB0, 0xD4, 0x05,
  0xFF, 0xFB, 0x05, 0x50, 0x8F, 0xFF, 0x90, 0x87, 0x0A, 0xFF, 0xE0, 0xA7, 0x20, 0x7F, 0xFC, 0x07,
  0x74, 0x05, 0x0D, 0xFF, 0x0D, 0x05, 0x77, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x48, 0x90, 0x38,
  0xBD, 0xEE, 0xDB, 0x83, 0x73,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_36_alert_error() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_sharp_36_alert_error_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_36_alert_notification_important 36x36, 4-bit Alpha,  RLE, 121 bytes.
static const uint8_t ic_sharp_36_alert_notification_important_data[] PROGMEM = {
  0x74, 0x00, 0x27, 0x77, 0x09, 0xA0, 0x97, 0x75, 0x02, 0xC0, 0x27, 0x74, 0x03, 0xC0, 0x37, 0x72,
  0x81, 0x18, 0xDC, 0x81, 0xD8, 0x17, 0x60, 0x60, 0xEF, 0x90, 0xE0, 0x67, 0x40, 0x7F, 0xD0, 0x77,
  0x20, 0x4F, 0xF0, 0x47, 0x10, 0xDF, 0xF0, 0xC7, 0x04, 0xE0, 0x72, 0x07, 0xE0, 0x46, 0x09, 0xE0,
  0x72, 0x07, 0xE0, 0x96, 0x0C, 0xE0, 0x72, 0x07, 0xE0, 0xC6, 0x0E, 0xE0, 0x72, 0x07, 0xE0, 0xE6,
  0xF0, 0x72, 0x07, 0xF6, 0xF0, 0x72, 0x07, 0xF6, 0xFF, 0xC6, 0xFF, 0xC6, 0xFF, 0xC6, 0xF0, 0x72,
  0x07, 0xF6, 0xF0, 0x72, 0x07, 0xF6, 0xF0, 0x72, 0x07, 0xF5, 0x07, 0xFF, 0xC0, 0x73, 0x07, 0xFF,
  0xE8, 0x17, 0x07, 0xFF, 0xF9, 0x07, 0xFF, 0xFB, 0x80, 0xA4, 0x77, 0x77, 0x75, 0x0D, 0xC0, 0xD7,
  0x74, 0x08, 0xC0, 0x87, 0x75, 0x82, 0x8D, 0xD8, 0x73,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_36_alert_notification_important() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 3, 29, 32), Box(0, 0, 35, 35),
      ic_sharp_36_alert_notification_important_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_36_alert_warning_amber 36x36, 4-bit Alpha,  RLE, 223 bytes.
static const uint8_t ic_sharp_36_alert_warning_amber_data[] PROGMEM = {
  0x77, 0x20, 0x04, 0x77, 0x77, 0x40, 0x0D, 0x77, 0x77, 0x30, 0x6A, 0x06, 0x77, 0x77, 0x10, 0x10,
  0xEA, 0x0E, 0x01, 0x77, 0x77, 0x09, 0xC0, 0x97, 0x77, 0x60, 0x3E, 0x03, 0x77, 0x75, 0x0B, 0xA0,
  0x0A, 0xA0, 0xB7, 0x77, 0x40, 0x5B, 0x00, 0x2B, 0x05, 0x77, 0x73, 0x0D, 0xA0, 0x82, 0x08, 0xA0,
  0xD7, 0x77, 0x20, 0x7A, 0x0E, 0x40, 0xEA, 0x07, 0x77, 0x70, 0x10, 0xEA, 0x05, 0x40, 0x5A, 0x0E,
  0x01, 0x77, 0x60, 0xAA, 0x0C, 0x60, 0xCA, 0x0A, 0x77, 0x50, 0x3B, 0x81, 0x30, 0x7A, 0x81, 0x70,
  0x3B, 0x03, 0x77, 0x40, 0xCA, 0x0A, 0x20, 0x7A, 0x07, 0x20, 0xAA, 0x0C, 0x77, 0x30, 0x6A, 0x0E,
  0x01, 0x20, 0x7A, 0x07, 0x20, 0x10, 0xEA, 0x06, 0x77, 0x20, 0xEA, 0x07, 0x30, 0x7A, 0x07, 0x30,
  0x7A, 0x0E, 0x77, 0x10, 0x8A, 0x0D, 0x40, 0x7A, 0x07, 0x40, 0xDA, 0x08, 0x76, 0x02, 0xB0, 0x54,
  0x07, 0xA0, 0x74, 0x05, 0xB0, 0x27, 0x50, 0xBA, 0x0B, 0x50, 0x7A, 0x07, 0x50, 0xBA, 0x0B, 0x74,
  0x04, 0xB0, 0x25, 0x82, 0x37, 0x73, 0x50, 0x2B, 0x04, 0x73, 0x0D, 0xA0, 0x97, 0x72, 0x09, 0xA0,
  0xD7, 0x20, 0x6A, 0x0E, 0x01, 0x60, 0x7A, 0x07, 0x60, 0x10, 0xEA, 0x06, 0x70, 0x10, 0xEA, 0x06,
  0x70, 0x7A, 0x07, 0x70, 0x6A, 0x0E, 0x01, 0x60, 0x9A, 0x0D, 0x71, 0x07, 0xA0, 0x77, 0x10, 0xDA,
  0x09, 0x50, 0x3B, 0x04, 0x77, 0x60, 0x4B, 0x03, 0x40, 0xBA, 0x0E, 0x80, 0xA2, 0x70, 0xEA, 0x0B,
  0x30, 0x5F, 0xFF, 0xFA, 0x05, 0x20, 0xDF, 0xFF, 0xFA, 0x81, 0xD0, 0x28, 0x0B, 0x47, 0x02,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_36_alert_warning_amber() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 34, 31), Box(0, 0, 35, 35),
      ic_sharp_36_alert_warning_amber_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_36_alert_warning 36x36, 4-bit Alpha,  RLE, 148 bytes.
static const uint8_t ic_sharp_36_alert_warning_data[] PROGMEM = {
  0x77, 0x20, 0x04, 0x77, 0x77, 0x40, 0x0D, 0x77, 0x77, 0x30, 0x7A, 0x07, 0x77, 0x77, 0x10, 0x10,
  0xEA, 0x0E, 0x01, 0x77, 0x77, 0x09, 0xC0, 0x97, 0x77, 0x60, 0x3E, 0x03, 0x77, 0x75, 0x0C, 0xE0,
  0xC7, 0x77, 0x40, 0x6F, 0x90, 0x67, 0x77, 0x20, 0x10, 0xEF, 0x90, 0xE0, 0x17, 0x77, 0x10, 0x8F,
  0xB0, 0x87, 0x77, 0x02, 0xFD, 0x02, 0x77, 0x60, 0xBF, 0xD0, 0xB7, 0x75, 0x05, 0xE2, 0xE0, 0x57,
  0x74, 0x0D, 0xE2, 0xE0, 0xD7, 0x73, 0x07, 0xF2, 0xF0, 0x77, 0x71, 0x01, 0x0E, 0xF2, 0xF0, 0xE0,
  0x17, 0x70, 0xAF, 0x92, 0xF9, 0x0A, 0x76, 0x04, 0xFA, 0x2F, 0xA0, 0x47, 0x50, 0xCF, 0xA2, 0xFA,
  0x0C, 0x74, 0x06, 0xFF, 0xF9, 0x06, 0x72, 0x01, 0x0E, 0xFF, 0xF9, 0x0E, 0x01, 0x71, 0x09, 0xFF,
  0xFB, 0x09, 0x70, 0x3F, 0xD2, 0xFD, 0x03, 0x60, 0xBF, 0xD2, 0xFD, 0x0B, 0x50, 0x5F, 0xFF, 0xF0,
  0x54, 0x0D, 0xFF, 0xFF, 0x0D, 0x30, 0x8F, 0xFF, 0xFA, 0x81, 0x80, 0x2F, 0xFF, 0xFC, 0x02, 0x0A,
  0xFF, 0xFF, 0xC0, 0xA0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_36_alert_warning() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 34, 31), Box(0, 0, 35, 35),
      ic_sharp_36_alert_warning_data, Alpha4(color::Black));
  return value;
}
