#include "editor.h"

using namespace roo_display;

// Image file ic_sharp_48_editor_add_chart 48x48, 4-bit Alpha,  RLE, 161 bytes.
static const uint8_t ic_sharp_48_editor_add_chart_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFB, 0x77, 0x01, 0x0E, 0xFF, 0xFD, 0x77, 0x0A, 0xFF, 0xFE, 0x4C, 0x60,
  0xDF, 0xFF, 0xE4, 0xC6, 0xC7, 0x77, 0x7C, 0x6C, 0x77, 0x77, 0xC6, 0xC7, 0x77, 0x7C, 0x6C, 0x77,
  0x77, 0xC6, 0xC7, 0x5C, 0x6F, 0xFE, 0x75, 0xC6, 0xFF, 0xE7, 0x5C, 0x6F, 0xFE, 0x75, 0xC6, 0xFF,
  0xE7, 0x5C, 0x75, 0xC6, 0xC7, 0x5C, 0x75, 0xC6, 0xC4, 0xC4, 0xC7, 0x5C, 0x6C, 0x4C, 0x4C, 0x75,
  0xC6, 0xC4, 0xC4, 0xC7, 0x5C, 0x6C, 0x4C, 0x4C, 0x75, 0xC6, 0xC4, 0xC4, 0xC7, 0x77, 0x1C, 0x4C,
  0x4C, 0x77, 0x71, 0xC4, 0xC4, 0xC4, 0xC7, 0x7C, 0x4C, 0x4C, 0x4C, 0x77, 0xC4, 0xC4, 0xC4, 0xC4,
  0xC6, 0xC4, 0xC4, 0xC4, 0xC4, 0xC6, 0xC4, 0xC4, 0xC4, 0xC4, 0xC6, 0xC4, 0xC4, 0xC4, 0xC4, 0xC6,
  0xC4, 0xC4, 0xC4, 0xC4, 0xC6, 0xC4, 0xC4, 0xC4, 0xC4, 0xC6, 0xC7, 0x77, 0x7C, 0x6C, 0x77, 0x77,
  0xC6, 0xC7, 0x77, 0x7C, 0x6C, 0x77, 0x77, 0xC6, 0x0D, 0xFF, 0xFF, 0xE0, 0xD6, 0x0A, 0xFF, 0xFF,
  0xE0, 0xA6, 0x01, 0x0E, 0xFF, 0xFF, 0xC0, 0xE0, 0x17, 0x81, 0x1A, 0xDF, 0xFF, 0xF8, 0x1D, 0xA1,
  0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_add_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 6, 45, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_add_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_add_comment 48x48, 4-bit Alpha,  RLE, 135 bytes.
static const uint8_t ic_sharp_48_editor_add_comment_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x09, 0x0D, 0x80, 0xC2, 0xF0, 0xD8, 0x09, 0xB6, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4,
  0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0xFF,
  0xFF, 0x77, 0x6F, 0xFE, 0x77, 0x6F, 0xFE, 0x77, 0x6F, 0xFE, 0x77, 0x6F, 0xFF, 0xF4, 0x80, 0xC0,
  0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4,
  0x80, 0xC0, 0xF4, 0x80, 0x9B, 0x6F, 0x0D, 0x80, 0xC3, 0xF0, 0xA8, 0x0C, 0x3F, 0x01, 0x0E, 0x80,
  0xC2, 0xF1, 0x81, 0x1A, 0xD8, 0x0C, 0x0F, 0x77, 0x77, 0x40, 0x7F, 0x77, 0x77, 0x50, 0x7E, 0x77,
  0x77, 0x60, 0x7D, 0x77, 0x77, 0x70, 0x7C, 0x80, 0xC0, 0x00, 0x7B, 0x80, 0xC1, 0x00, 0x7A, 0x80,
  0xC2, 0x00, 0x79, 0x80, 0xC3, 0x00, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_add_comment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_add_comment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_align_horizontal_center 48x48, 4-bit Alpha,  RLE, 107 bytes.
static const uint8_t ic_sharp_48_editor_align_horizontal_center_data[] PROGMEM = {
  0x77, 0x2C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77,
  0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x28, 0x0B,
  0xA4, 0xF7, 0x72, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7,
  0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x1F, 0xFF, 0xB7, 0x5F, 0xFF, 0xB7,
  0x5F, 0xFF, 0xB7, 0x5F, 0xFF, 0xB7, 0x5F, 0xFF, 0xB7, 0x5F, 0xFF, 0xB7, 0x77, 0x1C, 0x77, 0x77,
  0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C,
  0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_align_horizontal_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 41, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_align_horizontal_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_align_horizontal_left 48x48, 4-bit Alpha,  RLE, 123 bytes.
static const uint8_t ic_sharp_48_editor_align_horizontal_left_data[] PROGMEM = {
  0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8,
  0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC4, 0x80,
  0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x80, 0xC0,
  0xF8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8,
  0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC4, 0xFF, 0xE7, 0x5C, 0x4F, 0xFE, 0x75, 0xC4,
  0xFF, 0xE7, 0x5C, 0x4F, 0xFE, 0x75, 0xC4, 0xFF, 0xE7, 0x5C, 0x4F, 0xFE, 0x75, 0xC8, 0x0C, 0x00,
  0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8,
  0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00, 0xC8, 0x0C, 0x00,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_align_horizontal_left() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_align_horizontal_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_align_horizontal_right 48x48, 4-bit Alpha,  RLE, 123 bytes.
static const uint8_t ic_sharp_48_editor_align_horizontal_right_data[] PROGMEM = {
  0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80,
  0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x08, 0x0C, 0x0F,
  0x48, 0x0C, 0x0F, 0x48, 0x0C, 0x0F, 0x48, 0x0C, 0x0F, 0x48, 0x0C, 0x0F, 0x48, 0x0C, 0x0F, 0x4C,
  0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80,
  0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x75, 0xFF, 0xE4, 0xC7, 0x5F, 0xFE, 0x4C, 0x75,
  0xFF, 0xE4, 0xC7, 0x5F, 0xFE, 0x4C, 0x75, 0xFF, 0xE4, 0xC7, 0x5F, 0xFE, 0x4C, 0x80, 0xC0, 0x0C,
  0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80,
  0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_align_horizontal_right() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_align_horizontal_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_align_vertical_bottom 48x48, 4-bit Alpha,  RLE, 112 bytes.
static const uint8_t ic_sharp_48_editor_align_vertical_bottom_data[] PROGMEM = {
  0x73, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76,
  0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7,
  0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E,
  0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7,
  0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7,
  0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77,
  0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE8, 0x0A, 0xC6, 0x08, 0x0A, 0xB4, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_align_vertical_bottom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_align_vertical_bottom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_align_vertical_center 48x48, 4-bit Alpha,  RLE, 121 bytes.
static const uint8_t ic_sharp_48_editor_align_vertical_center_data[] PROGMEM = {
  0x74, 0xE7, 0x77, 0x77, 0xE7, 0x77, 0x77, 0xE7, 0x77, 0x77, 0xE7, 0x77, 0x77, 0xE7, 0x77, 0x77,
  0xE7, 0x77, 0x77, 0xE7, 0x1E, 0x77, 0x7E, 0x71, 0xE7, 0x77, 0xE7, 0x1E, 0x77, 0x7E, 0x71, 0xE7,
  0x77, 0xE7, 0x1E, 0x77, 0x7E, 0x71, 0xE7, 0x77, 0xE7, 0x1E, 0x77, 0x7E, 0x71, 0xE7, 0x77, 0xE7,
  0x1E, 0x77, 0x7E, 0x71, 0xE7, 0x30, 0x48, 0x0C, 0x4F, 0x04, 0x80, 0xC4, 0xF0, 0x48, 0x0C, 0x4F,
  0x04, 0x80, 0xC4, 0xF7, 0x4E, 0x71, 0xE7, 0x77, 0xE7, 0x1E, 0x77, 0x7E, 0x71, 0xE7, 0x77, 0xE7,
  0x1E, 0x77, 0x7E, 0x71, 0xE7, 0x77, 0xE7, 0x1E, 0x77, 0x7E, 0x71, 0xE7, 0x77, 0xE7, 0x1E, 0x77,
  0x7E, 0x71, 0xE7, 0x77, 0xE7, 0x1E, 0x77, 0x7E, 0x77, 0x77, 0x7E, 0x77, 0x77, 0x7E, 0x77, 0x77,
  0x7E, 0x77, 0x77, 0x7E, 0x77, 0x77, 0x7E, 0x77, 0x73,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_align_vertical_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_align_vertical_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_align_vertical_top 48x48, 4-bit Alpha,  RLE, 112 bytes.
static const uint8_t ic_sharp_48_editor_align_vertical_top_data[] PROGMEM = {
  0x80, 0xAB, 0x4F, 0x80, 0xAC, 0x60, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77,
  0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71,
  0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76,
  0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E,
  0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x1E, 0x77, 0x6E, 0x71, 0xE7, 0x76, 0xE7, 0x77, 0x76, 0xE7,
  0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77,
  0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x76, 0xE7, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_align_vertical_top() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_align_vertical_top_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_area_chart 48x48, 4-bit Alpha,  RLE, 224 bytes.
static const uint8_t ic_sharp_48_editor_area_chart_data[] PROGMEM = {
  0x77, 0x30, 0x50, 0x97, 0x77, 0x75, 0x83, 0x1E, 0xFB, 0x17, 0x77, 0x73, 0x0B, 0xB0, 0xD0, 0x37,
  0x77, 0x71, 0x07, 0xE0, 0x67, 0x77, 0x60, 0x3F, 0x90, 0x97, 0x77, 0x50, 0xDF, 0xA0, 0xB0, 0x17,
  0x77, 0x20, 0x9F, 0xC0, 0xD0, 0x37, 0x77, 0x05, 0xFF, 0x06, 0x71, 0x09, 0x73, 0x01, 0x0E, 0xFF,
  0xFB, 0x0C, 0x02, 0x71, 0x0B, 0xFF, 0xFD, 0x0E, 0x05, 0x60, 0x7F, 0xFF, 0xF9, 0x09, 0x40, 0x3E,
  0x0E, 0x09, 0xFF, 0xFA, 0x0C, 0x02, 0x20, 0xDE, 0x82, 0x50, 0x5E, 0xFF, 0xF9, 0x81, 0xE5, 0x9E,
  0x09, 0x30, 0x20, 0xCF, 0xFF, 0xF9, 0x0D, 0x60, 0xAF, 0xF0, 0x40, 0xEF, 0xD0, 0x27, 0x06, 0xFE,
  0x10, 0x20, 0xCF, 0xB0, 0x67, 0x20, 0x30, 0xDF, 0xC3, 0x0A, 0xF9, 0x0A, 0x40, 0x50, 0x95, 0x01,
  0x0B, 0xFB, 0x40, 0x7E, 0x0D, 0x01, 0x38, 0x32, 0xEF, 0xC1, 0x50, 0x8F, 0xA5, 0x04, 0x0E, 0xC0,
  0x44, 0x0C, 0xB0, 0xE0, 0x45, 0x05, 0x0E, 0xF0, 0x95, 0x02, 0x0C, 0xA0, 0x84, 0x08, 0xE0, 0x75,
  0x02, 0x0C, 0xF0, 0xB0, 0x15, 0x0A, 0x0C, 0x40, 0x4F, 0x90, 0xB0, 0x15, 0x0A, 0xF0, 0xD0, 0x35,
  0x01, 0x30, 0x10, 0xEF, 0xA0, 0xD0, 0x35, 0x06, 0xF9, 0x06, 0x71, 0x0B, 0xFD, 0x06, 0x50, 0x30,
  0xDF, 0x09, 0x60, 0x7F, 0xF0, 0x95, 0x01, 0x0B, 0xF0, 0xB0, 0x13, 0x03, 0xFF, 0xA0, 0xC0, 0x15,
  0x08, 0xF0, 0xD0, 0x32, 0x0D, 0xFF, 0xB0, 0xE0, 0x45, 0xFA, 0x06, 0x09, 0xFF, 0xE0, 0x74, 0xFF,
  0xFF, 0xC0, 0xB0, 0x12, 0xFF, 0xFF, 0xD0, 0xD0, 0x31, 0xFF, 0xFF, 0xF0, 0x68, 0x09, 0xD0, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_area_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_area_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_attach_file 48x48, 4-bit Alpha,  RLE, 208 bytes.
static const uint8_t ic_sharp_48_editor_attach_file_data[] PROGMEM = {
  0x48, 0x62, 0x8C, 0xEE, 0xC8, 0x27, 0x60, 0x9F, 0x90, 0x97, 0x40, 0xBF, 0xB0, 0xB7, 0x20, 0x9B,
  0x0A, 0x03, 0x20, 0x30, 0xAB, 0x09, 0x70, 0x2B, 0x07, 0x60, 0x7B, 0x02, 0x60, 0x8A, 0x0A, 0x71,
  0x0A, 0xA0, 0x86, 0x0C, 0xA0, 0x37, 0x10, 0x3A, 0x0C, 0x60, 0xEA, 0x73, 0xA0, 0xE6, 0xB7, 0x3B,
  0x6B, 0x73, 0xB6, 0xB3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3,
  0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4,
  0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3,
  0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0xB4, 0xB3, 0xE3, 0x0E, 0xA0, 0x12,
  0x01, 0xA0, 0xE3, 0xE3, 0x0B, 0xA8, 0x2B, 0x11, 0xBA, 0x0B, 0x3E, 0x30, 0x4F, 0x90, 0x43, 0xE4,
  0x08, 0xE0, 0x84, 0xB0, 0xEA, 0x58, 0x44, 0xBE, 0xEB, 0x45, 0xA0, 0xE0, 0xDA, 0x02, 0x77, 0x02,
  0xA0, 0xD0, 0xAA, 0x06, 0x77, 0x06, 0xA0, 0xA0, 0x5A, 0x0C, 0x77, 0x0C, 0xA8, 0x15, 0x1E, 0xA0,
  0x67, 0x50, 0x6A, 0x82, 0xE1, 0x07, 0xB0, 0x47, 0x30, 0x4B, 0x07, 0x30, 0xCB, 0x06, 0x71, 0x06,
  0xB0, 0xC4, 0x01, 0x0D, 0xB8, 0x1C, 0x62, 0x28, 0x12, 0x6C, 0xB0, 0xD0, 0x15, 0x01, 0x0C, 0xFD,
  0x0C, 0x01, 0x71, 0x07, 0x0E, 0xF9, 0x0E, 0x07, 0x74, 0x89, 0x01, 0x5A, 0xDE, 0xED, 0xA5, 0x16,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_attach_file() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(14, 2, 35, 45), Box(0, 0, 47, 47),
      ic_sharp_48_editor_attach_file_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_attach_money 48x48, 4-bit Alpha,  RLE, 169 bytes.
static const uint8_t ic_sharp_48_editor_attach_money_data[] PROGMEM = {
  0x71, 0xE7, 0x71, 0xE7, 0x71, 0xE7, 0x71, 0xE7, 0x60, 0x30, 0x8E, 0x07, 0x01, 0x72, 0x04, 0x0C,
  0xFB, 0x09, 0x70, 0x8F, 0xE0, 0xD0, 0x14, 0x08, 0xE8, 0x2E, 0xDD, 0xED, 0x0C, 0x30, 0x3D, 0x08,
  0x02, 0x40, 0x30, 0xBC, 0x07, 0x20, 0x9C, 0x05, 0x71, 0x0B, 0xB0, 0xE2, 0x0D, 0xB0, 0xC7, 0x20,
  0x4C, 0x03, 0x1C, 0x09, 0x73, 0xC8, 0x15, 0x0D, 0xB0, 0xC7, 0x72, 0x0A, 0xC0, 0x77, 0x71, 0x05,
  0xD0, 0xB0, 0x37, 0x70, 0xBE, 0x81, 0xC7, 0x37, 0x50, 0xBF, 0x98, 0x1E, 0x94, 0x73, 0x07, 0xFB,
  0x0D, 0x06, 0x72, 0x81, 0x18, 0xEF, 0xA0, 0xC0, 0x27, 0x38, 0x14, 0x8C, 0xF0, 0xD0, 0x27, 0x58,
  0x11, 0x6C, 0xD0, 0xC7, 0x71, 0x06, 0x0E, 0xC0, 0x57, 0x71, 0x04, 0xC0, 0xB7, 0x72, 0x0C, 0xB0,
  0xD0, 0x4C, 0x02, 0x73, 0x0A, 0xC0, 0x1C, 0x06, 0x73, 0x0C, 0xB8, 0x1E, 0x0C, 0xB0, 0xE0, 0x27,
  0x10, 0x4C, 0x81, 0xB0, 0x4C, 0x81, 0xE7, 0x14, 0x01, 0x08, 0xD0, 0x52, 0x09, 0xE8, 0x2E, 0xDD,
  0xEE, 0x0B, 0x40, 0x9F, 0xF0, 0xB6, 0x04, 0x0C, 0xFB, 0x0E, 0x06, 0x72, 0x03, 0x08, 0xE0, 0x80,
  0x47, 0x6E, 0x77, 0x1E, 0x77, 0x1E, 0x77, 0x1E, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_attach_money() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(12, 6, 32, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_attach_money_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_auto_graph 48x48, 4-bit Alpha,  RLE, 320 bytes.
static const uint8_t ic_sharp_48_editor_auto_graph_data[] PROGMEM = {
  0x77, 0x00, 0x38, 0x0C, 0x60, 0x00, 0xA8, 0x0C, 0x50, 0x02, 0xA0, 0x28, 0x0C, 0x40, 0x09, 0xA0,
  0x98, 0x0C, 0x30, 0x01, 0x0E, 0xA0, 0xE0, 0x18, 0x0C, 0x00, 0x81, 0x29, 0xEC, 0x81, 0xE9, 0x27,
  0x77, 0x74, 0x03, 0x0A, 0xFB, 0x0A, 0x03, 0x77, 0x77, 0x20, 0x30, 0xAF, 0xB0, 0xA0, 0x37, 0x77,
  0x74, 0x81, 0x29, 0xEC, 0x81, 0xE9, 0x27, 0x00, 0x37, 0x77, 0x60, 0x10, 0xEA, 0x0E, 0x01, 0x72,
  0x00, 0xA7, 0x77, 0x70, 0x9A, 0x09, 0x72, 0x02, 0xA0, 0x27, 0x77, 0x60, 0x2A, 0x02, 0x72, 0x09,
  0xA0, 0x97, 0x30, 0x30, 0x97, 0x00, 0x37, 0x00, 0xA7, 0x10, 0x20, 0x9C, 0x09, 0x02, 0x78, 0x22,
  0xEF, 0x96, 0x00, 0xA7, 0x00, 0x36, 0x03, 0x0A, 0xF9, 0x0A, 0x03, 0x40, 0x10, 0xDB, 0x09, 0x40,
  0x2A, 0x02, 0x77, 0x03, 0x0A, 0xF9, 0x0A, 0x03, 0x30, 0x10, 0xCC, 0x06, 0x40, 0x9A, 0x09, 0x77,
  0x20, 0x20, 0x9C, 0x09, 0x02, 0x50, 0xBC, 0x08, 0x30, 0x20, 0x9C, 0x09, 0x02, 0x77, 0x20, 0x9A,
  0x09, 0x60, 0xAC, 0x0A, 0x20, 0x30, 0xAF, 0x90, 0xA0, 0x37, 0x70, 0x2A, 0x02, 0x50, 0x8C, 0x0B,
  0x30, 0x30, 0xAF, 0x90, 0xA0, 0x37, 0x71, 0x00, 0xA5, 0x07, 0xC0, 0xC6, 0x02, 0x09, 0xC0, 0x90,
  0x27, 0x10, 0x08, 0x70, 0x03, 0x40, 0x5C, 0x0D, 0x01, 0x71, 0x09, 0xA0, 0x97, 0x20, 0x8A, 0x08,
  0x74, 0x04, 0xC0, 0xE0, 0x27, 0x20, 0x2A, 0x02, 0x71, 0x07, 0xC0, 0x87, 0x20, 0x20, 0xEC, 0x03,
  0x74, 0x00, 0xA7, 0x10, 0x7E, 0x08, 0x70, 0x10, 0xDC, 0x05, 0x75, 0x00, 0x37, 0x07, 0xF9, 0x08,
  0x50, 0x10, 0xCC, 0x06, 0x77, 0x70, 0x7F, 0xB0, 0x84, 0x0B, 0xC0, 0x87, 0x77, 0x07, 0xD0, 0x07,
  0xD0, 0x82, 0x0A, 0xC0, 0x97, 0x77, 0x07, 0xD0, 0x72, 0x07, 0xD0, 0x08, 0xC0, 0xB7, 0x77, 0x07,
  0xD0, 0x74, 0x07, 0xFA, 0x0C, 0x77, 0x70, 0x7D, 0x07, 0x60, 0x7F, 0x0D, 0x01, 0x77, 0x60, 0x7D,
  0x07, 0x71, 0x07, 0xD0, 0xE0, 0x27, 0x76, 0x07, 0xD0, 0x77, 0x30, 0x7C, 0x03, 0x77, 0x60, 0x7D,
  0x07, 0x75, 0x07, 0xA0, 0x57, 0x76, 0x07, 0xD0, 0x77, 0x70, 0x70, 0x67, 0x76, 0x07, 0xD0, 0x78,
  0x0C, 0x10, 0x07, 0xC0, 0x78, 0x0C, 0x30, 0x07, 0xA0, 0x78, 0x0C, 0x50, 0x00, 0x78, 0x0C, 0x00,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_auto_graph() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 4, 45, 40), Box(0, 0, 47, 47),
      ic_sharp_48_editor_auto_graph_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_bar_chart 48x48, 4-bit Alpha,  RLE, 108 bytes.
static const uint8_t ic_sharp_48_editor_bar_chart_data[] PROGMEM = {
  0x75, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73,
  0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x75, 0xF9, 0x4F,
  0x97, 0x5F, 0x94, 0xF9, 0x75, 0xF9, 0x4F, 0x97, 0x5F, 0x94, 0xF9, 0x75, 0xF9, 0x4F, 0x97, 0x5F,
  0x94, 0xF9, 0x75, 0xF9, 0x4F, 0x97, 0x5F, 0x94, 0xF9, 0x75, 0xF9, 0x4F, 0x94, 0xFF, 0xA4, 0xF9,
  0x4F, 0xFA, 0x4F, 0x94, 0xFF, 0xA4, 0xF9, 0x4F, 0xFA, 0x4F, 0x94, 0xFF, 0xA4, 0xF9, 0x4F, 0xFA,
  0x4F, 0x94, 0xFF, 0xA4, 0xF9, 0x4F, 0xFA, 0x4F, 0x94, 0xFF, 0xA4, 0xF9, 0x4F, 0xFA, 0x4F, 0x94,
  0xFF, 0xA4, 0xF9, 0x4F, 0xFA, 0x4F, 0x94, 0xFF, 0xA4, 0xF9, 0x4F, 0x90,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_bar_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 8, 39, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_bar_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_all 48x48, 4-bit Alpha,  RLE, 91 bytes.
static const uint8_t ic_sharp_48_editor_border_all_data[] PROGMEM = {
  0x80, 0xAA, 0x0F, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75,
  0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0x80, 0xAA, 0x4F, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F,
  0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C,
  0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0x80, 0xAA, 0x0F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_all() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_all_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_bottom 48x48, 4-bit Alpha,  RLE, 79 bytes.
static const uint8_t ic_sharp_48_editor_border_bottom_data[] PROGMEM = {
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9,
  0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94,
  0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_bottom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_bottom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_clear 48x48, 4-bit Alpha,  RLE, 94 bytes.
static const uint8_t ic_sharp_48_editor_border_clear_data[] PROGMEM = {
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9,
  0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94,
  0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0xC4, 0xC4, 0xC4, 0xC4,
  0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_clear() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_clear_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_color 48x48, 4-bit Alpha,  RLE, 222 bytes.
static const uint8_t ic_sharp_48_editor_border_color_data[] PROGMEM = {
  0x77, 0x76, 0x82, 0x1B, 0xE8, 0x77, 0x77, 0x70, 0x10, 0xDB, 0x0A, 0x77, 0x77, 0x50, 0x10, 0xDD,
  0x0A, 0x77, 0x77, 0x30, 0x10, 0xDF, 0x0A, 0x77, 0x77, 0x20, 0x6F, 0xA0, 0xA7, 0x77, 0x72, 0x07,
  0xFA, 0x08, 0x77, 0x74, 0x01, 0x04, 0x30, 0x7F, 0x90, 0xE7, 0x77, 0x38, 0x21, 0xDE, 0x43, 0x07,
  0xF0, 0xB7, 0x77, 0x20, 0x10, 0xDA, 0x0E, 0x04, 0x30, 0x7D, 0x0D, 0x01, 0x77, 0x71, 0x01, 0x0D,
  0xC0, 0xE0, 0x43, 0x07, 0xB0, 0xD0, 0x17, 0x77, 0x10, 0x10, 0xDE, 0x0E, 0x04, 0x38, 0x27, 0xFD,
  0x17, 0x77, 0x10, 0x10, 0xDF, 0x90, 0xE0, 0x43, 0x06, 0x01, 0x77, 0x71, 0x01, 0x0D, 0xFB, 0x0E,
  0x04, 0x77, 0x74, 0x01, 0x0D, 0xFD, 0x0E, 0x04, 0x77, 0x72, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77,
  0x71, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x71, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x71, 0x01,
  0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x71, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x71, 0x01, 0x0D, 0xFE,
  0x0D, 0x01, 0x77, 0x71, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x71, 0x01, 0x0D, 0xFE, 0x0D, 0x01,
  0x77, 0x71, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x71, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x72,
  0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x73, 0xFE, 0x0D, 0x01, 0x77, 0x74, 0xFD, 0x0D, 0x01, 0x77, 0x75,
  0xFC, 0x0D, 0x01, 0x77, 0x76, 0xFB, 0x0D, 0x01, 0x77, 0x77, 0xFA, 0x0D, 0x01, 0x77, 0x77, 0x1F,
  0x90, 0xD0, 0x17, 0x77, 0x72, 0xF0, 0xD0, 0x18, 0x0A, 0xE7, 0x08, 0x0C, 0xF4, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_color() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 47), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_color_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_horizontal 48x48, 4-bit Alpha,  RLE, 79 bytes.
static const uint8_t ic_sharp_48_editor_border_horizontal_data[] PROGMEM = {
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9,
  0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9,
  0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0xC4, 0xC4, 0xC4,
  0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_horizontal() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_horizontal_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_inner 48x48, 4-bit Alpha,  RLE, 117 bytes.
static const uint8_t ic_sharp_48_editor_border_inner_data[] PROGMEM = {
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C, 0x77, 0x2C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x2C, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xC7, 0x72, 0xC7, 0x77,
  0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x72, 0x80, 0xA9, 0x4F, 0x77, 0x2C, 0x77, 0x77,
  0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x2C, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9,
  0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xC7, 0x72, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77,
  0x74, 0xC7, 0x72, 0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4,
  0xF9, 0x4C, 0x4C, 0x4C, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_inner() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_inner_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_left 48x48, 4-bit Alpha,  RLE, 130 bytes.
static const uint8_t ic_sharp_48_editor_border_left_data[] PROGMEM = {
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4F, 0x97, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x5C,
  0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x77, 0x74, 0xC7,
  0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C,
  0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x97, 0x77, 0x74, 0xC7, 0x77, 0x74,
  0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75,
  0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74,
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_left() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_outer 48x48, 4-bit Alpha,  RLE, 99 bytes.
static const uint8_t ic_sharp_48_editor_border_outer_data[] PROGMEM = {
  0x80, 0xAA, 0x0F, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x77, 0x77, 0xF9,
  0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4,
  0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77,
  0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7,
  0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77,
  0x80, 0xAA, 0x0F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_outer() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_outer_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_right 48x48, 4-bit Alpha,  RLE, 130 bytes.
static const uint8_t ic_sharp_48_editor_border_right_data[] PROGMEM = {
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4F, 0x97, 0x5C,
  0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5C, 0x77, 0x77, 0x4C, 0x77,
  0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C,
  0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C,
  0x77, 0x77, 0x4C, 0x77, 0x77, 0x4F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75,
  0xF9, 0x75, 0xC7, 0x5C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4F,
  0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_right() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_style 48x48, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_sharp_48_editor_border_style_data[] PROGMEM = {
  0x80, 0xAA, 0x0F, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77,
  0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0x4C, 0x77, 0x77,
  0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9,
  0x77, 0x77, 0xF9, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77,
  0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0x4C, 0x77, 0x77,
  0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9,
  0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xC0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_style() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_style_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_top 48x48, 4-bit Alpha,  RLE, 79 bytes.
static const uint8_t ic_sharp_48_editor_border_top_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75,
  0xF9, 0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F,
  0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C, 0x80, 0xA9, 0x40, 0xC7, 0x5C, 0x75, 0xF9,
  0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5C, 0x80, 0xA9, 0x40, 0xC4, 0xC4, 0xC4,
  0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_top() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_top_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_border_vertical 48x48, 4-bit Alpha,  RLE, 132 bytes.
static const uint8_t ic_sharp_48_editor_border_vertical_data[] PROGMEM = {
  0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4C, 0x77, 0x2C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x2C, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xC7, 0x72, 0xC7, 0x77,
  0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x72, 0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C,
  0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4C, 0x77, 0x2C, 0x77, 0x77, 0x4C,
  0x77, 0x77, 0x4C, 0x77, 0x77, 0x4C, 0x77, 0x2C, 0x75, 0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xF9, 0x75,
  0xC7, 0x5F, 0x97, 0x5C, 0x75, 0xC7, 0x72, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74, 0xC7, 0x77, 0x74,
  0xC7, 0x72, 0xC4, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9,
  0x4C, 0x4C, 0x4C, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_border_vertical() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_border_vertical_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_bubble_chart 48x48, 4-bit Alpha,  RLE, 196 bytes.
static const uint8_t ic_sharp_48_editor_bubble_chart_data[] PROGMEM = {
  0x77, 0x48, 0x72, 0x7C, 0xDF, 0xDB, 0x61, 0x77, 0x70, 0x10, 0x9F, 0x90, 0xE0, 0x77, 0x75, 0x02,
  0x0D, 0xFC, 0x0B, 0x01, 0x77, 0x20, 0x10, 0xDF, 0xE0, 0xB7, 0x72, 0x0A, 0xFF, 0x90, 0x77, 0x70,
  0x3F, 0xFA, 0x0E, 0x01, 0x76, 0x09, 0xFF, 0xB0, 0x67, 0x60, 0xEF, 0xFB, 0x0B, 0x75, 0x01, 0xFF,
  0xC0, 0xD7, 0x50, 0x2F, 0xFD, 0x75, 0x01, 0xFF, 0xC0, 0xE7, 0x6F, 0xFC, 0x0C, 0x76, 0x0A, 0xFF,
  0xB0, 0x77, 0x60, 0x5F, 0xFB, 0x02, 0x48, 0x34, 0x79, 0x73, 0x50, 0xCF, 0xF9, 0x09, 0x30, 0x30,
  0xDD, 0x0B, 0x02, 0x30, 0x20, 0xEF, 0xE0, 0xD0, 0x12, 0x04, 0xF9, 0x0E, 0x02, 0x30, 0x40, 0xEF,
  0xC0, 0xD0, 0x22, 0x01, 0x0E, 0xFA, 0x0C, 0x40, 0x20, 0xCF, 0xA0, 0xA0, 0x13, 0x08, 0xFC, 0x05,
  0x50, 0x50, 0xBC, 0x81, 0xE9, 0x35, 0x0D, 0xFC, 0x09, 0x71, 0x81, 0x12, 0x17, 0x10, 0xEF, 0xC0,
  0xB7, 0x75, 0x0E, 0xFC, 0x0B, 0x77, 0x50, 0xBF, 0xC0, 0x87, 0x75, 0x05, 0xFC, 0x02, 0x77, 0x60,
  0xBF, 0xA0, 0x97, 0x83, 0x4C, 0xEC, 0x77, 0x20, 0x10, 0xCF, 0x0A, 0x70, 0x6D, 0x09, 0x73, 0x07,
  0x0D, 0xB0, 0xC0, 0x57, 0x01, 0x0E, 0xE0, 0x37, 0x48, 0x11, 0x21, 0x72, 0x04, 0xF0, 0x77, 0x77,
  0x20, 0x4F, 0x07, 0x77, 0x72, 0x01, 0x0E, 0xE0, 0x37, 0x77, 0x30, 0x6D, 0x09, 0x77, 0x75, 0x83,
  0x4C, 0xEC, 0x77, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_bubble_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 8, 39, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_bubble_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_candlestick_chart 48x48, 4-bit Alpha,  RLE, 89 bytes.
static const uint8_t ic_sharp_48_editor_candlestick_chart_data[] PROGMEM = {
  0x4C, 0x75, 0xC7, 0x1C, 0x75, 0xC7, 0x1C, 0x75, 0xC7, 0x1C, 0x75, 0xC4, 0xFD, 0x71, 0xC4, 0xFD,
  0x71, 0xC4, 0xFD, 0x71, 0xC4, 0xFD, 0x71, 0xC4, 0xFD, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF,
  0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4,
  0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x71, 0xC4, 0xFD, 0x71,
  0xC4, 0xFD, 0x71, 0xC4, 0xFD, 0x71, 0xC4, 0xFD, 0x71, 0xC4, 0xFD, 0x71, 0xC7, 0x1C, 0x75, 0xC7,
  0x1C, 0x75, 0xC7, 0x1C, 0x75, 0xC7, 0x1C, 0x75, 0xC4,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_candlestick_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 8, 37, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_candlestick_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_checklist 48x48, 4-bit Alpha,  RLE, 186 bytes.
static const uint8_t ic_sharp_48_editor_checklist_data[] PROGMEM = {
  0x77, 0x81, 0x2D, 0x38, 0x0C, 0x00, 0x83, 0x2E, 0xFE, 0x37, 0x77, 0x76, 0x02, 0x0E, 0xB0, 0xE0,
  0x27, 0x77, 0x74, 0x02, 0x0E, 0xC0, 0x87, 0x77, 0x30, 0x80, 0x36, 0x02, 0x0E, 0xC0, 0x87, 0x77,
  0x38, 0x28, 0xFE, 0x34, 0x02, 0x0E, 0xC0, 0x87, 0x77, 0x30, 0x8B, 0x0E, 0x03, 0x20, 0x20, 0xEC,
  0x08, 0x7F, 0xFC, 0x06, 0xC8, 0x2E, 0x32, 0xEC, 0x08, 0x71, 0xFF, 0xC1, 0x06, 0xC0, 0x0E, 0xC0,
  0x87, 0x2F, 0xFC, 0x20, 0x6F, 0x90, 0x87, 0x3F, 0xFC, 0x30, 0x6E, 0x08, 0x77, 0x77, 0x50, 0x6C,
  0x08, 0x77, 0x77, 0x70, 0x6A, 0x08, 0x80, 0xC1, 0x00, 0x60, 0x88, 0x09, 0xF2, 0x08, 0x12, 0xD3,
  0x80, 0xC0, 0x08, 0x32, 0xEF, 0xE3, 0x77, 0x77, 0x60, 0x20, 0xEB, 0x0E, 0x02, 0x77, 0x77, 0x40,
  0x20, 0xEC, 0x08, 0x77, 0x73, 0x08, 0x03, 0x60, 0x20, 0xEC, 0x08, 0x77, 0x73, 0x82, 0x8F, 0xE3,
  0x40, 0x20, 0xEC, 0x08, 0x77, 0x73, 0x08, 0xB0, 0xE0, 0x32, 0x02, 0x0E, 0xC0, 0x87, 0xFF, 0xC0,
  0x6C, 0x82, 0xE3, 0x2E, 0xC0, 0x87, 0x1F, 0xFC, 0x10, 0x6C, 0x00, 0xEC, 0x08, 0x72, 0xFF, 0xC2,
  0x06, 0xF9, 0x08, 0x73, 0xFF, 0xC3, 0x06, 0xE0, 0x87, 0x77, 0x75, 0x06, 0xC0, 0x87, 0x77, 0x77,
  0x06, 0xA0, 0x88, 0x0C, 0x10, 0x06, 0x08, 0x77, 0x77, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_checklist() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 43, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_checklist_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_checklist_rtl 48x48, 4-bit Alpha,  RLE, 186 bytes.
static const uint8_t ic_sharp_48_editor_checklist_rtl_data[] PROGMEM = {
  0x80, 0xC0, 0x00, 0x70, 0xB8, 0x0C, 0x10, 0x07, 0xA0, 0xB7, 0x77, 0x77, 0x07, 0xC0, 0xB7, 0x77,
  0x75, 0x07, 0xC0, 0xE0, 0x37, 0x77, 0x20, 0x10, 0x97, 0x07, 0xC0, 0xE0, 0x37, 0x77, 0x28, 0x21,
  0xDF, 0xB5, 0x07, 0xC0, 0xE0, 0x32, 0xFF, 0xC3, 0x01, 0x0D, 0xB0, 0xB3, 0x07, 0xC0, 0xE0, 0x33,
  0xFF, 0xC4, 0x0B, 0xC8, 0x1B, 0x07, 0xC0, 0xE0, 0x34, 0xFF, 0xC5, 0x0B, 0xC0, 0xDC, 0x0E, 0x03,
  0x5F, 0xFC, 0x60, 0xBF, 0x0E, 0x03, 0x77, 0x77, 0x30, 0xBD, 0x0E, 0x03, 0x77, 0x77, 0x50, 0xBB,
  0x0E, 0x03, 0x77, 0x77, 0x78, 0x2B, 0xFE, 0x38, 0x0C, 0x10, 0x0B, 0x03, 0x80, 0x9F, 0x20, 0x07,
  0x0B, 0x80, 0xC1, 0x00, 0x7A, 0x0B, 0x77, 0x77, 0x70, 0x7C, 0x0B, 0x77, 0x77, 0x50, 0x7C, 0x0E,
  0x03, 0x77, 0x72, 0x01, 0x09, 0x70, 0x7C, 0x0E, 0x03, 0x77, 0x72, 0x82, 0x1D, 0xFB, 0x50, 0x7C,
  0x0E, 0x03, 0x2F, 0xFC, 0x30, 0x10, 0xDB, 0x0B, 0x30, 0x7C, 0x0E, 0x03, 0x3F, 0xFC, 0x40, 0xBC,
  0x81, 0xB0, 0x7C, 0x0E, 0x03, 0x4F, 0xFC, 0x50, 0xBC, 0x0D, 0xC0, 0xE0, 0x35, 0xFF, 0xC6, 0x0B,
  0xF0, 0xE0, 0x37, 0x77, 0x73, 0x0B, 0xD0, 0xE0, 0x37, 0x77, 0x75, 0x0B, 0xB0, 0xE0, 0x37, 0x77,
  0x77, 0x82, 0xBF, 0xE3, 0x80, 0xC1, 0x00, 0xB0, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_checklist_rtl() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 43, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_checklist_rtl_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_data_array 48x48, 4-bit Alpha,  RLE, 92 bytes.
static const uint8_t ic_sharp_48_editor_data_array_data[] PROGMEM = {
  0xFB, 0x75, 0xFF, 0xE7, 0x5F, 0xFE, 0x75, 0xFF, 0xE7, 0x5F, 0xF7, 0x77, 0x3F, 0x97, 0x77, 0x3F,
  0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97,
  0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77,
  0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F,
  0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97,
  0x77, 0x3F, 0xF7, 0x5F, 0xFE, 0x75, 0xFF, 0xE7, 0x5F, 0xFE, 0x75, 0xFB,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_data_array() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 8, 39, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_data_array_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_data_object 48x48, 4-bit Alpha,  RLE, 202 bytes.
static const uint8_t ic_sharp_48_editor_data_object_data[] PROGMEM = {
  0x78, 0x16, 0xCE, 0xE7, 0x1E, 0x81, 0xEC, 0x67, 0x50, 0x10, 0xCF, 0xA7, 0x1F, 0xA0, 0xC0, 0x17,
  0x30, 0xCF, 0xB7, 0x1F, 0xB0, 0xC7, 0x20, 0x6F, 0xC7, 0x1F, 0xC0, 0x67, 0x10, 0xCB, 0x0B, 0x01,
  0x77, 0x60, 0x10, 0xBB, 0x0C, 0x71, 0x0E, 0xB0, 0x17, 0x77, 0x10, 0x1B, 0x0E, 0x71, 0xC7, 0x77,
  0x3C, 0x71, 0xC7, 0x77, 0x3C, 0x71, 0xC7, 0x77, 0x3C, 0x71, 0xC7, 0x77, 0x3C, 0x70, 0x1B, 0x0E,
  0x77, 0x73, 0x0E, 0xB0, 0x15, 0x01, 0x0B, 0xB0, 0xB7, 0x77, 0x30, 0xBB, 0x0B, 0x01, 0x2F, 0x05,
  0x77, 0x73, 0x05, 0xFE, 0x0C, 0x77, 0x75, 0x0C, 0xFC, 0x0C, 0x01, 0x77, 0x75, 0x01, 0x0C, 0xFA,
  0x06, 0x77, 0x77, 0x20, 0x6F, 0x90, 0x67, 0x77, 0x72, 0x06, 0xFA, 0x0C, 0x01, 0x77, 0x75, 0x01,
  0x0C, 0xFC, 0x0C, 0x77, 0x75, 0x0C, 0xFE, 0x05, 0x77, 0x73, 0x05, 0xF2, 0x01, 0x0B, 0xB0, 0xB7,
  0x77, 0x30, 0xBB, 0x0B, 0x01, 0x50, 0x1B, 0x0E, 0x77, 0x73, 0x0E, 0xB0, 0x17, 0xC7, 0x77, 0x3C,
  0x71, 0xC7, 0x77, 0x3C, 0x71, 0xC7, 0x77, 0x3C, 0x71, 0xC7, 0x77, 0x3C, 0x71, 0x0E, 0xB0, 0x17,
  0x77, 0x10, 0x1B, 0x0E, 0x71, 0x0C, 0xB0, 0xB0, 0x17, 0x76, 0x01, 0x0B, 0xB0, 0xC7, 0x10, 0x6F,
  0xC7, 0x1F, 0xC0, 0x67, 0x20, 0xCF, 0xB7, 0x1F, 0xB0, 0xC7, 0x30, 0x10, 0xCF, 0xA7, 0x1F, 0xA0,
  0xC0, 0x17, 0x58, 0x16, 0xCE, 0xE7, 0x1E, 0x81, 0xEC, 0x67,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_data_object() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 43, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_data_object_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_drag_handle 48x48, 4-bit Alpha,  RLE, 9 bytes.
static const uint8_t ic_sharp_48_editor_drag_handle_data[] PROGMEM = {
  0x80, 0x9F, 0x4F, 0x80, 0x9F, 0x40, 0x80, 0x9F, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_drag_handle() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 18, 39, 29), Box(0, 0, 47, 47),
      ic_sharp_48_editor_drag_handle_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_draw 48x48, 4-bit Alpha,  RLE, 317 bytes.
static const uint8_t ic_sharp_48_editor_draw_data[] PROGMEM = {
  0x48, 0x16, 0xAD, 0xA8, 0x1D, 0xA5, 0x77, 0x74, 0x05, 0x0E, 0xF9, 0x0E, 0x05, 0x77, 0x71, 0x07,
  0xFD, 0x07, 0x77, 0x60, 0x1F, 0xF0, 0x47, 0x38, 0x38, 0xDE, 0xA2, 0x40, 0x1B, 0x81, 0xE8, 0x22,
  0x81, 0x28, 0xEB, 0x0B, 0x71, 0x01, 0x0D, 0xD0, 0x54, 0x82, 0x6D, 0xC2, 0x60, 0x4B, 0x0E, 0x70,
  0x10, 0xDF, 0x05, 0x76, 0x03, 0xB0, 0xE7, 0x07, 0xFA, 0x05, 0x74, 0x06, 0x0E, 0xB0, 0xB7, 0x10,
  0x8F, 0xA0, 0x27, 0x10, 0x50, 0xDD, 0x04, 0x72, 0x08, 0xF9, 0x0A, 0x60, 0x60, 0xDE, 0x07, 0x40,
  0x10, 0x95, 0x08, 0xF0, 0xE4, 0x07, 0x0E, 0xE0, 0xE0, 0x54, 0x82, 0x1D, 0xFB, 0x50, 0x8E, 0x0D,
  0x20, 0x40, 0xDF, 0x09, 0x01, 0x40, 0x10, 0xDB, 0x0B, 0x50, 0x8D, 0x81, 0x80, 0x6E, 0x81, 0xE8,
  0x25, 0x01, 0x0D, 0xD0, 0xB5, 0x08, 0xB8, 0x1D, 0x03, 0xD8, 0x1E, 0x71, 0x60, 0x10, 0xDF, 0x0B,
  0x58, 0x48, 0xFD, 0x10, 0xBC, 0x08, 0x71, 0x01, 0x0D, 0xFA, 0x0B, 0x50, 0x70, 0x12, 0x0E, 0xB0,
  0x47, 0x10, 0x10, 0xDF, 0xC0, 0xB7, 0x10, 0xEB, 0x04, 0x70, 0x10, 0xDF, 0xE0, 0xB7, 0x0B, 0xC0,
  0x85, 0x01, 0x0D, 0xFF, 0x90, 0x96, 0x03, 0xC0, 0x54, 0x01, 0x0D, 0xFF, 0x90, 0xD0, 0x17, 0x06,
  0xA0, 0x54, 0x01, 0x0D, 0xFF, 0x90, 0xD0, 0x17, 0x20, 0x30, 0x54, 0x01, 0x0D, 0xFF, 0x90, 0xD0,
  0x17, 0x71, 0x01, 0x0D, 0xFF, 0x90, 0xD0, 0x17, 0x71, 0x01, 0x0D, 0xFF, 0x90, 0xD0, 0x17, 0x71,
  0x01, 0x0D, 0xFF, 0x90, 0xD0, 0x14, 0x02, 0x73, 0x01, 0x0D, 0xFF, 0x90, 0xD0, 0x14, 0x81, 0x5F,
  0xA7, 0x10, 0x10, 0xDF, 0xF9, 0x0D, 0x01, 0x40, 0x5B, 0x0A, 0x60, 0x10, 0xDF, 0xF9, 0x0D, 0x01,
  0x40, 0x20, 0xEC, 0x05, 0x50, 0xDF, 0xF9, 0x0D, 0x01, 0x60, 0x20, 0xCB, 0x0B, 0x5F, 0xF9, 0x0D,
  0x01, 0x71, 0x02, 0xB0, 0xE5, 0xFF, 0x0D, 0x01, 0x72, 0x02, 0xB0, 0xE5, 0xFE, 0x0D, 0x01, 0x72,
  0x03, 0x0D, 0xB0, 0xB5, 0xFD, 0x0D, 0x01, 0x78, 0x12, 0x5A, 0xD0, 0x55, 0xFC, 0x0D, 0x01, 0x50,
  0x40, 0xDF, 0x90, 0xA6, 0xFB, 0x0D, 0x01, 0x60, 0xDF, 0x90, 0x97, 0xFA, 0x0D, 0x01, 0x70, 0xDE,
  0x0D, 0x04, 0x71, 0xF9, 0x0D, 0x01, 0x71, 0x85, 0x4D, 0xFD, 0xB8, 0x37, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_draw() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 40, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_draw_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_edit_note 48x48, 4-bit Alpha,  RLE, 124 bytes.
static const uint8_t ic_sharp_48_editor_edit_note_data[] PROGMEM = {
  0xFF, 0xF9, 0x77, 0x1F, 0xFF, 0x97, 0x71, 0xFF, 0xF9, 0x77, 0x1F, 0xFF, 0x98, 0x0A, 0xB7, 0x0F,
  0xFF, 0x97, 0x71, 0xFF, 0xF9, 0x77, 0x1F, 0xFF, 0x97, 0x71, 0xFF, 0xF9, 0x73, 0x03, 0x01, 0x77,
  0x77, 0x60, 0xAA, 0x06, 0x77, 0x77, 0x40, 0xAC, 0x06, 0x77, 0x77, 0x30, 0x30, 0xEC, 0x01, 0x77,
  0x77, 0x83, 0x91, 0x03, 0xEB, 0x02, 0xFF, 0x76, 0x87, 0xBF, 0xD1, 0x03, 0xEF, 0xA1, 0xFF, 0x75,
  0x0B, 0xB8, 0x3D, 0x10, 0x3A, 0x2F, 0xF7, 0x40, 0xBD, 0x0D, 0x01, 0x4F, 0xF7, 0x30, 0xBF, 0x09,
  0x77, 0x76, 0x0B, 0xF0, 0xB7, 0x77, 0x60, 0xBF, 0x0B, 0x77, 0x76, 0x0B, 0xF0, 0xB7, 0x77, 0x60,
  0xBF, 0x0B, 0x77, 0x76, 0x0B, 0xF0, 0xB7, 0x77, 0x60, 0xBF, 0x0B, 0x77, 0x77, 0xF0, 0xB7, 0x77,
  0x71, 0xE0, 0xB7, 0x77, 0x72, 0xD0, 0xB7, 0x77, 0x73, 0xC0, 0xB7, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_edit_note() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 12, 42, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_edit_note_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_align_center 48x48, 4-bit Alpha,  RLE, 42 bytes.
static const uint8_t ic_sharp_48_editor_format_align_center_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xAA, 0x40, 0xFF, 0xE7, 0x72, 0xFF, 0xE7, 0x72, 0xFF, 0xE7, 0x72, 0xFF,
  0xE8, 0x0A, 0xA4, 0x08, 0x0A, 0x94, 0xF8, 0x0A, 0xA4, 0x0F, 0xFE, 0x77, 0x2F, 0xFE, 0x77, 0x2F,
  0xFE, 0x77, 0x2F, 0xFE, 0x80, 0xAA, 0x40, 0x80, 0xA9, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_align_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_align_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_align_justify 48x48, 4-bit Alpha,  RLE, 27 bytes.
static const uint8_t ic_sharp_48_editor_format_align_justify_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F, 0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F, 0x80,
  0xA9, 0x40, 0x80, 0xA9, 0x4F, 0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_align_justify() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_align_justify_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_align_left 48x48, 4-bit Alpha,  RLE, 43 bytes.
static const uint8_t ic_sharp_48_editor_format_align_left_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xA9, 0x40, 0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x75, 0xFF,
  0xFB, 0x80, 0xAB, 0x00, 0x80, 0xA9, 0x4F, 0x80, 0xA9, 0x40, 0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x75,
  0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x80, 0xAB, 0x00, 0x80, 0xA9, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_align_left() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_align_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_align_right 48x48, 4-bit Alpha,  RLE, 43 bytes.
static const uint8_t ic_sharp_48_editor_format_align_right_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xAB, 0x00, 0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x75, 0xFF,
  0xFB, 0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F, 0x80, 0xAB, 0x00, 0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x75,
  0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_align_right() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_align_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_bold 48x48, 4-bit Alpha,  RLE, 106 bytes.
static const uint8_t ic_sharp_48_editor_format_bold_data[] PROGMEM = {
  0xFE, 0x81, 0xDB, 0x66, 0xFF, 0xA0, 0xD0, 0x44, 0xFF, 0xC0, 0x53, 0xFF, 0xC0, 0xE0, 0x22, 0xFF,
  0xD0, 0xA2, 0xE6, 0x01, 0x07, 0xE0, 0x11, 0xE7, 0x10, 0x7D, 0x05, 0x1E, 0x71, 0x01, 0xD0, 0x71,
  0xE7, 0x10, 0x1D, 0x06, 0x1E, 0x71, 0x07, 0xD0, 0x31, 0xE6, 0x01, 0x07, 0xD0, 0xC2, 0xFF, 0xD0,
  0x32, 0xFF, 0xC0, 0x63, 0xFF, 0xB0, 0x84, 0xFF, 0xC0, 0x83, 0xFF, 0xD0, 0x92, 0xFF, 0xE0, 0x51,
  0xE7, 0x01, 0x07, 0xD0, 0xD1, 0xE7, 0x20, 0x7D, 0x03, 0xE7, 0x20, 0x1D, 0x05, 0xE7, 0x20, 0x1D,
  0x07, 0xE7, 0x20, 0x7D, 0x06, 0xE7, 0x01, 0x07, 0xE0, 0x2F, 0xFE, 0x0D, 0x1F, 0xFE, 0x04, 0x1F,
  0xFD, 0x08, 0x2F, 0xFC, 0x07, 0x3F, 0xF8, 0x2E, 0xC8, 0x24,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_bold() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(14, 8, 35, 35), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_bold_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_clear 48x48, 4-bit Alpha,  RLE, 256 bytes.
static const uint8_t ic_sharp_48_editor_format_clear_data[] PROGMEM = {
  0x18, 0x11, 0xB2, 0x40, 0xCF, 0xFF, 0xE8, 0x31, 0xDF, 0xD2, 0x30, 0x10, 0xCF, 0xFF, 0xD0, 0xBB,
  0x0D, 0x02, 0x30, 0x10, 0xCF, 0xFF, 0xC0, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10, 0xCF, 0xFF, 0xB1,
  0x02, 0x0D, 0xB0, 0xD0, 0x23, 0x01, 0x0C, 0xFF, 0xFA, 0x20, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10,
  0xCF, 0xFF, 0x93, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x10, 0xBD, 0x03, 0x77, 0x10, 0x20, 0xDB, 0x0D,
  0x02, 0x60, 0x3D, 0x0C, 0x77, 0x30, 0x20, 0xDB, 0x0D, 0x02, 0x50, 0x9D, 0x05, 0x77, 0x40, 0x20,
  0xDB, 0x0D, 0x02, 0x40, 0xBC, 0x0E, 0x77, 0x60, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10, 0xCB, 0x07,
  0x77, 0x70, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10, 0xCA, 0x01, 0x77, 0x71, 0x02, 0x0D, 0xB0, 0xD0,
  0x23, 0x81, 0x1C, 0xA7, 0x77, 0x30, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10, 0x27, 0x77, 0x40, 0x20,
  0xDB, 0x0D, 0x02, 0x77, 0x77, 0x20, 0x20, 0xDB, 0x0D, 0x02, 0x77, 0x77, 0x20, 0x3C, 0x0D, 0x02,
  0x77, 0x77, 0x10, 0x7D, 0x0D, 0x02, 0x77, 0x77, 0x0D, 0xE0, 0xD0, 0x27, 0x77, 0x50, 0x5F, 0x90,
  0xD0, 0x27, 0x77, 0x40, 0xCD, 0x0E, 0xB0, 0xD0, 0x27, 0x77, 0x20, 0x3D, 0x81, 0xC2, 0xDB, 0x0D,
  0x02, 0x77, 0x71, 0x09, 0xD8, 0x25, 0x02, 0xDB, 0x0D, 0x02, 0x77, 0x60, 0x1D, 0x0E, 0x30, 0x20,
  0xDB, 0x0D, 0x02, 0x77, 0x50, 0x7D, 0x07, 0x40, 0x20, 0xDB, 0x0D, 0x02, 0x77, 0x40, 0xDD, 0x01,
  0x50, 0x20, 0xDB, 0x0D, 0x02, 0x77, 0x20, 0x5D, 0x09, 0x70, 0x20, 0xDB, 0x0D, 0x02, 0x77, 0x10,
  0xCD, 0x03, 0x71, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x77, 0x72, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x77,
  0x72, 0x02, 0x0D, 0xB0, 0xB7, 0x77, 0x73, 0x83, 0x2D, 0xFD, 0x17, 0x77, 0x74, 0x81, 0x2B, 0x15,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_clear() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 10, 39, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_clear_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_color_fill 48x48, 4-bit Alpha,  RLE, 252 bytes.
static const uint8_t ic_sharp_48_editor_format_color_fill_data[] PROGMEM = {
  0x73, 0x04, 0x0A, 0x80, 0xC1, 0x00, 0x4A, 0x0B, 0x77, 0x77, 0x70, 0x4C, 0x0B, 0x77, 0x77, 0x60,
  0x10, 0xCC, 0x0B, 0x77, 0x77, 0x60, 0x10, 0xCC, 0x0B, 0x77, 0x77, 0x60, 0x10, 0xCC, 0x0B, 0x77,
  0x77, 0x60, 0x10, 0xCC, 0x0B, 0x77, 0x77, 0x60, 0x10, 0xEC, 0x0B, 0x77, 0x77, 0x50, 0xBE, 0x0B,
  0x77, 0x77, 0x30, 0xBF, 0x90, 0xB7, 0x77, 0x71, 0x0B, 0xC0, 0x0C, 0xC0, 0xB7, 0x77, 0x60, 0xBC,
  0x82, 0xC1, 0x1C, 0xC0, 0xB7, 0x77, 0x40, 0xBC, 0x0C, 0x01, 0x20, 0x10, 0xCC, 0x0B, 0x77, 0x72,
  0x0B, 0xC0, 0xC0, 0x14, 0x01, 0x0C, 0xC0, 0xB7, 0x77, 0x0B, 0xC0, 0xC0, 0x16, 0x01, 0x0C, 0xC0,
  0xB7, 0x75, 0x0B, 0xC0, 0xC0, 0x17, 0x10, 0x10, 0xCC, 0x0B, 0x77, 0x30, 0xBC, 0x0C, 0x01, 0x73,
  0x01, 0x0C, 0xC0, 0xB7, 0x71, 0x0B, 0xC0, 0xC0, 0x17, 0x50, 0x10, 0xCC, 0x0B, 0x76, 0x08, 0xC0,
  0xC0, 0x17, 0x70, 0x10, 0xCC, 0x08, 0x75, 0x0E, 0xB0, 0xC0, 0x17, 0x72, 0x01, 0x0C, 0xB0, 0xE7,
  0x50, 0xEF, 0xFF, 0xD0, 0xE7, 0x50, 0x8F, 0xFF, 0xD0, 0x87, 0x60, 0xBF, 0xFF, 0xB0, 0xB7, 0x71,
  0x0B, 0xFF, 0xF9, 0x0B, 0x50, 0x06, 0x73, 0x0B, 0xFF, 0xE0, 0xB5, 0x04, 0xA0, 0x47, 0x30, 0xBF,
  0xFC, 0x0B, 0x50, 0x10, 0xEA, 0x0E, 0x01, 0x73, 0x0B, 0xFF, 0xA0, 0xB6, 0x09, 0xC0, 0x97, 0x40,
  0xBF, 0xF0, 0xB6, 0x03, 0xE0, 0x37, 0x40, 0xBF, 0xD0, 0xB7, 0x0A, 0xE0, 0x87, 0x50, 0xBF, 0xB0,
  0xB7, 0x10, 0xEE, 0x0D, 0x76, 0x0B, 0xF9, 0x0B, 0x72, 0x0D, 0xE0, 0xD7, 0x70, 0xBE, 0x0B, 0x73,
  0x0A, 0xE0, 0xA7, 0x71, 0x0B, 0xC0, 0xB7, 0x40, 0x10, 0xEC, 0x0E, 0x01, 0x77, 0x28, 0x28, 0xEE,
  0x87, 0x68, 0x41, 0xAD, 0xDA, 0x18, 0x0B, 0xD7, 0x08, 0x0C, 0xF4, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_color_fill() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 0, 43, 47), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_color_fill_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_color_reset 48x48, 4-bit Alpha,  RLE, 234 bytes.
static const uint8_t ic_sharp_48_editor_format_color_reset_data[] PROGMEM = {
  0x77, 0x10, 0x02, 0x77, 0x77, 0x18, 0x21, 0xDD, 0x17, 0x77, 0x70, 0xBA, 0x0B, 0x77, 0x76, 0x08,
  0xC0, 0x87, 0x71, 0x03, 0x72, 0x04, 0xE0, 0x57, 0x68, 0x16, 0xF7, 0x70, 0x10, 0xEE, 0x0E, 0x01,
  0x74, 0x06, 0xB0, 0x76, 0x0B, 0xF9, 0x0B, 0x74, 0x09, 0xC0, 0x74, 0x03, 0xFB, 0x07, 0x74, 0x09,
  0xC0, 0x74, 0x06, 0xFB, 0x03, 0x74, 0x09, 0xC0, 0x74, 0x06, 0xFA, 0x0C, 0x75, 0x09, 0xC0, 0x74,
  0x06, 0xFA, 0x07, 0x75, 0x09, 0xC0, 0x74, 0x06, 0xF9, 0x0E, 0x02, 0x75, 0x09, 0xC0, 0x74, 0x06,
  0xF9, 0x0A, 0x76, 0x0A, 0xC0, 0x74, 0x06, 0xF9, 0x03, 0x75, 0x0B, 0xD0, 0x74, 0x06, 0xF0, 0xB7,
  0x40, 0x3F, 0x07, 0x40, 0x6F, 0x03, 0x73, 0x0A, 0xF9, 0x07, 0x40, 0x6E, 0x0A, 0x72, 0x01, 0xFB,
  0x07, 0x40, 0x6E, 0x01, 0x71, 0x05, 0xFC, 0x07, 0x40, 0x6D, 0x06, 0x71, 0x09, 0xFD, 0x07, 0x40,
  0x6C, 0x0A, 0x71, 0x0D, 0xFE, 0x07, 0x40, 0x6B, 0x0D, 0x71, 0x0E, 0xFF, 0x07, 0x40, 0x6A, 0x0E,
  0x71, 0x0E, 0xFF, 0x90, 0x74, 0x81, 0x6F, 0xE7, 0x10, 0xDF, 0xFA, 0x07, 0x40, 0x60, 0xC7, 0x10,
  0xBF, 0xFB, 0x07, 0x40, 0x37, 0x10, 0x6F, 0xFC, 0x07, 0x75, 0x01, 0xFF, 0xD0, 0x77, 0x50, 0x9F,
  0xFD, 0x07, 0x74, 0x01, 0x0E, 0xFF, 0xD0, 0x77, 0x40, 0x4F, 0xFE, 0x07, 0x74, 0x06, 0xFF, 0xE0,
  0x77, 0x40, 0x40, 0xEF, 0xD8, 0x1E, 0x48, 0xC0, 0x77, 0x40, 0x10, 0x9F, 0xB0, 0x90, 0x12, 0x08,
  0xC0, 0x77, 0x58, 0x90, 0x16, 0xAD, 0xEE, 0xDA, 0x61, 0x50, 0x8C, 0x06, 0x77, 0x76, 0x08, 0xA0,
  0xD0, 0x17, 0x77, 0x78, 0x18, 0xD1, 0x77, 0x77, 0x20, 0x12,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_color_reset() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 42), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_color_reset_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_color_text 48x48, 4-bit Alpha,  RLE, 198 bytes.
static const uint8_t ic_sharp_48_editor_format_color_text_data[] PROGMEM = {
  0x77, 0x30, 0xAC, 0x0A, 0x77, 0x77, 0x50, 0x1E, 0x01, 0x77, 0x77, 0x40, 0x6E, 0x06, 0x77, 0x77,
  0x40, 0xCE, 0x0C, 0x77, 0x77, 0x30, 0x3F, 0x90, 0x37, 0x77, 0x72, 0x08, 0xB0, 0x0C, 0xB0, 0x87,
  0x77, 0x72, 0x0E, 0xB0, 0x06, 0xB0, 0xE7, 0x77, 0x71, 0x04, 0xC0, 0x01, 0xC0, 0x47, 0x77, 0x70,
  0xAB, 0x0B, 0x20, 0xBB, 0x0A, 0x77, 0x76, 0x01, 0xC0, 0x52, 0x05, 0xC0, 0x17, 0x77, 0x50, 0x6B,
  0x0E, 0x40, 0xEB, 0x06, 0x77, 0x75, 0x0C, 0xB0, 0xA4, 0x0A, 0xB0, 0xC7, 0x77, 0x40, 0x3C, 0x04,
  0x40, 0x4C, 0x03, 0x77, 0x73, 0x08, 0xB0, 0xE6, 0x0E, 0xB0, 0x87, 0x77, 0x30, 0xEB, 0x09, 0x60,
  0x9B, 0x0E, 0x77, 0x72, 0x05, 0xC0, 0x46, 0x04, 0xC0, 0x57, 0x77, 0x10, 0xAB, 0x0E, 0x04, 0x80,
  0x23, 0x04, 0x0E, 0xB0, 0xA7, 0x77, 0x01, 0xFF, 0xC0, 0x17, 0x76, 0x06, 0xFF, 0xC0, 0x67, 0x76,
  0x0C, 0xFF, 0xC0, 0xC7, 0x75, 0x03, 0xC0, 0xE8, 0x06, 0xD0, 0xEC, 0x03, 0x77, 0x40, 0x8C, 0x02,
  0x73, 0x01, 0xC0, 0x87, 0x74, 0x0E, 0xB0, 0xB7, 0x50, 0xBB, 0x0E, 0x77, 0x30, 0x5C, 0x06, 0x75,
  0x06, 0xC0, 0x57, 0x72, 0x0A, 0xC0, 0x17, 0x50, 0x1C, 0x0A, 0x77, 0x10, 0x1C, 0x0A, 0x77, 0x0A,
  0xC0, 0x17, 0x70, 0x7C, 0x05, 0x77, 0x05, 0xC0, 0x77, 0x70, 0xCB, 0x0E, 0x77, 0x20, 0xEB, 0x0C,
  0x80, 0xBE, 0x30, 0x80, 0xCF, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_color_text() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 6, 43, 47), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_color_text_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_indent_decrease 48x48, 4-bit Alpha,  RLE, 89 bytes.
static const uint8_t ic_sharp_48_editor_format_indent_decrease_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xAB, 0x40, 0xFF, 0xE7, 0x72, 0xFF, 0xE7, 0x07, 0x71, 0xFF, 0xE6, 0x07,
  0x97, 0x1F, 0xFE, 0x50, 0x7A, 0x77, 0x77, 0x40, 0x7B, 0x77, 0x77, 0x30, 0x7C, 0x77, 0x77, 0x20,
  0x7D, 0x77, 0x77, 0x10, 0x7E, 0x71, 0xFF, 0xE0, 0x7F, 0x71, 0xFF, 0xE0, 0x7F, 0x71, 0xFF, 0xE1,
  0x07, 0xE7, 0x1F, 0xFE, 0x20, 0x7D, 0x77, 0x77, 0x30, 0x7C, 0x77, 0x77, 0x40, 0x7B, 0x77, 0x77,
  0x50, 0x7A, 0x77, 0x77, 0x60, 0x79, 0x71, 0xFF, 0xE7, 0x07, 0x71, 0xFF, 0xE7, 0x72, 0xFF, 0xE7,
  0x72, 0xFF, 0xE8, 0x0A, 0x94, 0x08, 0x0A, 0x94, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_indent_decrease() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_indent_decrease_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_indent_increase 48x48, 4-bit Alpha,  RLE, 86 bytes.
static const uint8_t ic_sharp_48_editor_format_indent_increase_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xAB, 0x40, 0xFF, 0xE7, 0x72, 0xFF, 0xE0, 0x77, 0x71, 0xFF, 0xF0, 0x77,
  0x7F, 0xFF, 0x90, 0x77, 0x77, 0x75, 0xB0, 0x77, 0x77, 0x74, 0xC0, 0x77, 0x77, 0x73, 0xD0, 0x77,
  0x77, 0x72, 0xE0, 0x77, 0x2F, 0xFF, 0xE0, 0x77, 0x1F, 0xFF, 0xE0, 0x77, 0x1F, 0xFF, 0xD0, 0x77,
  0x2F, 0xFF, 0xC0, 0x77, 0x77, 0x72, 0xC0, 0x77, 0x77, 0x73, 0xB0, 0x77, 0x77, 0x74, 0xA0, 0x77,
  0x77, 0x75, 0x90, 0x77, 0x7F, 0xFE, 0x07, 0x77, 0x1F, 0xFE, 0x77, 0x2F, 0xFE, 0x77, 0x2F, 0xFE,
  0x80, 0xA9, 0x40, 0x80, 0xA9, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_indent_increase() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_indent_increase_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_italic 48x48, 4-bit Alpha,  RLE, 95 bytes.
static const uint8_t ic_sharp_48_editor_format_italic_data[] PROGMEM = {
  0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x75,
  0x0C, 0xD0, 0x37, 0x72, 0x03, 0xD0, 0xC7, 0x73, 0x0A, 0xD0, 0x57, 0x72, 0x01, 0xD0, 0xD7, 0x73,
  0x07, 0xD0, 0x77, 0x73, 0x0E, 0xD0, 0x17, 0x72, 0x05, 0xD0, 0x97, 0x73, 0x0C, 0xD0, 0x37, 0x72,
  0x03, 0xD0, 0xC7, 0x73, 0x09, 0xD0, 0x57, 0x72, 0x01, 0xD0, 0xE7, 0x73, 0x07, 0xD0, 0x77, 0x73,
  0x0D, 0xD0, 0x17, 0x72, 0x05, 0xD0, 0xA7, 0x73, 0x0C, 0xD0, 0x37, 0x72, 0x03, 0xD0, 0xC7, 0x5F,
  0xFA, 0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x71, 0xFF, 0xA7, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_italic() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(12, 8, 35, 35), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_italic_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_line_spacing 48x48, 4-bit Alpha,  RLE, 139 bytes.
static const uint8_t ic_sharp_48_editor_format_line_spacing_data[] PROGMEM = {
  0x60, 0x07, 0x80, 0xC2, 0x00, 0x7A, 0x07, 0x80, 0xC0, 0x00, 0x7C, 0x07, 0x77, 0x77, 0x60, 0x7E,
  0x07, 0x6F, 0xFF, 0xB2, 0x07, 0xF9, 0x07, 0x5F, 0xFF, 0xB1, 0x07, 0xFB, 0x07, 0x4F, 0xFF, 0xB0,
  0x7F, 0xD0, 0x73, 0xFF, 0xFB, 0x5C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80,
  0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x71, 0xFF,
  0xFB, 0x5C, 0x71, 0xFF, 0xFB, 0x5C, 0x71, 0xFF, 0xFB, 0x5C, 0x71, 0xFF, 0xFB, 0x5C, 0x80, 0xC1,
  0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C, 0x80, 0xC1, 0x0C,
  0x80, 0xC1, 0x0C, 0x77, 0x77, 0x40, 0x7F, 0xD0, 0x73, 0xFF, 0xFB, 0x10, 0x7F, 0xB0, 0x74, 0xFF,
  0xFB, 0x20, 0x7F, 0x90, 0x75, 0xFF, 0xFB, 0x30, 0x7E, 0x07, 0x6F, 0xFF, 0xB4, 0x07, 0xC0, 0x78,
  0x0C, 0x00, 0x07, 0xA0, 0x78, 0x0C, 0x20, 0x00, 0x77, 0x77, 0x75,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_line_spacing() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 7, 43, 40), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_line_spacing_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_list_bulleted_add 48x48, 4-bit Alpha,  RLE, 214 bytes.
static const uint8_t ic_sharp_48_editor_format_list_bulleted_add_data[] PROGMEM = {
  0x18, 0x28, 0xDD, 0x88, 0x0C, 0x10, 0x08, 0xC0, 0x84, 0xFF, 0xFD, 0x60, 0xDC, 0x0D, 0x4F, 0xFF,
  0xD6, 0x0D, 0xC0, 0xD4, 0xFF, 0xFD, 0x60, 0x8C, 0x08, 0x4F, 0xFF, 0xD7, 0x82, 0x8D, 0xD8, 0x80,
  0xCB, 0x60, 0x82, 0x8D, 0xD8, 0x80, 0xC1, 0x00, 0x8C, 0x08, 0x4F, 0xFB, 0x82, 0xC7, 0x42, 0x74,
  0x0D, 0xC0, 0xD4, 0xFF, 0x90, 0xA0, 0x27, 0x71, 0x0D, 0xC0, 0xD4, 0xFE, 0x0D, 0x03, 0x77, 0x30,
  0x8C, 0x08, 0x4F, 0xD0, 0xB0, 0x17, 0x75, 0x82, 0x8D, 0xD8, 0x77, 0x72, 0x86, 0x59, 0xDE, 0xED,
  0x95, 0x77, 0x77, 0x40, 0x40, 0xDF, 0x90, 0xD0, 0x47, 0x77, 0x71, 0x08, 0xFD, 0x08, 0x77, 0x76,
  0x08, 0xFF, 0x08, 0x77, 0x74, 0x04, 0xF2, 0xF0, 0x47, 0x77, 0x30, 0xDF, 0x2F, 0x0D, 0x77, 0x72,
  0x05, 0xF9, 0x2F, 0x98, 0x45, 0x08, 0xDD, 0x87, 0x73, 0x09, 0xF9, 0x2F, 0x90, 0x90, 0x8C, 0x08,
  0x4F, 0x90, 0x13, 0x0D, 0xF9, 0x2F, 0x90, 0x0D, 0xC0, 0xD4, 0xF9, 0x40, 0xEB, 0x75, 0xB0, 0xE0,
  0xDC, 0x0D, 0x4F, 0x94, 0x0E, 0xB7, 0x5B, 0x0E, 0x08, 0xC0, 0x84, 0xF9, 0x01, 0x30, 0xDF, 0x92,
  0xF9, 0x84, 0xD0, 0x8D, 0xD8, 0x77, 0x30, 0x9F, 0x92, 0xF9, 0x09, 0x77, 0x71, 0x05, 0xF9, 0x2F,
  0x90, 0x57, 0x77, 0x20, 0xDF, 0x2F, 0x0D, 0x77, 0x73, 0x04, 0xF2, 0xF0, 0x47, 0x77, 0x40, 0x8F,
  0xF0, 0x87, 0x77, 0x60, 0x8F, 0xD0, 0x87, 0x77, 0x71, 0x04, 0x0D, 0xF9, 0x0D, 0x04, 0x77, 0x77,
  0x48, 0x65, 0x9D, 0xEE, 0xD9, 0x56,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_list_bulleted_add() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 9, 45, 45), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_list_bulleted_add_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_list_bulleted 48x48, 4-bit Alpha,  RLE, 96 bytes.
static const uint8_t ic_sharp_48_editor_format_list_bulleted_data[] PROGMEM = {
  0x18, 0x28, 0xDD, 0x87, 0x77, 0x74, 0x08, 0xC0, 0x83, 0xFF, 0xFF, 0x0D, 0xC0, 0xD3, 0xFF, 0xFF,
  0x0D, 0xC0, 0xD3, 0xFF, 0xFF, 0x08, 0xC0, 0x83, 0xFF, 0xFF, 0x18, 0x28, 0xDD, 0x88, 0x0B, 0xF3,
  0x08, 0x28, 0xDD, 0x87, 0x77, 0x74, 0x08, 0xC0, 0x83, 0xFF, 0xFF, 0x0D, 0xC0, 0xD3, 0xFF, 0xFF,
  0x0D, 0xC0, 0xD3, 0xFF, 0xFF, 0x08, 0xC0, 0x83, 0xFF, 0xFF, 0x18, 0x28, 0xDD, 0x88, 0x0B, 0xF3,
  0x08, 0x28, 0xDD, 0x87, 0x77, 0x74, 0x08, 0xC0, 0x83, 0xFF, 0xFF, 0x0D, 0xC0, 0xD3, 0xFF, 0xFF,
  0x0D, 0xC0, 0xD3, 0xFF, 0xFF, 0x08, 0xC0, 0x83, 0xFF, 0xFF, 0x18, 0x28, 0xDD, 0x87, 0x77, 0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_list_bulleted() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(5, 9, 41, 38), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_list_bulleted_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_list_numbered 48x48, 4-bit Alpha,  RLE, 86 bytes.
static const uint8_t ic_sharp_48_editor_format_list_numbered_data[] PROGMEM = {
  0xC7, 0x77, 0x76, 0xC8, 0x0C, 0x00, 0xA6, 0xFF, 0xFF, 0x2A, 0x6F, 0xFF, 0xF2, 0xA6, 0xFF, 0xFF,
  0x2A, 0x6F, 0xFF, 0xF2, 0xA8, 0x0C, 0x00, 0xA8, 0x0A, 0xE6, 0x0E, 0x77, 0x77, 0x4E, 0x77, 0x77,
  0x78, 0x1C, 0xF6, 0x4F, 0xFF, 0xF2, 0x81, 0xAF, 0x85, 0xFF, 0xFF, 0x18, 0x18, 0xFA, 0x6F, 0xFF,
  0xF8, 0x16, 0xFC, 0x7F, 0xFF, 0xFE, 0x77, 0x77, 0x4E, 0x80, 0xAE, 0x40, 0xE7, 0x77, 0x74, 0xE8,
  0x0C, 0x00, 0xA4, 0xFF, 0xFF, 0x2C, 0x4F, 0xFF, 0xF2, 0xC4, 0xFF, 0xFF, 0x4A, 0x4F, 0xFF, 0xFE,
  0x77, 0x77, 0x4E, 0x77, 0x77, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_list_numbered() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 41, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_list_numbered_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_list_numbered_rtl 48x48, 4-bit Alpha,  RLE, 85 bytes.
static const uint8_t ic_sharp_48_editor_format_list_numbered_rtl_data[] PROGMEM = {
  0x77, 0x77, 0x4C, 0x77, 0x77, 0x6C, 0x2F, 0xFF, 0xF6, 0xA2, 0xFF, 0xFF, 0x6A, 0x2F, 0xFF, 0xF6,
  0xA2, 0xFF, 0xFF, 0x6A, 0x80, 0xC0, 0x0A, 0x80, 0xC0, 0x0A, 0x80, 0xAE, 0x60, 0xE7, 0x77, 0x74,
  0xFF, 0xFF, 0xE7, 0x81, 0xCF, 0x6F, 0xFF, 0xF6, 0x81, 0xAF, 0x81, 0xFF, 0xFF, 0x58, 0x18, 0xFA,
  0x2F, 0xFF, 0xF4, 0x81, 0x6F, 0xC7, 0x77, 0x77, 0xE7, 0x77, 0x74, 0xE8, 0x0A, 0xE4, 0x0E, 0x77,
  0x77, 0x4F, 0xFF, 0xFE, 0x71, 0xFF, 0xFF, 0xA6, 0xFF, 0xFF, 0xC6, 0xFF, 0xFF, 0xC7, 0x1A, 0x77,
  0x77, 0x4E, 0x77, 0x77, 0x4E,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_list_numbered_rtl() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 41, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_list_numbered_rtl_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_paint 48x48, 4-bit Alpha,  RLE, 125 bytes.
static const uint8_t ic_sharp_48_editor_format_paint_data[] PROGMEM = {
  0x04, 0x0D, 0xFF, 0xFB, 0x0D, 0x04, 0x60, 0xDF, 0xFF, 0xD0, 0xD6, 0xFF, 0xFF, 0x6F, 0xFF, 0xF6,
  0x80, 0xAC, 0x0F, 0x2F, 0xFF, 0xFC, 0x2C, 0x0D, 0xFF, 0xFD, 0x0D, 0x2C, 0x04, 0x0D, 0xFF, 0xFB,
  0x0D, 0x04, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x73,
  0xFF, 0xFB, 0x73, 0xFF, 0xFB, 0x73, 0xFF, 0xFB, 0x73, 0xFF, 0xFB, 0x73, 0xF9, 0x77, 0x75, 0xF9,
  0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77,
  0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75,
  0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9, 0x77, 0x75, 0xF9,
  0x77, 0x75, 0x0D, 0xE0, 0xD7, 0x77, 0x50, 0x40, 0xDC, 0x0D, 0x04, 0x77, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_paint() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 4, 41, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_paint_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_quote 48x48, 4-bit Alpha,  RLE, 83 bytes.
static const uint8_t ic_sharp_48_editor_format_quote_data[] PROGMEM = {
  0xFD, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB,
  0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFF, 0xFB, 0x4F, 0xFF, 0xB4, 0xFD, 0x50, 0x3D,
  0x0B, 0x72, 0x03, 0xD0, 0xB5, 0x0B, 0xD0, 0x37, 0x20, 0xBD, 0x03, 0x40, 0x3D, 0x0B, 0x72, 0x03,
  0xD0, 0xB5, 0x0B, 0xD0, 0x37, 0x20, 0xBD, 0x03, 0x40, 0x3D, 0x0B, 0x72, 0x03, 0xD0, 0xB5, 0x0B,
  0xD0, 0x37, 0x20, 0xBD, 0x03, 0x40, 0x3D, 0x0B, 0x72, 0x03, 0xD0, 0xB5, 0x0B, 0xD0, 0x37, 0x20,
  0xBD, 0x03, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_quote() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 14, 37, 33), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_quote_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_shapes 48x48, 4-bit Alpha,  RLE, 244 bytes.
static const uint8_t ic_sharp_48_editor_format_shapes_data[] PROGMEM = {
  0xFD, 0x77, 0x6F, 0xFF, 0xB7, 0x76, 0xFF, 0xFB, 0x77, 0x6F, 0xFF, 0xB7, 0x76, 0xFF, 0xA4, 0xFF,
  0xFF, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0xFA, 0x77,
  0x6F, 0xFF, 0xB7, 0x76, 0xFF, 0xFB, 0x77, 0x6F, 0xFF, 0xB7, 0x76, 0xFD, 0x4C, 0x75, 0x09, 0xA0,
  0x87, 0x5C, 0x71, 0xC7, 0x50, 0xEA, 0x0E, 0x75, 0xC7, 0x1C, 0x74, 0x05, 0xC0, 0x57, 0x4C, 0x71,
  0xC7, 0x40, 0xBC, 0x0A, 0x74, 0xC7, 0x1C, 0x73, 0x01, 0xA0, 0x0B, 0xA0, 0x17, 0x3C, 0x71, 0xC7,
  0x30, 0x7A, 0x00, 0x6A, 0x07, 0x73, 0xC7, 0x1C, 0x73, 0x0D, 0xA0, 0x01, 0xA0, 0xD7, 0x3C, 0x71,
  0xC7, 0x20, 0x3A, 0x0B, 0x20, 0xBA, 0x03, 0x72, 0xC7, 0x1C, 0x72, 0x09, 0xA0, 0x62, 0x06, 0xA0,
  0x97, 0x2C, 0x71, 0xC7, 0x20, 0xEA, 0x01, 0x20, 0x1A, 0x0E, 0x72, 0xC7, 0x1C, 0x71, 0x05, 0xA0,
  0xB4, 0x0B, 0xA0, 0x57, 0x1C, 0x71, 0xC7, 0x10, 0xBA, 0x84, 0xB7, 0x77, 0x7B, 0xA0, 0xB7, 0x1C,
  0x71, 0xC7, 0x02, 0xFD, 0x01, 0x7C, 0x71, 0xC7, 0x08, 0xFD, 0x07, 0x7C, 0x71, 0xC7, 0x0D, 0xA0,
  0x46, 0x05, 0xA0, 0xD7, 0xC7, 0x1C, 0x60, 0x4A, 0x0E, 0x71, 0x0E, 0xA0, 0x36, 0xC7, 0x1C, 0x60,
  0xAA, 0x08, 0x71, 0x09, 0xA0, 0x96, 0xC7, 0x1C, 0x50, 0x1B, 0x03, 0x71, 0x03, 0xA0, 0xE6, 0xC7,
  0x1C, 0x77, 0x77, 0xC7, 0x1C, 0x77, 0x77, 0xC4, 0xFD, 0x77, 0x6F, 0xFF, 0xB7, 0x76, 0xFF, 0xFB,
  0x77, 0x6F, 0xFF, 0xB7, 0x76, 0xFF, 0xA4, 0xFF, 0xFF, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0x94, 0xFF,
  0xFF, 0x4F, 0x94, 0xFF, 0xFF, 0x4F, 0xFA, 0x77, 0x6F, 0xFF, 0xB7, 0x76, 0xFF, 0xFB, 0x77, 0x6F,
  0xFF, 0xB7, 0x76, 0xFD,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_shapes() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 2, 45, 45), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_shapes_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_size 48x48, 4-bit Alpha,  RLE, 101 bytes.
static const uint8_t ic_sharp_48_editor_format_size_data[] PROGMEM = {
  0x75, 0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75,
  0xFF, 0xFD, 0x77, 0x71, 0xE7, 0x77, 0x74, 0xE7, 0x77, 0x74, 0xE7, 0x77, 0x74, 0xE7, 0x3F, 0xFC,
  0x4E, 0x73, 0xFF, 0xC4, 0xE7, 0x3F, 0xFC, 0x4E, 0x73, 0xFF, 0xC4, 0xE7, 0x3F, 0xFC, 0x4E, 0x73,
  0xFF, 0xC4, 0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73,
  0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72,
  0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E,
  0x77, 0x2E, 0x73, 0xE7, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_size() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 8, 43, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_size_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_strikethrough 48x48, 4-bit Alpha,  RLE, 61 bytes.
static const uint8_t ic_sharp_48_editor_format_strikethrough_data[] PROGMEM = {
  0x4F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F,
  0xFF, 0xF7, 0x74, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9,
  0x77, 0x77, 0xF9, 0x80, 0xAB, 0x20, 0x80, 0xA9, 0x4F, 0x80, 0xAB, 0x20, 0xF9, 0x77, 0x77, 0xF9,
  0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_strikethrough() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 8, 41, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_strikethrough_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_textdirection_l_to_r 48x48, 4-bit Alpha,  RLE, 152 bytes.
static const uint8_t ic_sharp_48_editor_format_textdirection_l_to_r_data[] PROGMEM = {
  0x48, 0x22, 0x8C, 0xEF, 0xFA, 0x74, 0x09, 0xFF, 0xE7, 0x30, 0xBF, 0xFF, 0x72, 0x09, 0xFF, 0xF9,
  0x71, 0x02, 0xFC, 0x4C, 0x75, 0x08, 0xFC, 0x4C, 0x75, 0x0C, 0xFC, 0x4C, 0x75, 0x0E, 0xFC, 0x4C,
  0x75, 0x0E, 0xFC, 0x4C, 0x75, 0x0C, 0xFC, 0x4C, 0x75, 0x08, 0xFC, 0x4C, 0x75, 0x02, 0xFC, 0x4C,
  0x76, 0x09, 0xFB, 0x4C, 0x77, 0x0B, 0xFA, 0x4C, 0x77, 0x10, 0x9F, 0x94, 0xC7, 0x72, 0x82, 0x28,
  0xCE, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76,
  0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC4, 0x07, 0x77,
  0x1C, 0x4C, 0x49, 0x07, 0x77, 0x77, 0x2A, 0x07, 0x77, 0x77, 0x1B, 0x07, 0x77, 0x77, 0xC0, 0x77,
  0x77, 0x6D, 0x07, 0x2F, 0xFF, 0xFA, 0x07, 0x1F, 0xFF, 0xFB, 0x07, 0xFF, 0xFF, 0xB0, 0x7F, 0xFF,
  0xFA, 0x07, 0x77, 0x74, 0xD0, 0x77, 0x77, 0x5C, 0x07, 0x77, 0x76, 0xB0, 0x77, 0x77, 0x7A, 0x07,
  0x77, 0x77, 0x19, 0x07, 0x77, 0x77, 0x20, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_textdirection_l_to_r() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 4, 41, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_textdirection_l_to_r_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_textdirection_r_to_l 48x48, 4-bit Alpha,  RLE, 152 bytes.
static const uint8_t ic_sharp_48_editor_format_textdirection_r_to_l_data[] PROGMEM = {
  0x71, 0x82, 0x28, 0xCE, 0xFF, 0xA7, 0x40, 0x9F, 0xFE, 0x73, 0x0B, 0xFF, 0xF7, 0x20, 0x9F, 0xFF,
  0x97, 0x10, 0x2F, 0xC4, 0xC7, 0x50, 0x8F, 0xC4, 0xC7, 0x50, 0xCF, 0xC4, 0xC7, 0x50, 0xEF, 0xC4,
  0xC7, 0x50, 0xEF, 0xC4, 0xC7, 0x50, 0xCF, 0xC4, 0xC7, 0x50, 0x8F, 0xC4, 0xC7, 0x50, 0x2F, 0xC4,
  0xC7, 0x60, 0x9F, 0xB4, 0xC7, 0x70, 0xBF, 0xA4, 0xC7, 0x71, 0x09, 0xF9, 0x4C, 0x77, 0x28, 0x22,
  0x8C, 0xEC, 0x4C, 0x77, 0x6C, 0x4C, 0x77, 0x6C, 0x4C, 0x77, 0x6C, 0x4C, 0x77, 0x6C, 0x4C, 0x77,
  0x6C, 0x4C, 0x77, 0x6C, 0x4C, 0x77, 0x6C, 0x4C, 0x77, 0x6C, 0x4C, 0x77, 0x10, 0x74, 0xC4, 0xC7,
  0x70, 0x79, 0x4C, 0x4C, 0x76, 0x07, 0xA7, 0x77, 0x70, 0x7B, 0x77, 0x76, 0x07, 0xC7, 0x77, 0x50,
  0x7D, 0x77, 0x74, 0x07, 0xFF, 0xFF, 0xA0, 0x7F, 0xFF, 0xFB, 0x07, 0xFF, 0xFF, 0xB1, 0x07, 0xFF,
  0xFF, 0xA2, 0x07, 0xD7, 0x77, 0x60, 0x7C, 0x77, 0x77, 0x07, 0xB7, 0x77, 0x71, 0x07, 0xA7, 0x77,
  0x72, 0x07, 0x97, 0x77, 0x73, 0x07, 0x77, 0x73,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_textdirection_r_to_l() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_textdirection_r_to_l_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_format_underlined 48x48, 4-bit Alpha,  RLE, 123 bytes.
static const uint8_t ic_sharp_48_editor_format_underlined_data[] PROGMEM = {
  0x2D, 0x77, 0xD4, 0xD7, 0x7D, 0x4D, 0x77, 0xD4, 0xD7, 0x7D, 0x4D, 0x77, 0xD4, 0xD7, 0x7D, 0x4D,
  0x77, 0xD4, 0xD7, 0x7D, 0x4D, 0x77, 0xD4, 0xD7, 0x7D, 0x4D, 0x77, 0xD4, 0xD7, 0x7D, 0x4D, 0x77,
  0xD4, 0xD7, 0x7D, 0x4D, 0x77, 0xD4, 0xD7, 0x7D, 0x40, 0xEC, 0x77, 0xC0, 0xE4, 0x0D, 0xC0, 0x27,
  0x50, 0x2C, 0x0D, 0x40, 0xBC, 0x07, 0x75, 0x07, 0xC0, 0xB4, 0x06, 0xC0, 0xE7, 0x50, 0xEC, 0x06,
  0x40, 0x1D, 0x0A, 0x73, 0x0A, 0xD0, 0x15, 0x09, 0xD0, 0xA7, 0x10, 0xAD, 0x09, 0x60, 0x10, 0xED,
  0x81, 0xE7, 0x22, 0x81, 0x27, 0xED, 0x0E, 0x01, 0x70, 0x4F, 0xFC, 0x04, 0x72, 0x06, 0xFF, 0xA0,
  0x67, 0x40, 0x40, 0xEF, 0xD0, 0xE0, 0x47, 0x60, 0x10, 0x9F, 0xB0, 0x90, 0x17, 0x72, 0x89, 0x01,
  0x6A, 0xDE, 0xED, 0xA6, 0x18, 0x09, 0xE5, 0x08, 0x09, 0xD4, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_format_underlined() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 6, 37, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_format_underlined_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_functions 48x48, 4-bit Alpha,  RLE, 104 bytes.
static const uint8_t ic_sharp_48_editor_functions_data[] PROGMEM = {
  0x80, 0x9B, 0x4F, 0x07, 0xFF, 0xFA, 0x10, 0x5F, 0xFF, 0x92, 0x04, 0xF0, 0x77, 0x72, 0x03, 0x0E,
  0xE0, 0x77, 0x72, 0x03, 0x0E, 0xE0, 0x77, 0x72, 0x02, 0x0D, 0xE0, 0x77, 0x72, 0x01, 0x0D, 0xE0,
  0x77, 0x72, 0x01, 0x0C, 0xE0, 0x77, 0x73, 0x0B, 0xE0, 0x77, 0x73, 0x0A, 0xE0, 0x77, 0x73, 0x09,
  0xE0, 0x77, 0x73, 0x08, 0xE0, 0x77, 0x72, 0x08, 0xE0, 0x77, 0x71, 0x09, 0xE0, 0x77, 0x71, 0x0A,
  0xE0, 0x77, 0x71, 0x0B, 0xE0, 0x77, 0x70, 0x10, 0xCE, 0x07, 0x77, 0x01, 0x0D, 0xE0, 0x77, 0x70,
  0x20, 0xDE, 0x07, 0x77, 0x03, 0x0E, 0xE0, 0x77, 0x70, 0x30, 0xEE, 0x07, 0x77, 0x04, 0xF0, 0x77,
  0x70, 0x5F, 0xFF, 0x90, 0x78, 0x09, 0xE3, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_functions() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(12, 8, 35, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_functions_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_height 48x48, 4-bit Alpha,  RLE, 83 bytes.
static const uint8_t ic_sharp_48_editor_height_data[] PROGMEM = {
  0x70, 0x07, 0x76, 0x07, 0xA0, 0x77, 0x40, 0x7C, 0x07, 0x72, 0x07, 0xE0, 0x77, 0x07, 0xF9, 0x07,
  0x50, 0x7F, 0xB0, 0x73, 0x07, 0xFD, 0x81, 0x70, 0x8F, 0xF0, 0x86, 0xC7, 0x5C, 0x75, 0xC7, 0x5C,
  0x75, 0xC7, 0x5C, 0x75, 0xC7, 0x5C, 0x75, 0xC7, 0x5C, 0x75, 0xC7, 0x5C, 0x75, 0xC7, 0x5C, 0x75,
  0xC7, 0x5C, 0x75, 0xC7, 0x5C, 0x75, 0xC7, 0x5C, 0x60, 0x8F, 0xF8, 0x18, 0x07, 0xFD, 0x07, 0x30,
  0x7F, 0xB0, 0x75, 0x07, 0xF9, 0x07, 0x70, 0x7E, 0x07, 0x72, 0x07, 0xC0, 0x77, 0x40, 0x7A, 0x07,
  0x76, 0x00, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_height() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(16, 6, 31, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_height_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_hexagon 48x48, 4-bit Alpha,  RLE, 194 bytes.
static const uint8_t ic_sharp_48_editor_hexagon_data[] PROGMEM = {
  0x73, 0x0A, 0xFF, 0xE0, 0xA7, 0x75, 0x04, 0xFF, 0xF9, 0x04, 0x77, 0x40, 0xCF, 0xFF, 0x90, 0xC7,
  0x73, 0x06, 0xFF, 0xFB, 0x06, 0x77, 0x10, 0x10, 0xEF, 0xFF, 0xB0, 0xE0, 0x17, 0x70, 0x8F, 0xFF,
  0xD0, 0x87, 0x60, 0x2F, 0xFF, 0xF0, 0x27, 0x50, 0xBF, 0xFF, 0xF0, 0xB7, 0x40, 0x4F, 0xFF, 0xFA,
  0x04, 0x73, 0x0D, 0xFF, 0xFF, 0xA0, 0xD7, 0x20, 0x7F, 0xFF, 0xFC, 0x07, 0x70, 0x10, 0xEF, 0xFF,
  0xFC, 0x0E, 0x01, 0x60, 0x9F, 0xFF, 0xFE, 0x09, 0x50, 0x38, 0x0C, 0x0F, 0x03, 0x40, 0xB8, 0x0C,
  0x0F, 0x0B, 0x30, 0x58, 0x0C, 0x2F, 0x05, 0x20, 0xD8, 0x0C, 0x2F, 0x81, 0xD0, 0x78, 0x0C, 0x4F,
  0x00, 0x78, 0x0C, 0x4F, 0x81, 0x70, 0xD8, 0x0C, 0x2F, 0x0D, 0x20, 0x58, 0x0C, 0x2F, 0x05, 0x30,
  0xB8, 0x0C, 0x0F, 0x0B, 0x40, 0x38, 0x0C, 0x0F, 0x03, 0x50, 0x9F, 0xFF, 0xFE, 0x09, 0x60, 0x10,
  0xEF, 0xFF, 0xFC, 0x0E, 0x01, 0x70, 0x7F, 0xFF, 0xFC, 0x07, 0x72, 0x0D, 0xFF, 0xFF, 0xA0, 0xD7,
  0x30, 0x4F, 0xFF, 0xFA, 0x04, 0x74, 0x0B, 0xFF, 0xFF, 0x0B, 0x75, 0x02, 0xFF, 0xFF, 0x02, 0x76,
  0x08, 0xFF, 0xFD, 0x08, 0x77, 0x01, 0x0E, 0xFF, 0xFB, 0x0E, 0x01, 0x77, 0x10, 0x6F, 0xFF, 0xB0,
  0x67, 0x73, 0x0C, 0xFF, 0xF9, 0x0C, 0x77, 0x40, 0x4F, 0xFF, 0x90, 0x47, 0x75, 0x0A, 0xFF, 0xE0,
  0xA7, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_hexagon() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 44, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_hexagon_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_highlight 48x48, 4-bit Alpha,  RLE, 155 bytes.
static const uint8_t ic_sharp_48_editor_highlight_data[] PROGMEM = {
  0x77, 0x1C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x30,
  0xA0, 0x57, 0x4C, 0x74, 0x06, 0x0A, 0x30, 0xBA, 0x05, 0x77, 0x73, 0x06, 0xA8, 0x1A, 0x0A, 0xC0,
  0x57, 0x77, 0x10, 0x6C, 0x0A, 0x04, 0xD0, 0x57, 0x76, 0x06, 0xD8, 0x14, 0x04, 0xC0, 0xA7, 0x76,
  0x0B, 0xC0, 0x43, 0x04, 0xA0, 0xB7, 0x77, 0x10, 0xBA, 0x04, 0x50, 0x40, 0xA7, 0x77, 0x30, 0xA0,
  0x48, 0x09, 0x90, 0x0F, 0xFF, 0xB7, 0x3F, 0xFF, 0xB7, 0x3F, 0xFF, 0xB7, 0x3F, 0xFF, 0xB7, 0x3F,
  0xFF, 0xB7, 0x3F, 0xFF, 0xB7, 0x3F, 0xFF, 0xB7, 0x3F, 0xFF, 0xB7, 0x3F, 0xFF, 0xB7, 0x3F, 0xFF,
  0xB7, 0x30, 0x7F, 0xFF, 0x90, 0x77, 0x40, 0x7F, 0xFE, 0x07, 0x76, 0x07, 0xFF, 0xC0, 0x77, 0x71,
  0x07, 0xFF, 0xA0, 0x77, 0x73, 0x07, 0xFF, 0x07, 0x77, 0x50, 0x7F, 0xD0, 0x77, 0x77, 0xFD, 0x77,
  0x71, 0xFD, 0x77, 0x71, 0xFD, 0x77, 0x71, 0xFD, 0x77, 0x71, 0xFD, 0x77, 0x71, 0xFD, 0x77, 0x71,
  0xFD, 0x77, 0x71, 0xFD, 0x77, 0x71, 0xFD, 0x77, 0x71, 0xFD, 0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_highlight() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 4, 40, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_highlight_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_horizontal_distribute 48x48, 4-bit Alpha,  RLE, 140 bytes.
static const uint8_t ic_sharp_48_editor_horizontal_distribute_data[] PROGMEM = {
  0xC7, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77,
  0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9,
  0x77, 0x77, 0x4F, 0x97, 0x6E, 0x76, 0xF9, 0x76, 0xE7, 0x6F, 0x97, 0x6E, 0x76, 0xF9, 0x76, 0xE7,
  0x6F, 0x97, 0x6E, 0x76, 0xF9, 0x76, 0xE7, 0x6F, 0x97, 0x6E, 0x76, 0xF9, 0x76, 0xE7, 0x6F, 0x97,
  0x6E, 0x76, 0xF9, 0x76, 0xE7, 0x6F, 0x97, 0x6E, 0x76, 0xF9, 0x76, 0xE7, 0x6F, 0x97, 0x6E, 0x76,
  0xF9, 0x76, 0xE7, 0x6F, 0x97, 0x6E, 0x76, 0xF9, 0x76, 0xE7, 0x6F, 0x97, 0x6E, 0x76, 0xF9, 0x76,
  0xE7, 0x6F, 0x97, 0x6E, 0x76, 0xF9, 0x76, 0xE7, 0x6F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F,
  0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77,
  0x74, 0xF9, 0x77, 0x77, 0x4F, 0x97, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4C,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_horizontal_distribute() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_horizontal_distribute_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_horizontal_rule 48x48, 4-bit Alpha,  RLE, 3 bytes.
static const uint8_t ic_sharp_48_editor_horizontal_rule_data[] PROGMEM = {
  0x80, 0x9F, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_horizontal_rule() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 22, 39, 25), Box(0, 0, 47, 47),
      ic_sharp_48_editor_horizontal_rule_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_chart_outlined 48x48, 4-bit Alpha,  RLE, 155 bytes.
static const uint8_t ic_sharp_48_editor_insert_chart_outlined_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xA8, 0x4D, 0xA1, 0x01, 0xEF, 0xFF, 0xFE, 0x81, 0xE1, 0xA8, 0x0C,
  0x0F, 0x0A, 0x0D, 0x80, 0xC0, 0xF0, 0xDC, 0x77, 0x77, 0x2F, 0x97, 0x77, 0x72, 0xF9, 0x77, 0x77,
  0x2F, 0x97, 0x77, 0x72, 0xF9, 0x76, 0xC7, 0x6F, 0x97, 0x6C, 0x76, 0xF9, 0x76, 0xC7, 0x6F, 0x97,
  0x6C, 0x76, 0xF9, 0x76, 0xC7, 0x6F, 0x97, 0x6C, 0x76, 0xF9, 0x5C, 0x4C, 0x76, 0xF9, 0x5C, 0x4C,
  0x76, 0xF9, 0x5C, 0x4C, 0x76, 0xF9, 0x5C, 0x4C, 0x76, 0xF9, 0x5C, 0x4C, 0x76, 0xF9, 0x5C, 0x4C,
  0x76, 0xF9, 0x5C, 0x4C, 0x4C, 0x5F, 0x95, 0xC4, 0xC4, 0xC5, 0xF9, 0x5C, 0x4C, 0x4C, 0x5F, 0x95,
  0xC4, 0xC4, 0xC5, 0xF9, 0x5C, 0x4C, 0x4C, 0x5F, 0x95, 0xC4, 0xC4, 0xC5, 0xF9, 0x5C, 0x4C, 0x4C,
  0x5F, 0x95, 0xC4, 0xC4, 0xC5, 0xF9, 0x77, 0x77, 0x2F, 0x97, 0x77, 0x72, 0xF9, 0x77, 0x77, 0x2F,
  0x97, 0x77, 0x72, 0xC0, 0xDB, 0x80, 0xB2, 0xBB, 0x0D, 0x0A, 0x80, 0xC0, 0xF8, 0x1A, 0x1E, 0xFF,
  0xFF, 0xE8, 0x4E, 0x10, 0x1A, 0xDF, 0xFF, 0xFA, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_chart_outlined() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(5, 6, 42, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_chart_outlined_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_chart 48x48, 4-bit Alpha,  RLE, 119 bytes.
static const uint8_t ic_sharp_48_editor_insert_chart_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0x84, 0xDA, 0x10, 0x1E, 0xFF, 0xFF, 0xC8, 0x1E, 0x1A, 0xFF, 0xFF,
  0xE0, 0xA0, 0xDF, 0xFF, 0xFE, 0x0D, 0x80, 0xAB, 0x4F, 0x4F, 0xFF, 0xFC, 0x4F, 0xFF, 0xFC, 0x4F,
  0xFF, 0xFC, 0x4F, 0xFF, 0xFC, 0x4F, 0xFF, 0xFC, 0x4F, 0xFF, 0xB4, 0xC4, 0xFF, 0xFB, 0x4C, 0x4F,
  0xFF, 0xB4, 0xC4, 0xFF, 0xFB, 0x4C, 0x4F, 0xFF, 0xB4, 0xC4, 0xFF, 0xFB, 0x4C, 0x4F, 0xFF, 0xB4,
  0xC4, 0xC4, 0xFF, 0xA4, 0xC4, 0xC4, 0xFF, 0xA4, 0xC4, 0xC4, 0xFF, 0xA4, 0xC4, 0xC4, 0xFF, 0xA4,
  0xC4, 0xC4, 0xFF, 0xA4, 0xC4, 0xC4, 0xFF, 0xA4, 0xC4, 0xC4, 0xFF, 0xA4, 0xC4, 0xC4, 0x80, 0xAA,
  0x4F, 0x0D, 0xFF, 0xFF, 0xE0, 0xD0, 0xAF, 0xFF, 0xFE, 0x81, 0xA1, 0xEF, 0xFF, 0xFC, 0x84, 0xE1,
  0x01, 0xAD, 0xFF, 0xFF, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_comment 48x48, 4-bit Alpha,  RLE, 121 bytes.
static const uint8_t ic_sharp_48_editor_insert_comment_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x0A, 0x0D, 0x80, 0xC2, 0xF0, 0xD8, 0x0A, 0xC4, 0xF7, 0x77, 0x3F, 0xFA, 0x77, 0x73, 0xFF,
  0xA7, 0x77, 0x3F, 0xFA, 0x77, 0x73, 0x80, 0x9B, 0x4F, 0x77, 0x73, 0xFF, 0xA7, 0x77, 0x3F, 0xFA,
  0x77, 0x73, 0xFF, 0xA7, 0x77, 0x38, 0x09, 0xB4, 0xF7, 0x77, 0x3F, 0xFA, 0x77, 0x73, 0xFF, 0xA7,
  0x77, 0x3F, 0xFA, 0x77, 0x73, 0x80, 0xAC, 0x4F, 0x0D, 0x80, 0xC3, 0xF0, 0xA8, 0x0C, 0x3F, 0x01,
  0x0E, 0x80, 0xC2, 0xF1, 0x81, 0x1A, 0xD8, 0x0C, 0x0F, 0x77, 0x77, 0x40, 0x7F, 0x77, 0x77, 0x50,
  0x7E, 0x77, 0x77, 0x60, 0x7D, 0x77, 0x77, 0x70, 0x7C, 0x80, 0xC0, 0x00, 0x7B, 0x80, 0xC1, 0x00,
  0x7A, 0x80, 0xC2, 0x00, 0x79, 0x80, 0xC3, 0x00, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_comment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_comment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_drive_file 48x48, 4-bit Alpha,  RLE, 95 bytes.
static const uint8_t ic_sharp_48_editor_insert_drive_file_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xA0, 0x77, 0x40, 0x10, 0xEF, 0xFD, 0x07, 0x73, 0x09, 0xFF, 0xF0, 0x77,
  0x20, 0xDF, 0xFB, 0x07, 0xC0, 0x77, 0x1F, 0xFC, 0x10, 0x7C, 0x07, 0x7F, 0xFC, 0x20, 0x7C, 0x07,
  0x6F, 0xFC, 0x30, 0x7C, 0x07, 0x5F, 0xFC, 0x40, 0x7C, 0x07, 0x4F, 0xFC, 0x50, 0x7C, 0x07, 0x3F,
  0xFC, 0x60, 0x7C, 0x07, 0x2F, 0xFC, 0x70, 0x7C, 0x07, 0x1F, 0xFC, 0x71, 0x07, 0xC0, 0x7F, 0xFC,
  0x72, 0x07, 0xFF, 0xF9, 0x73, 0x07, 0x80, 0x9A, 0xF7, 0xF0, 0xDF, 0xFF, 0xFA, 0x0D, 0x0A, 0xFF,
  0xFF, 0xA8, 0x1A, 0x1E, 0xFF, 0xFF, 0x84, 0xE1, 0x01, 0xAE, 0xFF, 0xFB, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_drive_file() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_drive_file_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_emoticon 48x48, 4-bit Alpha,  RLE, 368 bytes.
static const uint8_t ic_sharp_48_editor_insert_emoticon_data[] PROGMEM = {
  0x77, 0x83, 0x37, 0xAC, 0xEA, 0x83, 0xDC, 0xA7, 0x37, 0x77, 0x48, 0x11, 0x8D, 0xFD, 0x81, 0xD8,
  0x17, 0x76, 0x01, 0x09, 0xFF, 0xC0, 0x90, 0x17, 0x73, 0x05, 0x0E, 0xFF, 0xE0, 0xE0, 0x57, 0x71,
  0x09, 0xF8, 0x2B, 0x63, 0x22, 0x82, 0x23, 0x6B, 0xF0, 0x97, 0x60, 0xBD, 0x0D, 0x06, 0x75, 0x06,
  0x0D, 0xD0, 0xA7, 0x40, 0xBD, 0x07, 0x77, 0x20, 0x7D, 0x0A, 0x72, 0x09, 0xC0, 0xD0, 0x37, 0x74,
  0x03, 0x0D, 0xC0, 0x97, 0x05, 0xC0, 0xC0, 0x17, 0x76, 0x01, 0x0C, 0xC0, 0x55, 0x01, 0x0E, 0xB0,
  0xD0, 0x17, 0x77, 0x10, 0x10, 0xDB, 0x0E, 0x01, 0x40, 0x9C, 0x03, 0x77, 0x73, 0x03, 0xC0, 0x93,
  0x01, 0xC0, 0x77, 0x77, 0x50, 0x7C, 0x01, 0x20, 0x8B, 0x0D, 0x58, 0x28, 0xDD, 0x87, 0x38, 0x28,
  0xDD, 0x85, 0x0D, 0xB0, 0x82, 0x0D, 0xB0, 0x64, 0x08, 0xC0, 0x87, 0x10, 0x8C, 0x08, 0x40, 0x6B,
  0x81, 0xD0, 0x3C, 0x50, 0xDC, 0x0D, 0x71, 0x0D, 0xC0, 0xD5, 0xC0, 0x30, 0x7B, 0x0B, 0x50, 0xDC,
  0x0D, 0x71, 0x0D, 0xC0, 0xD5, 0x0B, 0xB0, 0x70, 0xAB, 0x06, 0x50, 0x8C, 0x08, 0x71, 0x08, 0xC0,
  0x85, 0x06, 0xB0, 0xA0, 0xCB, 0x03, 0x68, 0x28, 0xDD, 0x87, 0x38, 0x28, 0xDD, 0x86, 0x03, 0xB0,
  0xC0, 0xEB, 0x02, 0x77, 0x77, 0x20, 0x2B, 0x0E, 0xC7, 0x77, 0x74, 0xF9, 0x77, 0x77, 0x4C, 0x0E,
  0xB0, 0x27, 0x77, 0x72, 0x02, 0xB0, 0xE0, 0xCB, 0x03, 0x77, 0x77, 0x20, 0x3B, 0x0C, 0x0A, 0xB0,
  0x67, 0x77, 0x72, 0x06, 0xB0, 0xA0, 0x7B, 0x0B, 0x50, 0xEF, 0xFC, 0x0E, 0x50, 0xBB, 0x07, 0x03,
  0xC5, 0x07, 0xFF, 0xC0, 0x75, 0xC8, 0x13, 0x0D, 0xB0, 0x65, 0x0C, 0xFF, 0xA0, 0xC5, 0x06, 0xB0,
  0xD2, 0x08, 0xB0, 0xD5, 0x01, 0x0D, 0xFF, 0x0D, 0x01, 0x50, 0xDB, 0x08, 0x20, 0x1C, 0x07, 0x50,
  0x10, 0xCF, 0xD0, 0xC0, 0x15, 0x07, 0xC0, 0x13, 0x09, 0xC0, 0x36, 0x07, 0x0E, 0xF9, 0x0E, 0x07,
  0x60, 0x3C, 0x09, 0x40, 0x10, 0xEB, 0x0D, 0x01, 0x78, 0x16, 0xAD, 0xA8, 0x1D, 0xA6, 0x70, 0x10,
  0xDB, 0x0E, 0x01, 0x50, 0x5C, 0x0C, 0x01, 0x77, 0x60, 0x10, 0xCC, 0x05, 0x70, 0x9C, 0x0D, 0x03,
  0x77, 0x40, 0x30, 0xDC, 0x09, 0x72, 0x0B, 0xD0, 0x77, 0x72, 0x07, 0xD0, 0xA7, 0x40, 0xBD, 0x0D,
  0x06, 0x75, 0x06, 0x0D, 0xD0, 0xA7, 0x60, 0x9F, 0x82, 0xB6, 0x32, 0x28, 0x22, 0x36, 0xBF, 0x09,
  0x77, 0x10, 0x50, 0xEF, 0xFE, 0x0E, 0x05, 0x77, 0x30, 0x10, 0x9F, 0xFC, 0x09, 0x01, 0x77, 0x68,
  0x11, 0x8D, 0xFD, 0x81, 0xD8, 0x17, 0x77, 0x48, 0x33, 0x7A, 0xCE, 0xA8, 0x3D, 0xCA, 0x73, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_emoticon() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_emoticon_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_invitation 48x48, 4-bit Alpha,  RLE, 131 bytes.
static const uint8_t ic_sharp_48_editor_insert_invitation_data[] PROGMEM = {
  0x6C, 0x77, 0x2C, 0x75, 0xC7, 0x72, 0xC7, 0x5C, 0x77, 0x2C, 0x75, 0xC7, 0x72, 0xC7, 0x81, 0x1A,
  0xDF, 0xFF, 0xF8, 0x4D, 0xA1, 0x01, 0xEF, 0xFF, 0xFC, 0x81, 0xE1, 0x9F, 0xFF, 0xFE, 0x0A, 0x0D,
  0xFF, 0xFF, 0xE0, 0xD8, 0x0B, 0xB0, 0xF7, 0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97,
  0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97, 0x7F,
  0xB4, 0xF9, 0x77, 0xFB, 0x4F, 0x97, 0x7F, 0xB4, 0xF9, 0x77, 0xFB, 0x4F, 0x97, 0x7F, 0xB4, 0xF9,
  0x77, 0xFB, 0x4F, 0x97, 0x7F, 0xB4, 0xF9, 0x77, 0xFB, 0x4F, 0x97, 0x7F, 0xB4, 0xF9, 0x77, 0xFB,
  0x4F, 0x97, 0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97, 0x77, 0x7F, 0x97, 0x77, 0x7C, 0x0D, 0xFF, 0xFF,
  0xE0, 0xD0, 0xAF, 0xFF, 0xFE, 0x81, 0xA1, 0xEF, 0xFF, 0xFC, 0x84, 0xE1, 0x01, 0xAD, 0xFF, 0xFF,
  0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_invitation() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 2, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_invitation_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_link 48x48, 4-bit Alpha,  RLE, 162 bytes.
static const uint8_t ic_sharp_48_editor_insert_link_data[] PROGMEM = {
  0x68, 0x25, 0x9D, 0xEF, 0x94, 0xF9, 0x82, 0xED, 0x95, 0x73, 0x04, 0x0D, 0xFD, 0x4F, 0xD0, 0xD0,
  0x47, 0x08, 0xFF, 0x4F, 0xF0, 0x85, 0x08, 0xD0, 0xE0, 0xD8, 0x04, 0xB4, 0x80, 0x4B, 0x0D, 0x0E,
  0xD0, 0x83, 0x04, 0xC0, 0xD0, 0x57, 0x77, 0x30, 0x50, 0xDC, 0x04, 0x20, 0xDB, 0x0B, 0x77, 0x77,
  0x0B, 0xB8, 0x1D, 0x05, 0xB0, 0xD7, 0x77, 0x72, 0x0D, 0xB0, 0x50, 0x9B, 0x05, 0x77, 0x77, 0x20,
  0x5B, 0x09, 0x0D, 0xB7, 0x1F, 0xFA, 0x71, 0xB0, 0xD0, 0xEA, 0x0D, 0x71, 0xFF, 0xA7, 0x10, 0xDA,
  0x00, 0xEA, 0x0D, 0x71, 0xFF, 0xA7, 0x10, 0xDA, 0x0E, 0x0D, 0xB7, 0x1F, 0xFA, 0x71, 0xB0, 0xD0,
  0x9B, 0x05, 0x77, 0x77, 0x20, 0x5B, 0x09, 0x05, 0xB0, 0xD7, 0x77, 0x72, 0x0D, 0xB8, 0x15, 0x0D,
  0xB0, 0xB7, 0x77, 0x70, 0xBB, 0x0D, 0x20, 0x4C, 0x0D, 0x05, 0x77, 0x73, 0x05, 0x0D, 0xC0, 0x43,
  0x08, 0xD0, 0xE0, 0xD8, 0x04, 0xB4, 0x80, 0x4B, 0x0D, 0x0E, 0xD0, 0x85, 0x08, 0xFF, 0x4F, 0xF0,
  0x87, 0x04, 0x0D, 0xFD, 0x4F, 0xD0, 0xD0, 0x47, 0x38, 0x25, 0x9D, 0xEF, 0x94, 0xF9, 0x82, 0xED,
  0x95, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_link() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 14, 43, 33), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_link_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_page_break 48x48, 4-bit Alpha,  RLE, 164 bytes.
static const uint8_t ic_sharp_48_editor_insert_page_break_data[] PROGMEM = {
  0x78, 0x11, 0xAD, 0xFF, 0xA0, 0x77, 0x77, 0x20, 0x10, 0xEF, 0xFD, 0x07, 0x77, 0x71, 0x09, 0xFF,
  0xF0, 0x77, 0x77, 0x0D, 0xFF, 0xB0, 0x7C, 0x07, 0x77, 0x6F, 0xFC, 0x10, 0x7C, 0x07, 0x77, 0x5F,
  0xFC, 0x20, 0x7C, 0x07, 0x77, 0x4F, 0xFC, 0x30, 0x7C, 0x07, 0x77, 0x3F, 0xFC, 0x40, 0x7C, 0x07,
  0x77, 0x2F, 0xFC, 0x50, 0x7C, 0x07, 0x77, 0x1F, 0xFC, 0x60, 0x7C, 0x07, 0x77, 0xFF, 0xC7, 0x07,
  0xC0, 0x77, 0x6F, 0xFC, 0x71, 0x07, 0xC0, 0x77, 0x5F, 0xFC, 0x72, 0x07, 0xC7, 0x5F, 0xFC, 0x73,
  0x07, 0xB7, 0x5F, 0xFF, 0xFC, 0x75, 0xFF, 0xFF, 0xC7, 0x5F, 0xFF, 0xFC, 0x75, 0xFF, 0xFF, 0xC8,
  0x0A, 0xE2, 0x0F, 0xD4, 0xFD, 0x4F, 0xFF, 0xB4, 0xFD, 0x4F, 0xFF, 0xB4, 0xFD, 0x4F, 0xFF, 0xB4,
  0xFD, 0x4F, 0xD8, 0x0A, 0xE2, 0x0F, 0xFF, 0xFC, 0x75, 0xFF, 0xFF, 0xC7, 0x5F, 0xFF, 0xFC, 0x75,
  0xFF, 0xFF, 0xC7, 0x5F, 0xFF, 0xFC, 0x75, 0xFF, 0xFF, 0xC7, 0x50, 0xDF, 0xFF, 0xFA, 0x0D, 0x75,
  0x0A, 0xFF, 0xFF, 0xA0, 0xA7, 0x50, 0x10, 0xEF, 0xFF, 0xF0, 0xE0, 0x17, 0x68, 0x11, 0xAE, 0xFF,
  0xFB, 0x81, 0xDA, 0x17,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_page_break() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 4, 45, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_page_break_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_insert_photo 48x48, 4-bit Alpha,  RLE, 128 bytes.
static const uint8_t ic_sharp_48_editor_insert_photo_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0x84, 0xDA, 0x10, 0x1E, 0xFF, 0xFF, 0xC8, 0x1E, 0x1A, 0xFF, 0xFF,
  0xE0, 0xA0, 0xDF, 0xFF, 0xFE, 0x0D, 0x80, 0x98, 0x92, 0xF0, 0x09, 0xFF, 0xFF, 0xD0, 0xC2, 0x0C,
  0xFF, 0xFF, 0xB0, 0xE0, 0x12, 0x02, 0x0E, 0xFF, 0xE0, 0x09, 0xF9, 0x04, 0x40, 0x5F, 0xFD, 0x0C,
  0x20, 0xBE, 0x07, 0x60, 0x9F, 0xFB, 0x0E, 0x01, 0x20, 0x10, 0xDC, 0x0B, 0x71, 0x0C, 0xFF, 0xA0,
  0x44, 0x02, 0x0E, 0xA0, 0xD0, 0x17, 0x10, 0x20, 0xEF, 0xF0, 0x76, 0x04, 0xA0, 0x37, 0x30, 0x5F,
  0xE0, 0xB7, 0x10, 0x06, 0x75, 0x09, 0xFC, 0x0D, 0x01, 0x77, 0x72, 0x0C, 0xFB, 0x03, 0x77, 0x73,
  0x02, 0x0E, 0xF9, 0x06, 0x77, 0x75, 0x05, 0x80, 0x99, 0x0F, 0x0D, 0xFF, 0xFF, 0xE0, 0xD0, 0xAF,
  0xFF, 0xFE, 0x81, 0xA1, 0xEF, 0xFF, 0xFC, 0x84, 0xE1, 0x01, 0xAD, 0xFF, 0xFF, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_insert_photo() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_insert_photo_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_linear_scale 48x48, 4-bit Alpha,  RLE, 86 bytes.
static const uint8_t ic_sharp_48_editor_linear_scale_data[] PROGMEM = {
  0x28, 0x44, 0xBE, 0xEB, 0x47, 0x28, 0x44, 0xBE, 0xEB, 0x47, 0x28, 0x44, 0xBE, 0xEB, 0x43, 0x08,
  0xE0, 0x77, 0x07, 0xE0, 0x77, 0x07, 0xE8, 0x18, 0x04, 0xF9, 0x04, 0x50, 0x4F, 0x90, 0x45, 0x04,
  0xF9, 0x04, 0x0B, 0x80, 0xC2, 0xF0, 0xB0, 0xE8, 0x0C, 0x2F, 0x00, 0xE8, 0x0C, 0x2F, 0x0E, 0x0B,
  0x80, 0xC2, 0xF0, 0xB0, 0x4F, 0x90, 0x45, 0x04, 0xF9, 0x04, 0x50, 0x4F, 0x98, 0x14, 0x08, 0xE0,
  0x77, 0x07, 0xE0, 0x77, 0x07, 0xE0, 0x83, 0x84, 0x4B, 0xEE, 0xB4, 0x72, 0x84, 0x4B, 0xEE, 0xB4,
  0x72, 0x84, 0x4B, 0xEE, 0xB4, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_linear_scale() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 19, 43, 28), Box(0, 0, 47, 47),
      ic_sharp_48_editor_linear_scale_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_line_axis 48x48, 4-bit Alpha,  RLE, 271 bytes.
static const uint8_t ic_sharp_48_editor_line_axis_data[] PROGMEM = {
  0x77, 0x07, 0x08, 0x80, 0xC1, 0x00, 0x7A, 0x09, 0x77, 0x77, 0x70, 0x7C, 0x0A, 0x77, 0x77, 0x50,
  0x7E, 0x0B, 0x77, 0x77, 0x30, 0x7F, 0x90, 0xC0, 0x17, 0x71, 0x03, 0x09, 0x74, 0x07, 0xD0, 0xEC,
  0x0C, 0x01, 0x76, 0x82, 0x2E, 0xF9, 0x72, 0x07, 0xD8, 0x17, 0x1C, 0xC0, 0xD0, 0x27, 0x40, 0x10,
  0xDB, 0x09, 0x70, 0x7D, 0x07, 0x30, 0xBC, 0x0E, 0x02, 0x72, 0x01, 0x0C, 0xC0, 0x66, 0x07, 0xD0,
  0x75, 0x0A, 0xC0, 0xE0, 0x37, 0x10, 0xBC, 0x08, 0x60, 0x7D, 0x07, 0x70, 0x9C, 0x0E, 0x04, 0x60,
  0xAC, 0x09, 0x60, 0x7D, 0x07, 0x72, 0x08, 0xD0, 0x54, 0x08, 0xC0, 0xB6, 0x07, 0xD0, 0x77, 0x40,
  0x7D, 0x06, 0x20, 0x7C, 0x0C, 0x60, 0x7D, 0x07, 0x50, 0x08, 0x60, 0x6D, 0x07, 0x05, 0xC0, 0xD0,
  0x15, 0x07, 0xD0, 0x75, 0x08, 0xA0, 0x86, 0x05, 0xFA, 0x0E, 0x02, 0x50, 0x7D, 0x07, 0x50, 0x7C,
  0x08, 0x60, 0x40, 0xEE, 0x0E, 0x03, 0x60, 0x8C, 0x07, 0x50, 0x7E, 0x08, 0x60, 0x30, 0xED, 0x05,
  0x71, 0x08, 0xA0, 0x85, 0x07, 0xF9, 0x08, 0x50, 0x10, 0xDD, 0x0B, 0x72, 0x00, 0x85, 0x07, 0xFB,
  0x08, 0x40, 0xBF, 0x0C, 0x01, 0x76, 0x07, 0xD0, 0x07, 0xD0, 0x82, 0x0A, 0xC0, 0xEC, 0x0C, 0x01,
  0x74, 0x07, 0xD0, 0x72, 0x07, 0xD0, 0x08, 0xC8, 0x1B, 0x1C, 0xC0, 0xD0, 0x27, 0x20, 0x7D, 0x07,
  0x40, 0x7F, 0xA0, 0xC3, 0x0B, 0xC0, 0xE0, 0x27, 0x07, 0xD0, 0x76, 0x07, 0xF0, 0xD0, 0x14, 0x0A,
  0xC0, 0xE0, 0x35, 0x07, 0xD0, 0x77, 0x10, 0x7D, 0x0E, 0x02, 0x60, 0x9C, 0x0E, 0x04, 0x30, 0x7D,
  0x07, 0x73, 0x07, 0xC0, 0x37, 0x10, 0x8C, 0x0A, 0x20, 0x7D, 0x07, 0x75, 0x07, 0xA0, 0x57, 0x30,
  0x7A, 0x0A, 0x20, 0x7D, 0x07, 0x77, 0x07, 0x06, 0x75, 0x06, 0x0A, 0x20, 0x7D, 0x07, 0x77, 0x77,
  0x50, 0x7C, 0x07, 0x77, 0x77, 0x70, 0x7A, 0x07, 0x80, 0xC1, 0x00, 0x07, 0x80, 0xC0, 0x00,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_line_axis() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 43, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_line_axis_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_margin 48x48, 4-bit Alpha,  RLE, 101 bytes.
static const uint8_t ic_sharp_48_editor_margin_data[] PROGMEM = {
  0x80, 0xAA, 0x0F, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x4C,
  0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4,
  0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x4C, 0x4C, 0x4C,
  0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x77,
  0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77,
  0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9,
  0x77, 0x77, 0x80, 0xAA, 0x0F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_margin() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_margin_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_merge_type 48x48, 4-bit Alpha,  RLE, 140 bytes.
static const uint8_t ic_sharp_48_editor_merge_type_data[] PROGMEM = {
  0x75, 0x00, 0x77, 0x77, 0x20, 0x7A, 0x07, 0x77, 0x70, 0x7C, 0x07, 0x77, 0x50, 0x7E, 0x07, 0x77,
  0x30, 0x7F, 0x90, 0x77, 0x71, 0x07, 0xFB, 0x07, 0x76, 0x07, 0xFD, 0x07, 0x74, 0x07, 0xFF, 0x07,
  0x72, 0x07, 0xFF, 0xA0, 0x77, 0x71, 0xC7, 0x77, 0x1C, 0x77, 0x71, 0xC7, 0x77, 0x1C, 0x77, 0x71,
  0xC7, 0x77, 0x1C, 0x77, 0x71, 0xC7, 0x77, 0x1C, 0x77, 0x71, 0xC7, 0x77, 0x1C, 0x77, 0x71, 0xC7,
  0x77, 0x05, 0xC7, 0x76, 0x05, 0xD7, 0x75, 0x05, 0xD0, 0x57, 0x74, 0x05, 0xD0, 0x57, 0x74, 0x05,
  0xD0, 0x55, 0x00, 0x57, 0x40, 0x5D, 0x05, 0x50, 0x5A, 0x05, 0x72, 0x05, 0xD0, 0x55, 0x05, 0xC0,
  0x57, 0x05, 0xD0, 0x56, 0x05, 0xD0, 0x55, 0x05, 0xD0, 0x57, 0x10, 0x5D, 0x05, 0x30, 0x5D, 0x05,
  0x73, 0x05, 0xD8, 0x15, 0x05, 0xD0, 0x57, 0x50, 0x5D, 0x00, 0x5C, 0x05, 0x77, 0x05, 0xC8, 0x15,
  0x05, 0xA0, 0x57, 0x72, 0x05, 0xA0, 0x53, 0x00, 0x57, 0x74, 0x00, 0x52,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_merge_type() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(11, 7, 36, 40), Box(0, 0, 47, 47),
      ic_sharp_48_editor_merge_type_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_mode_comment 48x48, 4-bit Alpha,  RLE, 75 bytes.
static const uint8_t ic_sharp_48_editor_mode_comment_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xC8, 0x4D, 0xA1, 0x01, 0xE8, 0x0C, 0x0F, 0x81, 0xE1, 0xA8, 0x0C,
  0x2F, 0x09, 0x0D, 0x80, 0xC2, 0xF0, 0xD8, 0x09, 0xEF, 0x4F, 0x0D, 0x80, 0xC3, 0xF0, 0xA8, 0x0C,
  0x3F, 0x01, 0x0E, 0x80, 0xC2, 0xF1, 0x81, 0x1A, 0xD8, 0x0C, 0x0F, 0x77, 0x77, 0x40, 0x7F, 0x77,
  0x77, 0x50, 0x7E, 0x77, 0x77, 0x60, 0x7D, 0x77, 0x77, 0x70, 0x7C, 0x80, 0xC0, 0x00, 0x7B, 0x80,
  0xC1, 0x00, 0x7A, 0x80, 0xC2, 0x00, 0x79, 0x80, 0xC3, 0x00, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_mode_comment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_mode_comment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_mode_edit_outline 48x48, 4-bit Alpha,  RLE, 231 bytes.
static const uint8_t ic_sharp_48_editor_mode_edit_outline_data[] PROGMEM = {
  0x77, 0x76, 0x82, 0x1B, 0xE8, 0x77, 0x77, 0x30, 0x10, 0xDB, 0x0A, 0x77, 0x77, 0x10, 0x10, 0xDD,
  0x0A, 0x77, 0x76, 0x01, 0x0D, 0xF0, 0xA7, 0x77, 0x50, 0x6F, 0xA0, 0xA7, 0x77, 0x50, 0x7F, 0xA0,
  0x87, 0x77, 0x01, 0x04, 0x30, 0x7F, 0x90, 0xE7, 0x76, 0x82, 0x1D, 0xE4, 0x30, 0x7F, 0x0B, 0x77,
  0x50, 0x10, 0xDA, 0x0E, 0x04, 0x30, 0x7D, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDC, 0x0E, 0x04, 0x30,
  0x7B, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDE, 0x0E, 0x04, 0x38, 0x27, 0xFD, 0x17, 0x74, 0x01, 0x0D,
  0xF9, 0x0E, 0x04, 0x30, 0x60, 0x17, 0x74, 0x01, 0x0D, 0xFB, 0x0E, 0x04, 0x77, 0x70, 0x10, 0xDF,
  0xD0, 0xE0, 0x47, 0x75, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17,
  0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D,
  0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01,
  0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10,
  0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0,
  0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x75, 0x0D,
  0xFE, 0x0D, 0x01, 0x77, 0x6F, 0xE0, 0xD0, 0x17, 0x77, 0xFD, 0x0D, 0x01, 0x77, 0x71, 0xFC, 0x0D,
  0x01, 0x77, 0x72, 0xFB, 0x0D, 0x01, 0x77, 0x73, 0xFA, 0x0D, 0x01, 0x77, 0x74, 0xF9, 0x0D, 0x01,
  0x77, 0x75, 0xF0, 0xD0, 0x17, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_mode_edit_outline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_mode_edit_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_mode_edit 48x48, 4-bit Alpha,  RLE, 231 bytes.
static const uint8_t ic_sharp_48_editor_mode_edit_data[] PROGMEM = {
  0x77, 0x76, 0x82, 0x1B, 0xE8, 0x77, 0x77, 0x30, 0x10, 0xDB, 0x0A, 0x77, 0x77, 0x10, 0x10, 0xDD,
  0x0A, 0x77, 0x76, 0x01, 0x0D, 0xF0, 0xA7, 0x77, 0x50, 0x6F, 0xA0, 0xA7, 0x77, 0x50, 0x7F, 0xA0,
  0x87, 0x77, 0x01, 0x04, 0x30, 0x7F, 0x90, 0xE7, 0x76, 0x82, 0x1D, 0xE4, 0x30, 0x7F, 0x0B, 0x77,
  0x50, 0x10, 0xDA, 0x0E, 0x04, 0x30, 0x7D, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDC, 0x0E, 0x04, 0x30,
  0x7B, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDE, 0x0E, 0x04, 0x38, 0x27, 0xFD, 0x17, 0x74, 0x01, 0x0D,
  0xF9, 0x0E, 0x04, 0x30, 0x60, 0x17, 0x74, 0x01, 0x0D, 0xFB, 0x0E, 0x04, 0x77, 0x70, 0x10, 0xDF,
  0xD0, 0xE0, 0x47, 0x75, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17,
  0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D,
  0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01,
  0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10,
  0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0,
  0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x75, 0x0D,
  0xFE, 0x0D, 0x01, 0x77, 0x6F, 0xE0, 0xD0, 0x17, 0x77, 0xFD, 0x0D, 0x01, 0x77, 0x71, 0xFC, 0x0D,
  0x01, 0x77, 0x72, 0xFB, 0x0D, 0x01, 0x77, 0x73, 0xFA, 0x0D, 0x01, 0x77, 0x74, 0xF9, 0x0D, 0x01,
  0x77, 0x75, 0xF0, 0xD0, 0x17, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_mode_edit() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_mode_edit_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_mode 48x48, 4-bit Alpha,  RLE, 231 bytes.
static const uint8_t ic_sharp_48_editor_mode_data[] PROGMEM = {
  0x77, 0x76, 0x82, 0x1B, 0xE8, 0x77, 0x77, 0x30, 0x10, 0xDB, 0x0A, 0x77, 0x77, 0x10, 0x10, 0xDD,
  0x0A, 0x77, 0x76, 0x01, 0x0D, 0xF0, 0xA7, 0x77, 0x50, 0x6F, 0xA0, 0xA7, 0x77, 0x50, 0x7F, 0xA0,
  0x87, 0x77, 0x01, 0x04, 0x30, 0x7F, 0x90, 0xE7, 0x76, 0x82, 0x1D, 0xE4, 0x30, 0x7F, 0x0B, 0x77,
  0x50, 0x10, 0xDA, 0x0E, 0x04, 0x30, 0x7D, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDC, 0x0E, 0x04, 0x30,
  0x7B, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDE, 0x0E, 0x04, 0x38, 0x27, 0xFD, 0x17, 0x74, 0x01, 0x0D,
  0xF9, 0x0E, 0x04, 0x30, 0x60, 0x17, 0x74, 0x01, 0x0D, 0xFB, 0x0E, 0x04, 0x77, 0x70, 0x10, 0xDF,
  0xD0, 0xE0, 0x47, 0x75, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17,
  0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D,
  0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01,
  0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10,
  0xDF, 0xE0, 0xD0, 0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0,
  0x17, 0x74, 0x01, 0x0D, 0xFE, 0x0D, 0x01, 0x77, 0x40, 0x10, 0xDF, 0xE0, 0xD0, 0x17, 0x75, 0x0D,
  0xFE, 0x0D, 0x01, 0x77, 0x6F, 0xE0, 0xD0, 0x17, 0x77, 0xFD, 0x0D, 0x01, 0x77, 0x71, 0xFC, 0x0D,
  0x01, 0x77, 0x72, 0xFB, 0x0D, 0x01, 0x77, 0x73, 0xFA, 0x0D, 0x01, 0x77, 0x74, 0xF9, 0x0D, 0x01,
  0x77, 0x75, 0xF0, 0xD0, 0x17, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_mode() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_mode_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_monetization_on 48x48, 4-bit Alpha,  RLE, 350 bytes.
static const uint8_t ic_sharp_48_editor_monetization_on_data[] PROGMEM = {
  0x77, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xDC, 0xA7, 0x37, 0x77, 0x48, 0x11, 0x8D, 0xFD, 0x81, 0xD8,
  0x17, 0x76, 0x01, 0x09, 0xFF, 0xC0, 0x90, 0x17, 0x73, 0x05, 0x0E, 0xFF, 0xE0, 0xE0, 0x57, 0x71,
  0x09, 0xFA, 0x07, 0x40, 0x2F, 0xA0, 0x97, 0x60, 0xAF, 0xB0, 0x74, 0x02, 0xFB, 0x0A, 0x74, 0x0A,
  0xFC, 0x07, 0x40, 0x2F, 0xC0, 0xA7, 0x20, 0x9F, 0xD0, 0x64, 0x02, 0xFD, 0x09, 0x70, 0x5F, 0xB8,
  0x1E, 0x72, 0x68, 0x11, 0x8E, 0xFB, 0x05, 0x50, 0x10, 0xEF, 0xA0, 0xB0, 0x17, 0x30, 0x20, 0xCF,
  0xA0, 0xE0, 0x14, 0x09, 0xFA, 0x0A, 0x76, 0x01, 0x0D, 0xFA, 0x09, 0x30, 0x1F, 0xA0, 0xE0, 0x13,
  0x81, 0x18, 0xDA, 0x81, 0xE9, 0x13, 0x05, 0xFB, 0x01, 0x20, 0x8F, 0xA0, 0x83, 0x01, 0x0D, 0xE0,
  0xD4, 0x0D, 0xFA, 0x08, 0x20, 0xDF, 0xA0, 0x53, 0x07, 0xF9, 0x05, 0x30, 0x9F, 0xA8, 0x1D, 0x03,
  0xFB, 0x04, 0x30, 0x8F, 0x98, 0x3A, 0x55, 0x5A, 0xFB, 0x03, 0x07, 0xFB, 0x06, 0x30, 0x3F, 0xFF,
  0xA0, 0x70, 0xAF, 0xB0, 0xA4, 0x04, 0x0D, 0xFF, 0xF0, 0xA0, 0xCF, 0xC0, 0x35, 0x81, 0x5A, 0xEF,
  0xFC, 0x0C, 0x0E, 0xFC, 0x0D, 0x02, 0x78, 0x14, 0x9E, 0xFF, 0x90, 0xEF, 0xE0, 0xE0, 0x57, 0x20,
  0x50, 0xDF, 0xFF, 0xF9, 0x0C, 0x05, 0x72, 0x08, 0xFE, 0x0E, 0xFF, 0xA8, 0x2E, 0xA6, 0x26, 0x08,
  0xFC, 0x0E, 0x0C, 0xFF, 0xE0, 0xC0, 0x65, 0x0C, 0xFB, 0x0C, 0x0A, 0xFF, 0xF9, 0x0C, 0x40, 0x5F,
  0xB0, 0xA0, 0x7F, 0xFF, 0xA0, 0x93, 0x01, 0xFB, 0x07, 0x03, 0xFB, 0x0F, 0x50, 0x6F, 0xA0, 0xD4,
  0xFB, 0x81, 0x30, 0xDF, 0xA0, 0x13, 0x0C, 0xF9, 0x0D, 0x4F, 0xA0, 0xD2, 0x08, 0xFA, 0x06, 0x30,
  0x4F, 0x90, 0x53, 0x02, 0xFA, 0x08, 0x20, 0x1F, 0xA0, 0xD4, 0x81, 0x3A, 0xEB, 0x0B, 0x04, 0x40,
  0x8F, 0xA0, 0x13, 0x09, 0xFA, 0x09, 0x77, 0x03, 0xFA, 0x09, 0x40, 0x10, 0xEF, 0xA0, 0xA0, 0x17,
  0x40, 0x40, 0xEF, 0x90, 0xE0, 0x15, 0x05, 0xFB, 0x81, 0xE8, 0x27, 0x04, 0x0A, 0xFB, 0x05, 0x70,
  0x9F, 0xD0, 0x74, 0x02, 0x0E, 0xFC, 0x09, 0x72, 0x0A, 0xFC, 0x07, 0x40, 0x2F, 0xC0, 0xA7, 0x40,
  0xAF, 0xB0, 0x74, 0x02, 0xFB, 0x0A, 0x76, 0x09, 0xFA, 0x07, 0x40, 0x2F, 0xA0, 0x97, 0x71, 0x05,
  0x0E, 0xFF, 0xE0, 0xE0, 0x57, 0x73, 0x01, 0x09, 0xFF, 0xC0, 0x90, 0x17, 0x76, 0x81, 0x18, 0xDF,
  0xD8, 0x1D, 0x81, 0x77, 0x74, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xDC, 0xA7, 0x37, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_monetization_on() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_monetization_on_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_money_off_csred 48x48, 4-bit Alpha,  RLE, 288 bytes.
static const uint8_t ic_sharp_48_editor_money_off_csred_data[] PROGMEM = {
  0x20, 0x28, 0x0C, 0x20, 0x81, 0x4F, 0x77, 0x71, 0xC7, 0x73, 0x04, 0xB0, 0x77, 0x7C, 0x77, 0x30,
  0xEC, 0x07, 0x76, 0xC7, 0x73, 0x03, 0x0E, 0xC0, 0x77, 0x5C, 0x77, 0x40, 0x30, 0xEC, 0x07, 0x72,
  0x05, 0x09, 0xC8, 0x1A, 0x61, 0x77, 0x20, 0x30, 0xEC, 0x07, 0x60, 0x30, 0xDF, 0x90, 0xE0, 0x67,
  0x72, 0x03, 0x0E, 0xC0, 0x75, 0x0B, 0xFC, 0x08, 0x77, 0x20, 0x30, 0xEC, 0x07, 0x50, 0xCC, 0x0E,
  0xE0, 0x67, 0x72, 0x03, 0x0E, 0xC0, 0x75, 0x81, 0xC9, 0x32, 0x01, 0x07, 0xC0, 0xE0, 0x17, 0x72,
  0x03, 0x0E, 0xC0, 0x77, 0x40, 0x4B, 0x0E, 0x04, 0x77, 0x30, 0x30, 0xEC, 0x07, 0x74, 0x81, 0x9C,
  0x67, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E,
  0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76,
  0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77,
  0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E,
  0xC0, 0x77, 0x77, 0x76, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x68, 0x12, 0x8B, 0x40, 0x30, 0xEC, 0x07,
  0x77, 0x73, 0x02, 0x0B, 0xB0, 0x34, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x30, 0xEB, 0x0B, 0x50, 0x30,
  0xEC, 0x07, 0x77, 0x72, 0x09, 0xC0, 0x95, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x10, 0x10, 0xEC, 0x85,
  0xC5, 0x10, 0x26, 0xDD, 0x07, 0x77, 0x71, 0x04, 0xFF, 0xB0, 0x77, 0x77, 0x10, 0x5F, 0xFB, 0x07,
  0x77, 0x71, 0x02, 0x0B, 0xFA, 0x81, 0x94, 0xEC, 0x07, 0x77, 0x72, 0x03, 0x08, 0xC8, 0x1B, 0x72,
  0x20, 0x30, 0xEC, 0x07, 0x77, 0x73, 0xC6, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x2C, 0x70, 0x30, 0xEC,
  0x07, 0x77, 0x71, 0xC7, 0x10, 0x30, 0xEC, 0x07, 0x77, 0x7C, 0x72, 0x03, 0x0E, 0xC0, 0x77, 0x77,
  0x76, 0x03, 0x0E, 0xC0, 0x27, 0x77, 0x76, 0x03, 0x0E, 0xA0, 0x48, 0x0C, 0x00, 0x81, 0x3E, 0x42,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_money_off_csred() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 5, 42, 44), Box(0, 0, 47, 47),
      ic_sharp_48_editor_money_off_csred_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_money_off 48x48, 4-bit Alpha,  RLE, 253 bytes.
static const uint8_t ic_sharp_48_editor_money_off_data[] PROGMEM = {
  0x77, 0xE7, 0x77, 0x5E, 0x77, 0x09, 0x02, 0x73, 0xE7, 0x68, 0x2A, 0xFD, 0x27, 0x2E, 0x75, 0x09,
  0xB0, 0xD0, 0x26, 0x03, 0x08, 0xE0, 0x70, 0x17, 0x30, 0x20, 0xDB, 0x0D, 0x02, 0x40, 0x9F, 0xB0,
  0x97, 0x30, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10, 0xCF, 0xB0, 0xD0, 0x17, 0x20, 0x20, 0xDB, 0x0D,
  0x02, 0x38, 0x51, 0xCF, 0xED, 0xDE, 0xD0, 0xC7, 0x30, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10, 0x24,
  0x03, 0x0B, 0xC0, 0x77, 0x30, 0x20, 0xDB, 0x0D, 0x02, 0x73, 0x0B, 0xB0, 0xE7, 0x40, 0x20, 0xDB,
  0x0D, 0x02, 0x72, 0x04, 0xC0, 0x37, 0x40, 0x2C, 0x0D, 0x02, 0x72, 0xC0, 0x57, 0x50, 0xEC, 0x0D,
  0x02, 0x77, 0x74, 0x0A, 0xD0, 0xD0, 0x27, 0x77, 0x30, 0x4E, 0x0D, 0x02, 0x77, 0x73, 0x0A, 0xE0,
  0xD0, 0x27, 0x77, 0x30, 0xBE, 0x0D, 0x02, 0x77, 0x73, 0x07, 0x0E, 0xD0, 0xD0, 0x27, 0x77, 0x38,
  0x11, 0x8D, 0xC0, 0xD0, 0x27, 0x77, 0x50, 0x40, 0xDB, 0x0D, 0x02, 0x77, 0x75, 0x02, 0x0D, 0xB0,
  0xD0, 0x27, 0x77, 0x50, 0x20, 0xDB, 0x0D, 0x02, 0x77, 0x75, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x77,
  0x50, 0x20, 0xDB, 0x0D, 0x02, 0x76, 0x04, 0xC0, 0x27, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x50, 0x1C,
  0x06, 0x71, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x50, 0xCB, 0x0E, 0x02, 0x71, 0x06, 0xC0, 0xD0, 0x27,
  0x40, 0x4C, 0x81, 0xE7, 0x14, 0x02, 0x08, 0xE0, 0xD0, 0x27, 0x40, 0x9E, 0x82, 0xED, 0xDE, 0xFA,
  0x0D, 0x02, 0x74, 0x09, 0xFF, 0x0B, 0x0D, 0xB0, 0xD0, 0x27, 0x40, 0x40, 0xCF, 0xB8, 0x3E, 0x60,
  0x2D, 0xB0, 0xD0, 0x27, 0x50, 0x30, 0x8E, 0x08, 0x04, 0x40, 0x20, 0xDB, 0x09, 0x77, 0xE7, 0x82,
  0x2D, 0xFB, 0x77, 0x1E, 0x71, 0x02, 0x09, 0x77, 0x2E, 0x77, 0x75, 0xE7, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_money_off() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_money_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_move_down 48x48, 4-bit Alpha,  RLE, 219 bytes.
static const uint8_t ic_sharp_48_editor_move_down_data[] PROGMEM = {
  0x72, 0x83, 0x37, 0xBD, 0xEE, 0x4F, 0xFC, 0x70, 0x50, 0xDF, 0xC4, 0xFF, 0xC5, 0x02, 0x0C, 0xFE,
  0x4F, 0xFC, 0x40, 0x30, 0xEF, 0xF4, 0xFF, 0xC3, 0x03, 0xE8, 0x1A, 0x52, 0x74, 0xC7, 0x3C, 0x20,
  0x20, 0xEC, 0x0A, 0x02, 0x77, 0xC7, 0x3C, 0x20, 0xCC, 0x07, 0x77, 0x2C, 0x73, 0xC1, 0x05, 0xC0,
  0x77, 0x73, 0xC7, 0x3C, 0x10, 0xDB, 0x0A, 0x77, 0x4C, 0x73, 0xC0, 0x3C, 0x02, 0x77, 0x4C, 0x73,
  0xC0, 0x7B, 0x0A, 0x77, 0x5F, 0xFC, 0x0B, 0xB0, 0x57, 0x75, 0xFF, 0xC0, 0xDB, 0x02, 0x77, 0x5F,
  0xFC, 0x0E, 0xB7, 0x76, 0xFF, 0xC0, 0xEB, 0x80, 0xC2, 0x00, 0xDB, 0x02, 0x80, 0xC1, 0x00, 0xBB,
  0x05, 0x80, 0xC1, 0x00, 0x7B, 0x0A, 0x80, 0xC1, 0x00, 0x3C, 0x01, 0x50, 0x07, 0x74, 0xFF, 0xC1,
  0x0C, 0xB0, 0xA4, 0x07, 0xA0, 0x77, 0x3F, 0xFC, 0x10, 0x5C, 0x06, 0x20, 0x7C, 0x07, 0x72, 0xFF,
  0xC2, 0x0C, 0xC8, 0x27, 0x03, 0xEC, 0x07, 0x71, 0xFF, 0xC2, 0x01, 0x0E, 0xC8, 0x2A, 0x23, 0xEC,
  0x07, 0x7F, 0xFC, 0x30, 0x40, 0xED, 0x0A, 0x09, 0xD0, 0x76, 0xFF, 0xC4, 0x03, 0x0E, 0xFD, 0x07,
  0x5F, 0xFC, 0x50, 0x20, 0xBF, 0xD0, 0x74, 0xFF, 0xC7, 0x05, 0x0C, 0xFB, 0x08, 0x4F, 0xFC, 0x72,
  0x82, 0x37, 0xBE, 0xD0, 0x75, 0xFF, 0xC7, 0x40, 0x30, 0xEC, 0x07, 0x6F, 0xFC, 0x73, 0x03, 0x0E,
  0xC0, 0x77, 0xFF, 0xC7, 0x20, 0x30, 0xEC, 0x07, 0x71, 0xFF, 0xC7, 0x20, 0x7C, 0x07, 0x72, 0xFF,
  0xC7, 0x30, 0x7A, 0x07, 0x80, 0xC3, 0x00, 0x07, 0x77, 0x77, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_move_down() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 8, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_move_down_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_move_up 48x48, 4-bit Alpha,  RLE, 218 bytes.
static const uint8_t ic_sharp_48_editor_move_up_data[] PROGMEM = {
  0x74, 0x00, 0x78, 0x0C, 0x30, 0x07, 0xA0, 0x78, 0x0C, 0x10, 0x07, 0xC0, 0x77, 0x2F, 0xFC, 0x72,
  0x03, 0x0E, 0xC0, 0x77, 0x1F, 0xFC, 0x73, 0x03, 0x0E, 0xC0, 0x77, 0xFF, 0xC7, 0x40, 0x30, 0xEC,
  0x07, 0x6F, 0xFC, 0x72, 0x82, 0x37, 0xBE, 0xD0, 0x75, 0xFF, 0xC7, 0x05, 0x0C, 0xFB, 0x08, 0x4F,
  0xFC, 0x50, 0x20, 0xBF, 0xD0, 0x74, 0xFF, 0xC4, 0x03, 0x0E, 0xFD, 0x07, 0x5F, 0xFC, 0x30, 0x40,
  0xED, 0x0A, 0x09, 0xD0, 0x76, 0xFF, 0xC2, 0x01, 0x0E, 0xC8, 0x2A, 0x23, 0xEC, 0x07, 0x7F, 0xFC,
  0x20, 0xCC, 0x82, 0x70, 0x3E, 0xC0, 0x77, 0x1F, 0xFC, 0x10, 0x5C, 0x06, 0x20, 0x7C, 0x07, 0x72,
  0xFF, 0xC1, 0x0C, 0xB0, 0xA4, 0x07, 0xA0, 0x77, 0x3F, 0xFC, 0x03, 0xC0, 0x15, 0x00, 0x77, 0x4F,
  0xFC, 0x07, 0xB0, 0xA8, 0x0C, 0x10, 0x0B, 0xB0, 0x58, 0x0C, 0x10, 0x0D, 0xB0, 0x28, 0x0C, 0x10,
  0x0E, 0xB8, 0x0C, 0x20, 0x0E, 0xB7, 0x76, 0xFF, 0xC0, 0xDB, 0x02, 0x77, 0x5F, 0xFC, 0x0B, 0xB0,
  0x57, 0x75, 0xFF, 0xC0, 0x7B, 0x0A, 0x77, 0x5F, 0xFC, 0x03, 0xC0, 0x27, 0x74, 0xC7, 0x3C, 0x10,
  0xDB, 0x0A, 0x77, 0x4C, 0x73, 0xC1, 0x05, 0xC0, 0x77, 0x73, 0xC7, 0x3C, 0x20, 0xCC, 0x07, 0x77,
  0x2C, 0x73, 0xC2, 0x02, 0x0E, 0xC0, 0xA0, 0x27, 0x7C, 0x73, 0xC3, 0x03, 0xE8, 0x1A, 0x52, 0x74,
  0xC7, 0x3C, 0x40, 0x30, 0xEF, 0xF4, 0xFF, 0xC5, 0x02, 0x0C, 0xFE, 0x4F, 0xFC, 0x70, 0x50, 0xDF,
  0xC4, 0xFF, 0xC7, 0x28, 0x33, 0x7B, 0xDE, 0xE4, 0xFF, 0xC0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_move_up() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 6, 43, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_move_up_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_multiline_chart 48x48, 4-bit Alpha,  RLE, 249 bytes.
static const uint8_t ic_sharp_48_editor_multiline_chart_data[] PROGMEM = {
  0x72, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xED, 0xB8, 0x57, 0x77, 0x48, 0x12, 0x8D, 0xFE, 0x0B, 0x04,
  0x75, 0x04, 0x09, 0x60, 0x20, 0xAF, 0xFC, 0x0D, 0x05, 0x72, 0x82, 0x2E, 0xFA, 0x40, 0x9F, 0xFF,
  0x90, 0xB0, 0x26, 0x01, 0x0D, 0xB8, 0x29, 0x03, 0xDF, 0x89, 0x1B, 0x63, 0x21, 0x01, 0x25, 0x8D,
  0xE0, 0xE0, 0x54, 0x01, 0x0D, 0xC0, 0x06, 0xE0, 0xC0, 0x57, 0x50, 0x30, 0x9E, 0x07, 0x30, 0xBC,
  0x81, 0x80, 0x7C, 0x0D, 0x05, 0x77, 0x20, 0x20, 0xBD, 0x81, 0x80, 0xAC, 0x09, 0x30, 0x7A, 0x09,
  0x77, 0x60, 0x6D, 0x0C, 0xC0, 0xB5, 0x07, 0x05, 0x77, 0x71, 0x04, 0x0E, 0xF0, 0xC7, 0x74, 0x00,
  0x87, 0x40, 0x30, 0xED, 0x0D, 0x01, 0x77, 0x30, 0x8A, 0x08, 0x74, 0x07, 0xD0, 0x27, 0x73, 0x08,
  0xC0, 0x87, 0x20, 0x30, 0xED, 0x05, 0x77, 0x20, 0x8E, 0x08, 0x70, 0x20, 0xEE, 0x0D, 0x77, 0x10,
  0x8F, 0x90, 0x85, 0x01, 0x0D, 0xF9, 0x06, 0x76, 0x08, 0xFB, 0x08, 0x40, 0xCC, 0x08, 0x09, 0xB0,
  0xD7, 0x50, 0x8D, 0x00, 0x7D, 0x08, 0x20, 0xAC, 0x81, 0x90, 0x1C, 0x03, 0x73, 0x08, 0xD0, 0x72,
  0x07, 0xD0, 0x80, 0x9C, 0x0B, 0x30, 0xAB, 0x09, 0x72, 0x08, 0xD0, 0x74, 0x07, 0xFA, 0x0C, 0x40,
  0x4B, 0x0E, 0x71, 0x08, 0xD0, 0x76, 0x07, 0xF0, 0xD0, 0x15, 0x0E, 0xB0, 0x26, 0x08, 0xD0, 0x77,
  0x10, 0x7D, 0x0E, 0x02, 0x60, 0xAB, 0x06, 0x50, 0x8D, 0x07, 0x73, 0x07, 0xB0, 0xE0, 0x37, 0x06,
  0xB0, 0x94, 0x08, 0xD0, 0x77, 0x50, 0x7A, 0x04, 0x71, 0x04, 0xB0, 0xB3, 0x08, 0xD0, 0x77, 0x70,
  0x70, 0x67, 0x20, 0x1B, 0x0E, 0x20, 0x8D, 0x07, 0x77, 0x77, 0x50, 0x7C, 0x07, 0x77, 0x77, 0x70,
  0x7A, 0x07, 0x80, 0xC1, 0x00, 0x07, 0x80, 0xC0, 0x00,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_multiline_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 10, 43, 36), Box(0, 0, 47, 47),
      ic_sharp_48_editor_multiline_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_notes 48x48, 4-bit Alpha,  RLE, 24 bytes.
static const uint8_t ic_sharp_48_editor_notes_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x80, 0xBA, 0x40, 0x80, 0xA9, 0x4F, 0x80, 0xBA, 0x40, 0xFF, 0xFB, 0x75, 0xFF,
  0xFB, 0x75, 0xFF, 0xFB, 0x75, 0xFF, 0xFB, 0x75,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_notes() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 12, 41, 35), Box(0, 0, 47, 47),
      ic_sharp_48_editor_notes_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_numbers 48x48, 4-bit Alpha,  RLE, 209 bytes.
static const uint8_t ic_sharp_48_editor_numbers_data[] PROGMEM = {
  0x76, 0x01, 0xB0, 0xD7, 0x01, 0xB0, 0xD7, 0x75, 0x05, 0xB0, 0x97, 0x05, 0xB0, 0x97, 0x75, 0x09,
  0xB0, 0x57, 0x09, 0xB0, 0x57, 0x75, 0x0D, 0xB0, 0x17, 0x0D, 0xB0, 0x17, 0x74, 0x01, 0xB0, 0xD7,
  0x01, 0xB0, 0xD7, 0x75, 0x05, 0xB0, 0x97, 0x05, 0xB0, 0x97, 0x75, 0x09, 0xB0, 0x57, 0x09, 0xB0,
  0x57, 0x75, 0x0D, 0xB0, 0x17, 0x0D, 0xB0, 0x17, 0x30, 0x1F, 0xFF, 0xFB, 0x0D, 0x30, 0x5F, 0xFF,
  0xFB, 0x09, 0x30, 0x9F, 0xFF, 0xFB, 0x05, 0x30, 0xDF, 0xFF, 0xFB, 0x01, 0x73, 0x01, 0xB0, 0xD7,
  0x01, 0xB0, 0xD7, 0x75, 0x05, 0xB0, 0x97, 0x05, 0xB0, 0x97, 0x75, 0x09, 0xB0, 0x57, 0x09, 0xB0,
  0x57, 0x75, 0x0D, 0xB0, 0x17, 0x0D, 0xB0, 0x17, 0x74, 0x01, 0xB0, 0xD7, 0x01, 0xB0, 0xD7, 0x75,
  0x05, 0xB0, 0x97, 0x05, 0xB0, 0x97, 0x75, 0x09, 0xB0, 0x57, 0x09, 0xB0, 0x57, 0x75, 0x0D, 0xB0,
  0x17, 0x0D, 0xB0, 0x17, 0x30, 0x1F, 0xFF, 0xFB, 0x0D, 0x30, 0x5F, 0xFF, 0xFB, 0x09, 0x30, 0x9F,
  0xFF, 0xFB, 0x05, 0x30, 0xDF, 0xFF, 0xFB, 0x01, 0x73, 0x01, 0xB0, 0xD7, 0x01, 0xB0, 0xD7, 0x75,
  0x05, 0xB0, 0x97, 0x05, 0xB0, 0x97, 0x75, 0x09, 0xB0, 0x57, 0x09, 0xB0, 0x57, 0x75, 0x0D, 0xB0,
  0x17, 0x0D, 0xB0, 0x17, 0x74, 0x01, 0xB0, 0xD7, 0x01, 0xB0, 0xD7, 0x75, 0x05, 0xB0, 0x97, 0x05,
  0xB0, 0x97, 0x75, 0x09, 0xB0, 0x57, 0x09, 0xB0, 0x57, 0x75, 0x0D, 0xB0, 0x17, 0x0D, 0xB0, 0x17,
  0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_numbers() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 8, 41, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_numbers_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_padding 48x48, 4-bit Alpha,  RLE, 95 bytes.
static const uint8_t ic_sharp_48_editor_padding_data[] PROGMEM = {
  0x80, 0xAA, 0x0F, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x4C,
  0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4, 0xF9, 0x4C, 0x4C, 0x4C, 0x4F, 0x94, 0xC4, 0xC4, 0xC4,
  0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9,
  0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77,
  0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77,
  0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0xF9, 0x77, 0x77, 0x80, 0xAA, 0x0F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_padding() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_padding_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_pentagon 48x48, 4-bit Alpha,  RLE, 207 bytes.
static const uint8_t ic_sharp_48_editor_pentagon_data[] PROGMEM = {
  0x77, 0x48, 0x21, 0xAA, 0x17, 0x77, 0x77, 0x03, 0x0D, 0xA0, 0xD0, 0x37, 0x77, 0x75, 0x08, 0xE0,
  0x87, 0x77, 0x72, 0x02, 0x0C, 0xF9, 0x0C, 0x02, 0x77, 0x76, 0x06, 0xFD, 0x06, 0x77, 0x73, 0x01,
  0x0B, 0xFF, 0x0B, 0x01, 0x77, 0x70, 0x50, 0xEF, 0xFA, 0x0E, 0x05, 0x77, 0x40, 0x10, 0xAF, 0xFE,
  0x0A, 0x01, 0x77, 0x10, 0x30, 0xDF, 0xFF, 0x90, 0xD0, 0x37, 0x60, 0x8F, 0xFF, 0xD0, 0x87, 0x30,
  0x20, 0xCF, 0xFF, 0xF0, 0xC0, 0x27, 0x06, 0xFF, 0xFF, 0xC0, 0x64, 0x01, 0x0B, 0xFF, 0xFF, 0xE8,
  0x3B, 0x10, 0x5E, 0x80, 0xC0, 0xF8, 0x1E, 0x5C, 0x80, 0xC2, 0xF0, 0xC0, 0x78, 0x0C, 0x2F, 0x07,
  0x02, 0x80, 0xC2, 0xF8, 0x12, 0x0C, 0x80, 0xC0, 0xF0, 0xC2, 0x07, 0x80, 0xC0, 0xF0, 0x72, 0x02,
  0x80, 0xC0, 0xF0, 0x23, 0x0C, 0xFF, 0xFF, 0xE0, 0xC4, 0x07, 0xFF, 0xFF, 0xE0, 0x74, 0x02, 0xFF,
  0xFF, 0xE0, 0x25, 0x0C, 0xFF, 0xFF, 0xC0, 0xC6, 0x07, 0xFF, 0xFF, 0xC0, 0x76, 0x02, 0xFF, 0xFF,
  0xC0, 0x27, 0x0C, 0xFF, 0xFF, 0xA0, 0xC7, 0x10, 0x7F, 0xFF, 0xFA, 0x07, 0x71, 0x02, 0xFF, 0xFF,
  0xA0, 0x27, 0x20, 0xCF, 0xFF, 0xF0, 0xC7, 0x30, 0x7F, 0xFF, 0xF0, 0x77, 0x30, 0x2F, 0xFF, 0xF0,
  0x27, 0x40, 0xCF, 0xFF, 0xD0, 0xC7, 0x50, 0x7F, 0xFF, 0xD0, 0x77, 0x50, 0x2F, 0xFF, 0xD0, 0x27,
  0x60, 0xCF, 0xFF, 0xB0, 0xC7, 0x70, 0x7F, 0xFF, 0xB0, 0x77, 0x70, 0x2F, 0xFF, 0xB0, 0x27,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_pentagon() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_pentagon_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_pie_chart_outlined 48x48, 4-bit Alpha,  RLE, 324 bytes.
static const uint8_t ic_sharp_48_editor_pie_chart_outlined_data[] PROGMEM = {
  0x77, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xDC, 0xA7, 0x37, 0x77, 0x48, 0x11, 0x8D, 0xFD, 0x81, 0xD8,
  0x17, 0x76, 0x01, 0x08, 0xFF, 0xC0, 0x80, 0x17, 0x73, 0x04, 0x0E, 0xFF, 0xE0, 0xE0, 0x47, 0x71,
  0x08, 0xF8, 0x1A, 0x73, 0xC8, 0x13, 0x7A, 0xF0, 0x87, 0x60, 0xAD, 0x81, 0xD7, 0x13, 0xC3, 0x81,
  0x16, 0xDD, 0x0A, 0x74, 0x0A, 0xD0, 0x86, 0xC6, 0x08, 0xD0, 0xA7, 0x20, 0x8C, 0x0D, 0x03, 0x7C,
  0x70, 0x30, 0xEC, 0x08, 0x70, 0x4C, 0x0D, 0x02, 0x71, 0xC7, 0x10, 0x10, 0xDC, 0x04, 0x50, 0x10,
  0xEB, 0x0D, 0x01, 0x72, 0xC7, 0x20, 0x10, 0xEB, 0x0E, 0x01, 0x40, 0x8C, 0x03, 0x73, 0xC7, 0x30,
  0x3C, 0x08, 0x30, 0x1C, 0x07, 0x74, 0xC7, 0x40, 0x8C, 0x01, 0x20, 0x7B, 0x0E, 0x75, 0xC7, 0x50,
  0xDB, 0x07, 0x20, 0xDB, 0x06, 0x75, 0xC7, 0x50, 0x6B, 0x81, 0xD0, 0x3B, 0x0E, 0x76, 0xC7, 0x50,
  0x1C, 0x03, 0x07, 0xB0, 0xB7, 0x6C, 0x76, 0x0A, 0xB0, 0x70, 0xAB, 0x06, 0x76, 0xC7, 0x60, 0x7B,
  0x0A, 0x0C, 0xB0, 0x37, 0x6C, 0x76, 0x03, 0xB0, 0xC0, 0xEB, 0x02, 0x76, 0xFF, 0xF0, 0xEC, 0x77,
  0xFF, 0xFD, 0x77, 0xFF, 0xF9, 0x0E, 0xB0, 0x27, 0x6F, 0xFF, 0x0E, 0x0C, 0xB0, 0x37, 0x6C, 0x76,
  0x03, 0xB0, 0xC0, 0xAB, 0x06, 0x76, 0xC7, 0x60, 0x7B, 0x0A, 0x07, 0xB0, 0xB7, 0x6C, 0x76, 0x0A,
  0xB0, 0x70, 0x3B, 0x0E, 0x76, 0xC7, 0x50, 0x1C, 0x81, 0x30, 0xDB, 0x06, 0x75, 0xC7, 0x50, 0x6B,
  0x0D, 0x20, 0x7B, 0x0E, 0x75, 0xC7, 0x50, 0xDB, 0x07, 0x20, 0x1C, 0x07, 0x74, 0xC7, 0x40, 0x8C,
  0x01, 0x30, 0x8C, 0x03, 0x73, 0xC7, 0x30, 0x3C, 0x08, 0x40, 0x10, 0xEB, 0x0D, 0x01, 0x72, 0xC7,
  0x20, 0x10, 0xDB, 0x0E, 0x01, 0x50, 0x4C, 0x0D, 0x02, 0x71, 0xC7, 0x10, 0x10, 0xCC, 0x04, 0x70,
  0x8C, 0x0D, 0x03, 0x7C, 0x70, 0x30, 0xDC, 0x08, 0x72, 0x0A, 0xD0, 0x86, 0xC6, 0x08, 0xD0, 0xA7,
  0x40, 0xAD, 0x81, 0xD7, 0x13, 0xC3, 0x81, 0x16, 0xDD, 0x0A, 0x76, 0x08, 0xE8, 0x2E, 0xA6, 0x3C,
  0x81, 0x37, 0xAF, 0x08, 0x77, 0x10, 0x40, 0xEF, 0xFE, 0x0E, 0x04, 0x77, 0x30, 0x10, 0x8F, 0xFC,
  0x08, 0x01, 0x77, 0x68, 0x11, 0x8D, 0xFD, 0x81, 0xD8, 0x17, 0x77, 0x48, 0x33, 0x7A, 0xCD, 0xA8,
  0x3D, 0xCA, 0x73, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_pie_chart_outlined() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_pie_chart_outlined_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_pie_chart_outline 48x48, 4-bit Alpha,  RLE, 324 bytes.
static const uint8_t ic_sharp_48_editor_pie_chart_outline_data[] PROGMEM = {
  0x77, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xDC, 0xA7, 0x37, 0x77, 0x48, 0x11, 0x8D, 0xFD, 0x81, 0xD8,
  0x17, 0x76, 0x01, 0x08, 0xFF, 0xC0, 0x80, 0x17, 0x73, 0x04, 0x0E, 0xFF, 0xE0, 0xE0, 0x47, 0x71,
  0x08, 0xF8, 0x1A, 0x73, 0xC8, 0x13, 0x7A, 0xF0, 0x87, 0x60, 0xAD, 0x81, 0xD7, 0x13, 0xC3, 0x81,
  0x16, 0xDD, 0x0A, 0x74, 0x0A, 0xD0, 0x86, 0xC6, 0x08, 0xD0, 0xA7, 0x20, 0x8C, 0x0D, 0x03, 0x7C,
  0x70, 0x30, 0xEC, 0x08, 0x70, 0x4C, 0x0D, 0x02, 0x71, 0xC7, 0x10, 0x10, 0xDC, 0x04, 0x50, 0x10,
  0xEB, 0x0D, 0x01, 0x72, 0xC7, 0x20, 0x10, 0xEB, 0x0E, 0x01, 0x40, 0x8C, 0x03, 0x73, 0xC7, 0x30,
  0x3C, 0x08, 0x30, 0x1C, 0x07, 0x74, 0xC7, 0x40, 0x8C, 0x01, 0x20, 0x7B, 0x0E, 0x75, 0xC7, 0x50,
  0xDB, 0x07, 0x20, 0xDB, 0x06, 0x75, 0xC7, 0x50, 0x6B, 0x81, 0xD0, 0x3B, 0x0E, 0x76, 0xC7, 0x50,
  0x1C, 0x03, 0x07, 0xB0, 0xB7, 0x6C, 0x76, 0x0A, 0xB0, 0x70, 0xAB, 0x06, 0x76, 0xC7, 0x60, 0x7B,
  0x0A, 0x0C, 0xB0, 0x37, 0x6C, 0x76, 0x03, 0xB0, 0xC0, 0xEB, 0x02, 0x76, 0xFF, 0xF0, 0xEC, 0x77,
  0xFF, 0xFD, 0x77, 0xFF, 0xF9, 0x0E, 0xB0, 0x27, 0x6F, 0xFF, 0x0E, 0x0C, 0xB0, 0x37, 0x6C, 0x76,
  0x03, 0xB0, 0xC0, 0xAB, 0x06, 0x76, 0xC7, 0x60, 0x7B, 0x0A, 0x07, 0xB0, 0xB7, 0x6C, 0x76, 0x0A,
  0xB0, 0x70, 0x3B, 0x0E, 0x76, 0xC7, 0x50, 0x1C, 0x81, 0x30, 0xDB, 0x06, 0x75, 0xC7, 0x50, 0x6B,
  0x0D, 0x20, 0x7B, 0x0E, 0x75, 0xC7, 0x50, 0xDB, 0x07, 0x20, 0x1C, 0x07, 0x74, 0xC7, 0x40, 0x8C,
  0x01, 0x30, 0x8C, 0x03, 0x73, 0xC7, 0x30, 0x3C, 0x08, 0x40, 0x10, 0xEB, 0x0D, 0x01, 0x72, 0xC7,
  0x20, 0x10, 0xDB, 0x0E, 0x01, 0x50, 0x4C, 0x0D, 0x02, 0x71, 0xC7, 0x10, 0x10, 0xCC, 0x04, 0x70,
  0x8C, 0x0D, 0x03, 0x7C, 0x70, 0x30, 0xDC, 0x08, 0x72, 0x0A, 0xD0, 0x86, 0xC6, 0x08, 0xD0, 0xA7,
  0x40, 0xAD, 0x81, 0xD7, 0x13, 0xC3, 0x81, 0x16, 0xDD, 0x0A, 0x76, 0x08, 0xE8, 0x2E, 0xA6, 0x3C,
  0x81, 0x37, 0xAF, 0x08, 0x77, 0x10, 0x40, 0xEF, 0xFE, 0x0E, 0x04, 0x77, 0x30, 0x10, 0x8F, 0xFC,
  0x08, 0x01, 0x77, 0x68, 0x11, 0x8D, 0xFD, 0x81, 0xD8, 0x17, 0x77, 0x48, 0x33, 0x7A, 0xCD, 0xA8,
  0x3D, 0xCA, 0x73, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_pie_chart_outline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_pie_chart_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_pie_chart 48x48, 4-bit Alpha,  RLE, 278 bytes.
static const uint8_t ic_sharp_48_editor_pie_chart_data[] PROGMEM = {
  0x77, 0x82, 0x47, 0xAE, 0x48, 0x2D, 0xB8, 0x47, 0x77, 0x48, 0x12, 0x8E, 0xC4, 0x0E, 0xB8, 0x1E,
  0x93, 0x77, 0x60, 0x10, 0xAF, 0x40, 0xEE, 0x0A, 0x01, 0x77, 0x30, 0x60, 0xEF, 0x94, 0x0E, 0xF0,
  0xE0, 0x77, 0x71, 0x0A, 0xFB, 0x40, 0xEF, 0xA0, 0xA7, 0x60, 0xBF, 0xC4, 0x0E, 0xFB, 0x0C, 0x01,
  0x73, 0x0B, 0xFD, 0x40, 0xEF, 0xC0, 0xC7, 0x20, 0x9F, 0xE4, 0x0E, 0xFD, 0x0A, 0x70, 0x5F, 0xF4,
  0x0E, 0xFE, 0x07, 0x50, 0x10, 0xEF, 0xF4, 0x0E, 0xFE, 0x0E, 0x01, 0x40, 0x8F, 0xF9, 0x40, 0xEF,
  0xF0, 0xA3, 0x01, 0x0E, 0xFF, 0x94, 0x0E, 0xFF, 0x90, 0x32, 0x08, 0xFF, 0xA4, 0x0E, 0xFF, 0x90,
  0x92, 0x0D, 0xFF, 0xA4, 0x0E, 0xFF, 0x98, 0x1E, 0x02, 0xFF, 0xB4, 0x0E, 0xFF, 0xA0, 0x40, 0x6F,
  0xFB, 0x40, 0xEF, 0xFA, 0x08, 0x0A, 0xFF, 0xB4, 0x0E, 0xFF, 0xA0, 0x0B, 0xFF, 0xB4, 0x0E, 0xFF,
  0xA0, 0xE0, 0xDF, 0xFB, 0x77, 0x71, 0x0E, 0xFF, 0xB7, 0x77, 0x10, 0xEF, 0xFB, 0x77, 0x71, 0x0D,
  0xFF, 0xB7, 0x77, 0x10, 0xBF, 0xFB, 0x40, 0xEF, 0xFA, 0x0E, 0x0A, 0xFF, 0xB4, 0x0E, 0xFF, 0xA0,
  0xB0, 0x6F, 0xFB, 0x40, 0xEF, 0xFA, 0x08, 0x02, 0xFF, 0xB4, 0x0E, 0xFF, 0xA8, 0x14, 0x0D, 0xFF,
  0xA4, 0x0E, 0xFF, 0x90, 0xE2, 0x08, 0xFF, 0xA4, 0x0E, 0xFF, 0x90, 0x92, 0x01, 0x0E, 0xFF, 0x94,
  0x0E, 0xFF, 0x90, 0x33, 0x08, 0xFF, 0x94, 0x0E, 0xFF, 0x0A, 0x40, 0x10, 0xEF, 0xF4, 0x0E, 0xFE,
  0x0E, 0x01, 0x50, 0x5F, 0xF4, 0x0E, 0xFE, 0x07, 0x70, 0x9F, 0xE4, 0x0E, 0xFD, 0x0A, 0x72, 0x0B,
  0xFD, 0x40, 0xEF, 0xC0, 0xC7, 0x40, 0xBF, 0xC4, 0x0E, 0xFB, 0x0C, 0x01, 0x75, 0x0A, 0xFB, 0x40,
  0xEF, 0xA0, 0xA7, 0x71, 0x06, 0x0E, 0xF9, 0x40, 0xEF, 0x0E, 0x07, 0x77, 0x30, 0x10, 0xAF, 0x40,
  0xEE, 0x0A, 0x01, 0x77, 0x68, 0x12, 0x8E, 0xC4, 0x0E, 0xB8, 0x1E, 0x93, 0x77, 0x74, 0x82, 0x47,
  0xAE, 0x48, 0x2D, 0xB8, 0x57, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_pie_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_pie_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_polyline 48x48, 4-bit Alpha,  RLE, 158 bytes.
static const uint8_t ic_sharp_48_editor_polyline_data[] PROGMEM = {
  0x77, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73,
  0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x72, 0x09,
  0xFD, 0x77, 0x71, 0x07, 0xFE, 0x77, 0x70, 0x5C, 0x0D, 0x01, 0x77, 0x77, 0x03, 0xC0, 0xE0, 0x27,
  0x77, 0x70, 0x20, 0xEC, 0x03, 0x77, 0x77, 0x01, 0x0D, 0xC0, 0x57, 0x77, 0xFE, 0x07, 0x77, 0x71,
  0xFD, 0x09, 0x77, 0x72, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73,
  0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x03, 0x77, 0x72, 0xFE, 0x0B, 0x03, 0x77, 0x7F, 0xF9,
  0x0B, 0x03, 0x77, 0x5F, 0xFB, 0x0B, 0x03, 0x77, 0x76, 0x03, 0x0B, 0xF0, 0xB0, 0x33, 0xFD, 0x75,
  0x03, 0x0B, 0xF0, 0xB0, 0x31, 0xFD, 0x77, 0x03, 0x0B, 0xF0, 0xBF, 0xD7, 0x72, 0x03, 0x0B, 0xFF,
  0xC7, 0x74, 0x03, 0x0B, 0xFF, 0xA7, 0x76, 0x03, 0x0B, 0xFF, 0x77, 0x71, 0x03, 0x0B, 0xFD, 0x77,
  0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD, 0x77, 0x73, 0xFD,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_polyline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 41, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_polyline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_post_add 48x48, 4-bit Alpha,  RLE, 151 bytes.
static const uint8_t ic_sharp_48_editor_post_add_data[] PROGMEM = {
  0x77, 0x77, 0xC7, 0x77, 0x76, 0xC7, 0x77, 0x76, 0xC7, 0x77, 0x76, 0xC7, 0x77, 0x76, 0xC7, 0x77,
  0x76, 0xC7, 0x81, 0x1A, 0xDF, 0xF4, 0xFF, 0xA0, 0x10, 0xEF, 0xFA, 0x4F, 0xFA, 0x0A, 0xFF, 0xB4,
  0xFF, 0xA0, 0xDF, 0xFB, 0x4F, 0xFE, 0x77, 0x73, 0xC6, 0xC7, 0x77, 0x3C, 0x6C, 0x77, 0x73, 0xC6,
  0xC7, 0x77, 0x3C, 0x6C, 0x4F, 0xFA, 0x4C, 0x6C, 0x4F, 0xFA, 0x4C, 0x6C, 0x4F, 0xFA, 0x77, 0xC4,
  0xFF, 0xA7, 0x7C, 0x77, 0x77, 0x6C, 0x77, 0x77, 0x6C, 0x4F, 0xFA, 0x4C, 0x6C, 0x4F, 0xFA, 0x4C,
  0x6C, 0x4F, 0xFA, 0x4C, 0x6C, 0x4F, 0xFA, 0x4C, 0x6C, 0x77, 0x73, 0xC6, 0xC7, 0x77, 0x3C, 0x6C,
  0x4F, 0xFA, 0x4C, 0x6C, 0x4F, 0xFA, 0x4C, 0x6C, 0x4F, 0xFA, 0x4C, 0x6C, 0x4F, 0xFA, 0x4C, 0x6C,
  0x77, 0x73, 0xC6, 0xC7, 0x77, 0x3C, 0x6C, 0x77, 0x73, 0xC6, 0xC7, 0x77, 0x3C, 0x60, 0xDB, 0x80,
  0xA4, 0x7B, 0x0D, 0x60, 0xAF, 0xFF, 0xFA, 0x0A, 0x60, 0x10, 0xEF, 0xFF, 0xF0, 0xE0, 0x17, 0x81,
  0x1A, 0xDF, 0xFF, 0xB8, 0x1D, 0xA1, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_post_add() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_post_add_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_publish 48x48, 4-bit Alpha,  RLE, 95 bytes.
static const uint8_t ic_sharp_48_editor_publish_data[] PROGMEM = {
  0x80, 0x9D, 0x4F, 0x80, 0x98, 0x10, 0x00, 0x77, 0x77, 0x40, 0x7A, 0x07, 0x77, 0x72, 0x07, 0xC0,
  0x77, 0x77, 0x07, 0xE0, 0x77, 0x75, 0x07, 0xF9, 0x07, 0x77, 0x30, 0x7F, 0xB0, 0x77, 0x71, 0x07,
  0xFD, 0x07, 0x76, 0x07, 0xFF, 0x07, 0x74, 0x07, 0xFF, 0xA0, 0x77, 0x20, 0x7F, 0xFC, 0x07, 0x70,
  0x7F, 0xFE, 0x07, 0x50, 0x7F, 0xFF, 0x90, 0x73, 0x07, 0xFF, 0xFB, 0x81, 0x70, 0x7F, 0xFF, 0xD0,
  0x77, 0x1F, 0xD7, 0x72, 0xFD, 0x77, 0x2F, 0xD7, 0x72, 0xFD, 0x77, 0x2F, 0xD7, 0x72, 0xFD, 0x77,
  0x2F, 0xD7, 0x72, 0xFD, 0x77, 0x2F, 0xD7, 0x72, 0xFD, 0x77, 0x2F, 0xD7, 0x72, 0xFD, 0x71,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_publish() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 8, 37, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_publish_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_query_stats 48x48, 4-bit Alpha,  RLE, 377 bytes.
static const uint8_t ic_sharp_48_editor_query_stats_data[] PROGMEM = {
  0x80, 0xC4, 0x00, 0x80, 0x78, 0x0C, 0x50, 0x03, 0xA0, 0xB0, 0x18, 0x0C, 0x30, 0x0C, 0xB0, 0xC8,
  0x0C, 0x20, 0x07, 0xC0, 0x48, 0x0C, 0x10, 0x02, 0x0E, 0xB0, 0x98, 0x0C, 0x20, 0x0B, 0xB0, 0xE0,
  0x18, 0x0C, 0x10, 0x05, 0xC0, 0x58, 0x0C, 0x10, 0x01, 0x0E, 0xB0, 0xB7, 0x77, 0x50, 0x40, 0x57,
  0x30, 0x9B, 0x0E, 0x02, 0x77, 0x75, 0x81, 0xDE, 0x17, 0x10, 0x3C, 0x07, 0x77, 0x75, 0x08, 0xA0,
  0xA7, 0x10, 0xDB, 0x0C, 0x77, 0x75, 0x02, 0xC0, 0x56, 0x08, 0xC0, 0x37, 0x77, 0x50, 0xBC, 0x0E,
  0x01, 0x40, 0x2C, 0x08, 0x77, 0x75, 0x05, 0xE0, 0xA4, 0x0C, 0xB0, 0xD7, 0x72, 0x04, 0x06, 0x71,
  0x01, 0x0E, 0xF0, 0x52, 0x06, 0xC0, 0x47, 0x72, 0x81, 0xDF, 0x47, 0x09, 0xB0, 0xE0, 0xCB, 0x82,
  0xE1, 0x1E, 0xB0, 0xA7, 0x72, 0x08, 0xA0, 0xE0, 0x25, 0x03, 0xC8, 0x93, 0x72, 0xEA, 0x64, 0x11,
  0x57, 0xCE, 0x17, 0x71, 0x03, 0xC0, 0xD0, 0x14, 0x0C, 0xB0, 0xC7, 0x77, 0x70, 0xCD, 0x0C, 0x30,
  0x7C, 0x03, 0x77, 0x76, 0x06, 0xF8, 0x2A, 0x01, 0xEB, 0x09, 0x48, 0x61, 0x6A, 0xBC, 0xB7, 0x27,
  0x71, 0x01, 0x0E, 0xB0, 0xEC, 0x08, 0x0A, 0xB0, 0xE0, 0x13, 0x07, 0x0E, 0xF0, 0xA0, 0x17, 0x60,
  0xAB, 0x81, 0xE1, 0xCF, 0x90, 0x62, 0x01, 0x0B, 0xFB, 0x0E, 0x03, 0x74, 0x04, 0xC8, 0x26, 0x01,
  0xDE, 0x0B, 0x30, 0xBF, 0xD0, 0xE0, 0x27, 0x30, 0xDB, 0x0B, 0x30, 0x20, 0xED, 0x02, 0x20, 0x7C,
  0x84, 0xD7, 0x33, 0x5B, 0xC0, 0xC7, 0x20, 0x8C, 0x02, 0x40, 0x4C, 0x08, 0x20, 0x10, 0xEB, 0x0B,
  0x60, 0x7C, 0x05, 0x70, 0x3C, 0x08, 0x60, 0x6A, 0x0D, 0x30, 0x6B, 0x0D, 0x71, 0x09, 0xB0, 0xB7,
  0x0C, 0xB0, 0xD7, 0x18, 0x18, 0xF4, 0x30, 0xAB, 0x07, 0x71, 0x02, 0xC6, 0x06, 0xC0, 0x47, 0x20,
  0x64, 0x0B, 0xB0, 0x37, 0x20, 0xEB, 0x01, 0x40, 0x10, 0xEB, 0x0A, 0x77, 0x10, 0xCB, 0x03, 0x72,
  0x0D, 0xB0, 0x24, 0x0A, 0xB0, 0xE0, 0x17, 0x71, 0x0A, 0xB0, 0x57, 0x10, 0x1C, 0x50, 0x50, 0xEA,
  0x06, 0x77, 0x20, 0x7B, 0x0B, 0x71, 0x06, 0xB0, 0xC6, 0x81, 0x2C, 0xC7, 0x73, 0x02, 0xC0, 0x76,
  0x03, 0x0E, 0xB0, 0x77, 0x10, 0x17, 0x74, 0x0A, 0xC0, 0x90, 0x23, 0x07, 0x0E, 0xB0, 0xE0, 0x17,
  0x77, 0x60, 0x10, 0xED, 0x00, 0xDF, 0x05, 0x77, 0x77, 0x03, 0x0E, 0xFF, 0x05, 0x77, 0x77, 0x02,
  0x0C, 0xF9, 0x0E, 0xD0, 0x57, 0x77, 0x71, 0x05, 0x0B, 0xC8, 0x2C, 0x71, 0x5D, 0x05, 0x77, 0x77,
  0x30, 0x01, 0x50, 0x5D, 0x05, 0x80, 0xC2, 0x00, 0x5D, 0x05, 0x80, 0xC2, 0x00, 0x5C, 0x09, 0x80,
  0xC3, 0x00, 0x5A, 0x0A, 0x80, 0xC5, 0x00, 0x50, 0x92,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_query_stats() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 4, 45, 45), Box(0, 0, 47, 47),
      ic_sharp_48_editor_query_stats_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_rectangle 48x48, 4-bit Alpha,  RLE, 4 bytes.
static const uint8_t ic_sharp_48_editor_rectangle_data[] PROGMEM = {
  0x80, 0xAB, 0xF4, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_rectangle() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 8, 43, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_rectangle_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_scatter_plot 48x48, 4-bit Alpha,  RLE, 177 bytes.
static const uint8_t ic_sharp_48_editor_scatter_plot_data[] PROGMEM = {
  0x74, 0x84, 0x6C, 0xEE, 0xC6, 0x77, 0x73, 0x01, 0x0C, 0xE0, 0xC0, 0x17, 0x77, 0x10, 0xCF, 0x90,
  0xC7, 0x77, 0x06, 0xFB, 0x06, 0x77, 0x60, 0xCF, 0xB0, 0xC7, 0x76, 0x0E, 0xFB, 0x0E, 0x77, 0x60,
  0xEF, 0xB0, 0xE7, 0x76, 0x0C, 0xFB, 0x0C, 0x77, 0x60, 0x6F, 0xB0, 0x67, 0x77, 0x0C, 0xF9, 0x0C,
  0x77, 0x71, 0x01, 0x0C, 0xE0, 0xC0, 0x17, 0x77, 0x38, 0x46, 0xCE, 0xEC, 0x68, 0x0A, 0x96, 0x08,
  0x46, 0xCE, 0xEC, 0x67, 0x77, 0x30, 0x10, 0xCE, 0x0C, 0x01, 0x77, 0x71, 0x0C, 0xF9, 0x0C, 0x77,
  0x70, 0x6F, 0xB0, 0x67, 0x76, 0x0C, 0xFB, 0x0C, 0x77, 0x60, 0xEF, 0xB0, 0xE7, 0x76, 0x0E, 0xFB,
  0x0E, 0x77, 0x60, 0xCF, 0xB0, 0xC7, 0x38, 0x42, 0x8B, 0xB9, 0x44, 0x06, 0xFB, 0x06, 0x72, 0x07,
  0xE0, 0xB0, 0x13, 0x0C, 0xF9, 0x0C, 0x72, 0x07, 0xF9, 0x0C, 0x30, 0x10, 0xCE, 0x0C, 0x01, 0x71,
  0x02, 0xFB, 0x08, 0x48, 0x46, 0xCE, 0xEC, 0x67, 0x30, 0x8F, 0xB0, 0xE7, 0x76, 0x0B, 0xFC, 0x02,
  0x77, 0x50, 0xBF, 0xC0, 0x27, 0x75, 0x09, 0xFC, 0x77, 0x60, 0x4F, 0xB0, 0xB7, 0x77, 0x0B, 0xFA,
  0x03, 0x77, 0x70, 0x10, 0xCF, 0x05, 0x77, 0x73, 0x08, 0x0E, 0xB0, 0xB0, 0x37, 0x77, 0x60, 0x10,
  0x26,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_scatter_plot() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_scatter_plot_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_schema 48x48, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_sharp_48_editor_schema_data[] PROGMEM = {
  0xFF, 0x77, 0x6F, 0xF7, 0x76, 0xFF, 0x77, 0x6F, 0xF7, 0x76, 0xFF, 0x77, 0x6F, 0xF7, 0x76, 0xFF,
  0x77, 0x6F, 0xF7, 0x76, 0xFF, 0x77, 0x6F, 0xF7, 0x76, 0xFF, 0x77, 0x6F, 0xF7, 0x77, 0x4C, 0x77,
  0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x74, 0xFF, 0x6F, 0xFF, 0xF6, 0xFF, 0xFF,
  0x6F, 0xFF, 0xF6, 0x80, 0xAC, 0x0F, 0x6F, 0xFF, 0xF6, 0xFF, 0xFF, 0x6F, 0xFF, 0xF6, 0xFF, 0x5C,
  0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x77, 0x2C, 0x77, 0x74, 0xFF, 0x77, 0x6F, 0xF7, 0x76,
  0xFF, 0x77, 0x6F, 0xF7, 0x76, 0xFF, 0x77, 0x6F, 0xF7, 0x76, 0xFF, 0x77, 0x6F, 0xF7, 0x76, 0xFF,
  0x77, 0x6F, 0xF7, 0x76, 0xFF, 0x77, 0x6F, 0xF7, 0x76,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_schema() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 2, 41, 45), Box(0, 0, 47, 47),
      ic_sharp_48_editor_schema_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_score 48x48, 4-bit Alpha,  RLE, 232 bytes.
static const uint8_t ic_sharp_48_editor_score_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0x84, 0xDA, 0x10, 0x1E, 0xFF, 0xFF, 0xC8, 0x1E, 0x1A, 0xFF, 0xFF,
  0xE0, 0xA0, 0xDF, 0xFF, 0xFE, 0x0D, 0xF9, 0x71, 0xA3, 0xB0, 0xA3, 0x0D, 0xFF, 0x97, 0x1A, 0x3A,
  0x0E, 0x01, 0x20, 0x9F, 0xFA, 0x71, 0xA3, 0xA0, 0x52, 0x04, 0xFF, 0xF9, 0x3A, 0x39, 0x0A, 0x30,
  0xDF, 0xFB, 0x80, 0x17, 0x3A, 0x30, 0xE0, 0x12, 0x09, 0xFF, 0xC7, 0x1A, 0x30, 0x52, 0x04, 0xFF,
  0xD7, 0x1A, 0x30, 0x52, 0x04, 0xFF, 0xD3, 0x80, 0x17, 0xA3, 0x0E, 0x01, 0x20, 0x9F, 0xFC, 0x3F,
  0x39, 0x0A, 0x30, 0xDF, 0xFB, 0x71, 0xA3, 0xA0, 0x52, 0x04, 0xFF, 0xB7, 0x1A, 0x3A, 0x0E, 0x01,
  0x20, 0x9F, 0xFA, 0x71, 0xA3, 0xB0, 0xA3, 0x0D, 0xA0, 0x7F, 0xFF, 0xFE, 0x07, 0x1F, 0xFF, 0xFD,
  0x07, 0x2F, 0xFF, 0xFC, 0x07, 0x3F, 0xF9, 0x00, 0x7F, 0xF0, 0x74, 0xFF, 0x07, 0x20, 0x7F, 0xD0,
  0x74, 0x07, 0xFE, 0x07, 0x40, 0x7F, 0xB0, 0x74, 0x07, 0xFE, 0x07, 0x60, 0x7F, 0x90, 0x74, 0x07,
  0xFE, 0x07, 0x71, 0x07, 0xE0, 0x74, 0x07, 0xFE, 0x07, 0x40, 0x07, 0x40, 0x7C, 0x07, 0x40, 0x7F,
  0xE0, 0x74, 0x07, 0xA0, 0x74, 0x07, 0xA0, 0x74, 0x07, 0xFE, 0x07, 0x40, 0x7C, 0x07, 0x40, 0x07,
  0x40, 0x7F, 0xF4, 0x07, 0xE0, 0x77, 0x10, 0x7F, 0xF9, 0x30, 0x7F, 0x90, 0x76, 0x07, 0xFF, 0xA2,
  0x07, 0xFB, 0x07, 0x40, 0x7F, 0xFB, 0x10, 0x7F, 0xD0, 0x72, 0x07, 0xFF, 0xC0, 0x7F, 0xF0, 0x07,
  0xFF, 0x90, 0xDF, 0xFF, 0xFE, 0x0D, 0x0A, 0xFF, 0xFF, 0xE8, 0x1A, 0x1E, 0xFF, 0xFF, 0xC8, 0x4E,
  0x10, 0x1A, 0xDF, 0xFF, 0xF8, 0x1D, 0xA1, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_score() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_score_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_shape_line 48x48, 4-bit Alpha,  RLE, 328 bytes.
static const uint8_t ic_sharp_48_editor_shape_line_data[] PROGMEM = {
  0x68, 0x65, 0x9D, 0xEE, 0xD9, 0x57, 0x77, 0x76, 0x04, 0x0D, 0xF9, 0x0D, 0x04, 0x77, 0x77, 0x30,
  0x8F, 0xD0, 0x87, 0x72, 0x84, 0x6C, 0xEE, 0xC6, 0x70, 0x8F, 0xF0, 0x87, 0x60, 0x10, 0xCE, 0x0C,
  0x01, 0x40, 0x4F, 0xFA, 0x04, 0x75, 0x0C, 0xF9, 0x0C, 0x40, 0xDF, 0xFA, 0x0D, 0x74, 0x06, 0xFB,
  0x06, 0x20, 0x5F, 0xFC, 0x05, 0x73, 0x0C, 0xFB, 0x0C, 0x20, 0x9F, 0xFC, 0x09, 0x73, 0x0E, 0xFB,
  0x0E, 0x20, 0xDF, 0xFC, 0x0D, 0x73, 0x0E, 0xFB, 0x0E, 0x20, 0xEF, 0xFC, 0x0E, 0x73, 0x0B, 0xFB,
  0x0C, 0x20, 0xEF, 0xFC, 0x0E, 0x73, 0x08, 0xFB, 0x06, 0x20, 0xDF, 0xFC, 0x0D, 0x72, 0x05, 0xFB,
  0x0C, 0x30, 0x9F, 0xFC, 0x09, 0x71, 0x05, 0xFB, 0x0C, 0x01, 0x30, 0x5F, 0xFC, 0x05, 0x70, 0x5D,
  0x84, 0x8B, 0xEE, 0xC6, 0x60, 0xDF, 0xFA, 0x0D, 0x70, 0x5D, 0x05, 0x75, 0x04, 0xFF, 0xA0, 0x46,
  0x05, 0xD0, 0x57, 0x70, 0x8F, 0xF0, 0x86, 0x05, 0xD0, 0x57, 0x72, 0x08, 0xFD, 0x08, 0x60, 0x5D,
  0x05, 0x77, 0x40, 0x40, 0xDF, 0x90, 0xD0, 0x46, 0x05, 0xD0, 0x57, 0x77, 0x86, 0x59, 0xDE, 0xED,
  0x95, 0x70, 0x5D, 0x05, 0x80, 0xC0, 0x00, 0x5D, 0x05, 0x80, 0xC0, 0x00, 0x5D, 0x05, 0x80, 0xC0,
  0x00, 0x5D, 0x05, 0x80, 0xC0, 0x00, 0x5D, 0x05, 0x80, 0xC0, 0x00, 0x5D, 0x05, 0x80, 0xC0, 0x00,
  0x5D, 0x05, 0x80, 0xC0, 0x00, 0x5D, 0x05, 0x68, 0x11, 0xAD, 0xFB, 0x81, 0xDA, 0x17, 0x70, 0x5D,
  0x05, 0x60, 0x10, 0xEF, 0xF0, 0xE0, 0x17, 0x50, 0x5D, 0x05, 0x70, 0xAF, 0xFA, 0x0A, 0x74, 0x05,
  0xD0, 0x57, 0x10, 0xDF, 0xFA, 0x0D, 0x58, 0x46, 0xCE, 0xEB, 0x8D, 0x05, 0x72, 0xFF, 0xC3, 0x01,
  0x0C, 0xFB, 0x05, 0x73, 0xFF, 0xC3, 0x0C, 0xFB, 0x05, 0x74, 0xFF, 0xC2, 0x06, 0xFB, 0x08, 0x75,
  0xFF, 0xC2, 0x0C, 0xFB, 0x0B, 0x75, 0xFF, 0xC2, 0x0E, 0xFB, 0x0E, 0x75, 0xFF, 0xC2, 0x0E, 0xFB,
  0x0E, 0x75, 0xFF, 0xC2, 0x0C, 0xFB, 0x0C, 0x75, 0xFF, 0xC2, 0x06, 0xFB, 0x06, 0x75, 0xFF, 0xC3,
  0x0C, 0xF9, 0x0C, 0x76, 0xFF, 0xC3, 0x01, 0x0C, 0xE0, 0xC0, 0x17, 0x60, 0xDF, 0xFA, 0x0D, 0x58,
  0x46, 0xCE, 0xEC, 0x67, 0x71, 0x0A, 0xFF, 0xA0, 0xA7, 0x77, 0x50, 0x10, 0xEF, 0xF0, 0xE0, 0x17,
  0x77, 0x68, 0x11, 0xAD, 0xFB, 0x81, 0xDA, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_shape_line() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 2, 45, 45), Box(0, 0, 47, 47),
      ic_sharp_48_editor_shape_line_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_short_text 48x48, 4-bit Alpha,  RLE, 16 bytes.
static const uint8_t ic_sharp_48_editor_short_text_data[] PROGMEM = {
  0x80, 0x9F, 0x4F, 0x80, 0x9F, 0x40, 0xFF, 0xE7, 0x5F, 0xFE, 0x75, 0xFF, 0xE7, 0x5F, 0xFE, 0x75,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_short_text() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 18, 39, 29), Box(0, 0, 47, 47),
      ic_sharp_48_editor_short_text_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_show_chart 48x48, 4-bit Alpha,  RLE, 178 bytes.
static const uint8_t ic_sharp_48_editor_show_chart_data[] PROGMEM = {
  0x80, 0xC0, 0x00, 0x40, 0x98, 0x0C, 0x10, 0x82, 0x2E, 0xFA, 0x77, 0x77, 0x70, 0x10, 0xDB, 0x09,
  0x77, 0x77, 0x50, 0x10, 0xDC, 0x06, 0x77, 0x77, 0x50, 0xBC, 0x08, 0x77, 0x77, 0x50, 0xAC, 0x09,
  0x77, 0x77, 0x50, 0x9C, 0x0B, 0x77, 0x77, 0x50, 0x7C, 0x0C, 0x77, 0x40, 0x08, 0x76, 0x05, 0xC0,
  0xD0, 0x17, 0x73, 0x08, 0xA0, 0x87, 0x40, 0x4C, 0x0E, 0x02, 0x77, 0x30, 0x8C, 0x08, 0x72, 0x03,
  0x0E, 0xB0, 0xE0, 0x37, 0x73, 0x08, 0xE0, 0x87, 0x01, 0x0E, 0xC0, 0x47, 0x73, 0x08, 0xF9, 0x08,
  0x50, 0x10, 0xDC, 0x06, 0x77, 0x30, 0x8F, 0xB0, 0x84, 0x0B, 0xC0, 0x87, 0x73, 0x08, 0xD0, 0x07,
  0xD0, 0x82, 0x0A, 0xC0, 0x97, 0x73, 0x08, 0xD0, 0x72, 0x07, 0xD0, 0x80, 0x9C, 0x0B, 0x77, 0x30,
  0x8D, 0x07, 0x40, 0x7F, 0xA0, 0xC7, 0x73, 0x08, 0xD0, 0x76, 0x07, 0xF0, 0xD0, 0x17, 0x72, 0x08,
  0xD0, 0x77, 0x10, 0x7D, 0x0E, 0x02, 0x77, 0x20, 0x8D, 0x07, 0x73, 0x07, 0xB0, 0xE0, 0x37, 0x72,
  0x08, 0xD0, 0x77, 0x50, 0x7A, 0x04, 0x77, 0x20, 0x8D, 0x07, 0x77, 0x07, 0x06, 0x77, 0x20, 0x8D,
  0x07, 0x77, 0x77, 0x50, 0x7C, 0x07, 0x77, 0x77, 0x70, 0x7A, 0x07, 0x80, 0xC1, 0x00, 0x07, 0x80,
  0xC0, 0x00,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_show_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 11, 43, 36), Box(0, 0, 47, 47),
      ic_sharp_48_editor_show_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_space_bar 48x48, 4-bit Alpha,  RLE, 27 bytes.
static const uint8_t ic_sharp_48_editor_space_bar_data[] PROGMEM = {
  0xC7, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97,
  0x77, 0x3F, 0x97, 0x77, 0x3F, 0x97, 0x77, 0x38, 0x0A, 0x80, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_space_bar() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 18, 39, 29), Box(0, 0, 47, 47),
      ic_sharp_48_editor_space_bar_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_square 48x48, 4-bit Alpha,  RLE, 4 bytes.
static const uint8_t ic_sharp_48_editor_square_data[] PROGMEM = {
  0x80, 0xAC, 0x94, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_square() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_square_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_stacked_line_chart 48x48, 4-bit Alpha,  RLE, 315 bytes.
static const uint8_t ic_sharp_48_editor_stacked_line_chart_data[] PROGMEM = {
  0x80, 0xC0, 0x00, 0x40, 0x98, 0x0C, 0x10, 0x82, 0x2E, 0xFA, 0x77, 0x77, 0x70, 0x10, 0xDB, 0x09,
  0x77, 0x77, 0x50, 0x10, 0xDC, 0x06, 0x77, 0x77, 0x50, 0xBC, 0x08, 0x77, 0x77, 0x50, 0xAC, 0x09,
  0x77, 0x77, 0x50, 0x9C, 0x0B, 0x77, 0x77, 0x50, 0x7C, 0x0C, 0x77, 0x40, 0x08, 0x76, 0x05, 0xC0,
  0xD0, 0x17, 0x73, 0x08, 0xA0, 0x87, 0x40, 0x4C, 0x0E, 0x02, 0x77, 0x30, 0x8C, 0x08, 0x72, 0x03,
  0x0E, 0xB0, 0xE0, 0x37, 0x73, 0x08, 0xE0, 0x87, 0x01, 0x0E, 0xC0, 0x47, 0x73, 0x08, 0xF9, 0x08,
  0x50, 0x10, 0xDC, 0x06, 0x40, 0x40, 0x97, 0x40, 0x8F, 0xB0, 0x84, 0x0B, 0xC0, 0x84, 0x82, 0x2E,
  0xFA, 0x72, 0x08, 0xD0, 0x07, 0xD0, 0x82, 0x0A, 0xC0, 0x94, 0x01, 0x0D, 0xB0, 0x97, 0x08, 0xD0,
  0x72, 0x07, 0xD0, 0x80, 0x9C, 0x0B, 0x40, 0x10, 0xDC, 0x06, 0x60, 0x8D, 0x07, 0x40, 0x7F, 0xA0,
  0xC5, 0x0B, 0xC0, 0x86, 0x08, 0xD0, 0x76, 0x07, 0xF0, 0xD0, 0x14, 0x0A, 0xC0, 0x96, 0x08, 0xD0,
  0x77, 0x10, 0x7D, 0x0E, 0x02, 0x40, 0x9C, 0x0B, 0x60, 0x8D, 0x07, 0x73, 0x07, 0xB0, 0xE0, 0x34,
  0x07, 0xC0, 0xC6, 0x08, 0xD0, 0x75, 0x00, 0x85, 0x07, 0xA0, 0x44, 0x05, 0xC0, 0xD0, 0x15, 0x08,
  0xD0, 0x75, 0x08, 0xA0, 0x85, 0x07, 0x06, 0x40, 0x4C, 0x0E, 0x02, 0x50, 0x8D, 0x07, 0x50, 0x8C,
  0x08, 0x72, 0x03, 0x0E, 0xB0, 0xE0, 0x36, 0x07, 0xC0, 0x75, 0x08, 0xE0, 0x87, 0x01, 0x0E, 0xC0,
  0x47, 0x10, 0x7A, 0x07, 0x50, 0x8F, 0x90, 0x85, 0x01, 0x0D, 0xC0, 0x67, 0x30, 0x07, 0x50, 0x8F,
  0xB0, 0x84, 0x0B, 0xC0, 0x87, 0x73, 0x08, 0xD0, 0x07, 0xD0, 0x82, 0x0A, 0xC0, 0x97, 0x73, 0x08,
  0xD0, 0x72, 0x07, 0xD0, 0x80, 0x9C, 0x0B, 0x77, 0x30, 0x8D, 0x07, 0x40, 0x7F, 0xA0, 0xC7, 0x73,
  0x08, 0xD0, 0x76, 0x07, 0xF0, 0xD0, 0x17, 0x72, 0x08, 0xD0, 0x77, 0x10, 0x7D, 0x0E, 0x02, 0x77,
  0x20, 0x8D, 0x07, 0x73, 0x07, 0xB0, 0xE0, 0x37, 0x72, 0x08, 0xD0, 0x77, 0x50, 0x7A, 0x04, 0x77,
  0x20, 0x8D, 0x07, 0x77, 0x07, 0x06, 0x77, 0x20, 0x8D, 0x07, 0x77, 0x77, 0x50, 0x7C, 0x07, 0x77,
  0x77, 0x70, 0x7A, 0x07, 0x80, 0xC1, 0x00, 0x07, 0x80, 0xC0, 0x00,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_stacked_line_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 5, 43, 42), Box(0, 0, 47, 47),
      ic_sharp_48_editor_stacked_line_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_strikethrough_s 48x48, 4-bit Alpha,  RLE, 166 bytes.
static const uint8_t ic_sharp_48_editor_strikethrough_s_data[] PROGMEM = {
  0x76, 0x89, 0x12, 0x7A, 0xDE, 0xFE, 0xDA, 0x61, 0x77, 0x72, 0x03, 0x0B, 0xFC, 0x09, 0x01, 0x77,
  0x60, 0x8F, 0xF0, 0xE0, 0x37, 0x74, 0x08, 0xFF, 0xA0, 0xE0, 0x37, 0x72, 0x04, 0xF9, 0x81, 0xDC,
  0xDF, 0x0D, 0x77, 0x20, 0xBD, 0x0E, 0x06, 0x40, 0x20, 0xAE, 0x06, 0x77, 0x01, 0xE0, 0x47, 0x09,
  0xD0, 0xC7, 0x70, 0x3D, 0x0C, 0x71, 0x01, 0xE7, 0x70, 0x4D, 0x0B, 0x72, 0x0D, 0xD0, 0x27, 0x60,
  0x2E, 0x02, 0x77, 0x77, 0x10, 0xED, 0x0D, 0x03, 0x77, 0x77, 0x07, 0xF0, 0xA0, 0x38, 0x09, 0xA6,
  0x08, 0x0A, 0x94, 0xF7, 0x75, 0x81, 0x18, 0xEE, 0x07, 0x77, 0x77, 0x01, 0x0C, 0xD0, 0xD7, 0x60,
  0x28, 0x01, 0xB0, 0x97, 0x20, 0x2E, 0x01, 0x75, 0x01, 0xD0, 0xD7, 0x30, 0xDD, 0x03, 0x76, 0x0E,
  0xD0, 0x27, 0x20, 0xED, 0x02, 0x76, 0x0A, 0xD0, 0xB7, 0x10, 0x5E, 0x77, 0x03, 0xE0, 0xC0, 0x35,
  0x06, 0x0E, 0xD0, 0xB7, 0x71, 0x09, 0xF8, 0x3E, 0xDB, 0xCE, 0xF0, 0x57, 0x72, 0x0B, 0xFF, 0xB0,
  0xA7, 0x74, 0x09, 0xFF, 0x90, 0xA7, 0x76, 0x04, 0x0B, 0xFC, 0x0D, 0x05, 0x77, 0x72, 0x82, 0x27,
  0xAD, 0xB8, 0x2E, 0xB8, 0x47, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_strikethrough_s() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 41, 35), Box(0, 0, 47, 47),
      ic_sharp_48_editor_strikethrough_s_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_subscript 48x48, 4-bit Alpha,  RLE, 215 bytes.
static const uint8_t ic_sharp_48_editor_subscript_data[] PROGMEM = {
  0x04, 0xC0, 0xE0, 0x17, 0x30, 0x10, 0xEC, 0x04, 0x74, 0x0A, 0xC0, 0x97, 0x30, 0xAC, 0x0A, 0x75,
  0x01, 0x0E, 0xC0, 0x37, 0x10, 0x4C, 0x0E, 0x01, 0x76, 0x05, 0xC0, 0xD7, 0x10, 0xDC, 0x05, 0x77,
  0x10, 0xBC, 0x07, 0x60, 0x7C, 0x0B, 0x77, 0x20, 0x20, 0xEB, 0x0E, 0x02, 0x40, 0x2C, 0x0E, 0x01,
  0x77, 0x30, 0x6C, 0x0B, 0x40, 0xBC, 0x06, 0x77, 0x50, 0xCC, 0x05, 0x20, 0x5C, 0x0B, 0x77, 0x60,
  0x2C, 0x0D, 0x20, 0xEC, 0x02, 0x77, 0x70, 0x8C, 0x00, 0x9C, 0x07, 0x77, 0x72, 0x0D, 0xF9, 0x0C,
  0x77, 0x73, 0x03, 0xF9, 0x03, 0x77, 0x74, 0x09, 0xE0, 0x87, 0x77, 0x50, 0x2E, 0x01, 0x77, 0x75,
  0x09, 0xE0, 0x97, 0x77, 0x40, 0x4F, 0x90, 0x37, 0x77, 0x30, 0xDF, 0x90, 0xD7, 0x77, 0x20, 0x8C,
  0x00, 0xAC, 0x08, 0x77, 0x70, 0x3C, 0x82, 0xE1, 0x1E, 0xC0, 0x27, 0x76, 0x0C, 0xC0, 0x62, 0x06,
  0xC0, 0xC7, 0x75, 0x07, 0xC0, 0xC4, 0x0C, 0xC0, 0x67, 0x73, 0x02, 0x0E, 0xC0, 0x24, 0x02, 0xC0,
  0xE0, 0x17, 0x72, 0x0B, 0xC0, 0x86, 0x08, 0xC0, 0xB5, 0xE0, 0xD0, 0x42, 0x05, 0xC0, 0xD7, 0x10,
  0xDC, 0x05, 0x4F, 0x82, 0xD0, 0x1E, 0xC0, 0x47, 0x10, 0x4C, 0x0E, 0x01, 0x72, 0xA1, 0x0A, 0xC0,
  0xA7, 0x30, 0xAC, 0x09, 0x72, 0xA0, 0x4C, 0x0E, 0x01, 0x73, 0x01, 0x0E, 0xC0, 0x42, 0x04, 0x0D,
  0xD0, 0x0D, 0xC0, 0x67, 0x50, 0x6C, 0x0D, 0x20, 0xDD, 0x0D, 0x04, 0x77, 0x75, 0xA7, 0x77, 0x74,
  0xA7, 0x77, 0x74, 0xF9, 0x77, 0x75, 0xF9,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_subscript() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(12, 8, 45, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_subscript_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_superscript 48x48, 4-bit Alpha,  RLE, 216 bytes.
static const uint8_t ic_sharp_48_editor_superscript_data[] PROGMEM = {
  0x77, 0x75, 0xE0, 0xD0, 0x47, 0x77, 0x5F, 0x0D, 0x77, 0x77, 0x4A, 0x77, 0x77, 0x4A, 0x04, 0xC0,
  0xE0, 0x17, 0x30, 0x10, 0xEC, 0x04, 0x20, 0x40, 0xDD, 0x81, 0xD0, 0xAC, 0x09, 0x73, 0x0A, 0xC0,
  0xA3, 0x0D, 0xD8, 0x3D, 0x40, 0x1E, 0xC0, 0x37, 0x10, 0x4C, 0x0E, 0x01, 0x3A, 0x71, 0x05, 0xC0,
  0xD7, 0x10, 0xDC, 0x05, 0x4A, 0x72, 0x0B, 0xC0, 0x76, 0x07, 0xC0, 0xB5, 0xF9, 0x30, 0x20, 0xEB,
  0x0E, 0x02, 0x40, 0x2C, 0x0E, 0x01, 0x5F, 0x94, 0x06, 0xC0, 0xB4, 0x0B, 0xC0, 0x67, 0x75, 0x0C,
  0xC0, 0x52, 0x05, 0xC0, 0xB7, 0x76, 0x02, 0xC0, 0xD2, 0x0E, 0xC0, 0x27, 0x77, 0x08, 0xC0, 0x09,
  0xC0, 0x77, 0x77, 0x20, 0xDF, 0x90, 0xC7, 0x77, 0x30, 0x3F, 0x90, 0x37, 0x77, 0x40, 0x9E, 0x08,
  0x77, 0x75, 0x02, 0xE0, 0x17, 0x77, 0x50, 0x9E, 0x09, 0x77, 0x74, 0x04, 0xF9, 0x03, 0x77, 0x73,
  0x0D, 0xF9, 0x0D, 0x77, 0x72, 0x08, 0xC0, 0x0A, 0xC0, 0x87, 0x77, 0x03, 0xC8, 0x2E, 0x11, 0xEC,
  0x02, 0x77, 0x60, 0xCC, 0x06, 0x20, 0x6C, 0x0C, 0x77, 0x50, 0x7C, 0x0C, 0x40, 0xCC, 0x06, 0x77,
  0x30, 0x20, 0xEC, 0x02, 0x40, 0x2C, 0x0E, 0x01, 0x77, 0x20, 0xBC, 0x08, 0x60, 0x8C, 0x0B, 0x77,
  0x10, 0x5C, 0x0D, 0x71, 0x0D, 0xC0, 0x57, 0x60, 0x10, 0xEC, 0x04, 0x71, 0x04, 0xC0, 0xE0, 0x17,
  0x50, 0xAC, 0x0A, 0x73, 0x0A, 0xC0, 0x97, 0x40, 0x4C, 0x0E, 0x01, 0x73, 0x01, 0x0E, 0xC0, 0x47,
  0x30, 0xDC, 0x06, 0x75, 0x06, 0xC0, 0xD7, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_superscript() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(12, 8, 45, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_superscript_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_table_chart 48x48, 4-bit Alpha,  RLE, 120 bytes.
static const uint8_t ic_sharp_48_editor_table_chart_data[] PROGMEM = {
  0x18, 0x11, 0xAD, 0xFF, 0xFF, 0xA8, 0x4D, 0xA1, 0x01, 0xEF, 0xFF, 0xFE, 0x81, 0xE1, 0xA8, 0x0C,
  0x0F, 0x0A, 0x0D, 0x80, 0xC0, 0xF0, 0xD8, 0x0B, 0xC0, 0xF8, 0x0A, 0xA4, 0x0F, 0xB4, 0xFB, 0x4F,
  0xFE, 0x4F, 0xB4, 0xFF, 0xE4, 0xFB, 0x4F, 0xFE, 0x4F, 0xB4, 0xFF, 0xE4, 0xFB, 0x4F, 0xFE, 0x4F,
  0xB4, 0xFF, 0xE4, 0xFB, 0x4F, 0xFE, 0x4F, 0xB4, 0xFF, 0xE4, 0xFB, 0x4F, 0xFE, 0x4F, 0xB4, 0xFF,
  0xE4, 0xFB, 0x4F, 0xFE, 0x4F, 0xB4, 0xFF, 0xE4, 0xFB, 0x4F, 0xFE, 0x4F, 0xB4, 0xFF, 0xE4, 0xFB,
  0x4F, 0xFE, 0x4F, 0xB4, 0xFF, 0xE4, 0xFB, 0x4F, 0xFE, 0x4F, 0xB4, 0xFB, 0x0D, 0xFA, 0x4F, 0xB4,
  0xFA, 0x0D, 0x0A, 0xFA, 0x4F, 0xB4, 0xFA, 0x81, 0xA1, 0xEF, 0x94, 0xFB, 0x4F, 0x98, 0x4E, 0x10,
  0x1A, 0xDE, 0x4F, 0xB4, 0xE8, 0x1D, 0xA1, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_table_chart() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_table_chart_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_table_rows 48x48, 4-bit Alpha,  RLE, 15 bytes.
static const uint8_t ic_sharp_48_editor_table_rows_data[] PROGMEM = {
  0x80, 0xCB, 0x4F, 0x80, 0xA9, 0x40, 0x80, 0xCB, 0x4F, 0x80, 0xA9, 0x40, 0x80, 0xCB, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_table_rows() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 8, 41, 39), Box(0, 0, 47, 47),
      ic_sharp_48_editor_table_rows_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_text_decrease 48x48, 4-bit Alpha,  RLE, 202 bytes.
static const uint8_t ic_sharp_48_editor_text_decrease_data[] PROGMEM = {
  0x73, 0x0A, 0xC0, 0xA8, 0x0C, 0x10, 0x01, 0xE0, 0x18, 0x0C, 0x00, 0x06, 0xE0, 0x68, 0x0C, 0x00,
  0x0C, 0xE0, 0xC7, 0x77, 0x77, 0x03, 0xF9, 0x03, 0x77, 0x77, 0x60, 0x8B, 0x00, 0xCB, 0x08, 0x77,
  0x77, 0x60, 0xEB, 0x00, 0x6B, 0x0E, 0x77, 0x77, 0x50, 0x4C, 0x00, 0x1C, 0x04, 0x77, 0x77, 0x40,
  0xAB, 0x0B, 0x20, 0xBB, 0x0A, 0x77, 0x77, 0x30, 0x1C, 0x05, 0x20, 0x5C, 0x01, 0x77, 0x77, 0x20,
  0x6B, 0x0E, 0x40, 0xEB, 0x06, 0x77, 0x77, 0x20, 0xCB, 0x0A, 0x40, 0xAB, 0x0C, 0x77, 0x77, 0x10,
  0x3C, 0x04, 0x40, 0x4C, 0x03, 0x7F, 0xFA, 0x50, 0x8B, 0x0E, 0x60, 0xEB, 0x08, 0x7F, 0xFA, 0x50,
  0xEB, 0x09, 0x60, 0x9B, 0x0E, 0x7F, 0xFA, 0x40, 0x5C, 0x04, 0x60, 0x4C, 0x05, 0x6F, 0xFA, 0x40,
  0xAB, 0x0E, 0x04, 0x80, 0x23, 0x04, 0x0E, 0xB0, 0xA7, 0x77, 0x40, 0x1F, 0xFC, 0x01, 0x77, 0x73,
  0x06, 0xFF, 0xC0, 0x67, 0x77, 0x30, 0xCF, 0xFC, 0x0C, 0x77, 0x72, 0x03, 0xC0, 0xE8, 0x06, 0xD0,
  0xEC, 0x03, 0x77, 0x71, 0x08, 0xC0, 0x27, 0x30, 0x1C, 0x08, 0x77, 0x71, 0x0E, 0xB0, 0xB7, 0x50,
  0xBB, 0x0E, 0x77, 0x70, 0x5C, 0x06, 0x75, 0x06, 0xC0, 0x57, 0x76, 0x0A, 0xC0, 0x17, 0x50, 0x1C,
  0x0A, 0x77, 0x50, 0x1C, 0x0A, 0x77, 0x0A, 0xC0, 0x17, 0x74, 0x07, 0xC0, 0x57, 0x70, 0x5C, 0x07,
  0x77, 0x40, 0xCB, 0x0E, 0x77, 0x20, 0xEB, 0x0C, 0x77, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_text_decrease() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 10, 45, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_text_decrease_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_text_fields 48x48, 4-bit Alpha,  RLE, 100 bytes.
static const uint8_t ic_sharp_48_editor_text_fields_data[] PROGMEM = {
  0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75, 0xFF, 0xFD, 0x75, 0xFF,
  0xFD, 0x77, 0x71, 0xE7, 0x77, 0x74, 0xE7, 0x77, 0x74, 0xE7, 0x77, 0x74, 0xE7, 0x77, 0x74, 0xE4,
  0xFF, 0xC7, 0x3E, 0x4F, 0xFC, 0x73, 0xE4, 0xFF, 0xC7, 0x3E, 0x4F, 0xFC, 0x73, 0xE4, 0xFF, 0xC7,
  0x3E, 0x4F, 0xFC, 0x73, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73,
  0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72,
  0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E, 0x77, 0x2E, 0x73, 0xE7, 0x72, 0xE7, 0x3E,
  0x77, 0x2E, 0x73, 0xE6,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_text_fields() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(5, 8, 42, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_text_fields_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_text_increase 48x48, 4-bit Alpha,  RLE, 206 bytes.
static const uint8_t ic_sharp_48_editor_text_increase_data[] PROGMEM = {
  0x73, 0x0A, 0xC0, 0xA8, 0x0C, 0x10, 0x01, 0xE0, 0x18, 0x0C, 0x00, 0x06, 0xE0, 0x68, 0x0C, 0x00,
  0x0C, 0xE0, 0xC7, 0x77, 0x77, 0x03, 0xF9, 0x03, 0x77, 0x77, 0x60, 0x8B, 0x00, 0xCB, 0x08, 0x77,
  0x77, 0x60, 0xEB, 0x00, 0x6B, 0x0E, 0x77, 0x2C, 0x76, 0x04, 0xC0, 0x01, 0xC0, 0x47, 0x71, 0xC7,
  0x60, 0xAB, 0x0B, 0x20, 0xBB, 0x0A, 0x77, 0x1C, 0x75, 0x01, 0xC0, 0x52, 0x05, 0xC0, 0x17, 0x7C,
  0x75, 0x06, 0xB0, 0xE4, 0x0E, 0xB0, 0x67, 0x7C, 0x75, 0x0C, 0xB0, 0xA4, 0x0A, 0xB0, 0xC7, 0x7C,
  0x74, 0x03, 0xC0, 0x44, 0x04, 0xC0, 0x37, 0xFF, 0xA5, 0x08, 0xB0, 0xE6, 0x0E, 0xB0, 0x87, 0xFF,
  0xA5, 0x0E, 0xB0, 0x96, 0x09, 0xB0, 0xE7, 0xFF, 0xA4, 0x05, 0xC0, 0x46, 0x04, 0xC0, 0x56, 0xFF,
  0xA4, 0x0A, 0xB0, 0xE0, 0x48, 0x02, 0x30, 0x40, 0xEB, 0x0A, 0x75, 0xC7, 0x20, 0x1F, 0xFC, 0x01,
  0x74, 0xC7, 0x20, 0x6F, 0xFC, 0x06, 0x74, 0xC7, 0x20, 0xCF, 0xFC, 0x0C, 0x74, 0xC7, 0x10, 0x3C,
  0x0E, 0x80, 0x6D, 0x0E, 0xC0, 0x37, 0x3C, 0x71, 0x08, 0xC0, 0x27, 0x30, 0x1C, 0x08, 0x73, 0xC7,
  0x10, 0xEB, 0x0B, 0x75, 0x0B, 0xB0, 0xE7, 0x77, 0x05, 0xC0, 0x67, 0x50, 0x6C, 0x05, 0x77, 0x60,
  0xAC, 0x01, 0x75, 0x01, 0xC0, 0xA7, 0x75, 0x01, 0xC0, 0xA7, 0x70, 0xAC, 0x01, 0x77, 0x40, 0x7C,
  0x05, 0x77, 0x05, 0xC0, 0x77, 0x74, 0x0C, 0xB0, 0xE7, 0x72, 0x0E, 0xB0, 0xC7, 0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_text_increase() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 10, 45, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_text_increase_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_title 48x48, 4-bit Alpha,  RLE, 63 bytes.
static const uint8_t ic_sharp_48_editor_title_data[] PROGMEM = {
  0x80, 0xAC, 0x4F, 0x74, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77,
  0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E,
  0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77,
  0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x77, 0x71, 0xE7, 0x77, 0x1E, 0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_title() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(10, 8, 37, 37), Box(0, 0, 47, 47),
      ic_sharp_48_editor_title_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_type_specimen 48x48, 4-bit Alpha,  RLE, 240 bytes.
static const uint8_t ic_sharp_48_editor_type_specimen_data[] PROGMEM = {
  0x72, 0x81, 0x1A, 0xDF, 0xFF, 0xB8, 0x1D, 0xA1, 0x72, 0x01, 0x0E, 0xFF, 0xFF, 0x0E, 0x01, 0x71,
  0x0A, 0xFF, 0xFF, 0xA0, 0xA7, 0x10, 0xDF, 0xFF, 0xFA, 0x0D, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF,
  0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xF0, 0x32, 0x03, 0xFF, 0xC4, 0xFE, 0x0C, 0x40, 0xCF, 0xFB,
  0x4F, 0xE0, 0x64, 0x07, 0xFF, 0xB4, 0xFE, 0x84, 0x10, 0x11, 0x01, 0xFF, 0xB4, 0xFD, 0x0A, 0x20,
  0x07, 0x20, 0xBF, 0xFA, 0x4F, 0xD0, 0x42, 0x0D, 0x0C, 0x20, 0x5F, 0xFA, 0x4F, 0xC0, 0xE2, 0x03,
  0xA0, 0x22, 0x0E, 0xFF, 0x94, 0xFC, 0x08, 0x20, 0x8A, 0x08, 0x20, 0x9F, 0xF9, 0x4F, 0xC0, 0x22,
  0x0D, 0xA0, 0xD2, 0x03, 0xFF, 0x94, 0xFB, 0x0C, 0x20, 0x3C, 0x03, 0x20, 0xCF, 0xF4, 0xFB, 0x06,
  0x28, 0x46, 0xBB, 0xBB, 0x62, 0x07, 0xFF, 0x4F, 0xB0, 0x17, 0x30, 0x1F, 0xF4, 0xFA, 0x0A, 0x75,
  0x0A, 0xFE, 0x4F, 0xA0, 0x42, 0x06, 0x80, 0x29, 0x07, 0x20, 0x5F, 0xE4, 0xF9, 0x0E, 0x30, 0xEF,
  0x01, 0x20, 0xEF, 0xD4, 0xF9, 0x08, 0x20, 0x5F, 0x90, 0x62, 0x08, 0xFD, 0x4F, 0x90, 0x22, 0x0A,
  0xF9, 0x0B, 0x20, 0x3F, 0xD4, 0xF0, 0xC2, 0x01, 0xFB, 0x01, 0x20, 0xCF, 0xC4, 0x80, 0xC0, 0xF4,
  0x80, 0xC0, 0xF4, 0x80, 0xC0, 0xF4, 0x0D, 0xFF, 0xFF, 0xA0, 0xDC, 0x40, 0xAF, 0xFF, 0xFA, 0x0A,
  0xC4, 0x01, 0x0E, 0xFF, 0xFF, 0x0E, 0x01, 0xC5, 0x81, 0x1A, 0xDF, 0xFF, 0xB8, 0x1D, 0xA1, 0x1C,
  0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x00, 0xDF, 0xFF, 0xFB, 0x71,
  0x0A, 0xFF, 0xFF, 0xB7, 0x10, 0x10, 0xEF, 0xFF, 0xFA, 0x72, 0x81, 0x1A, 0xDF, 0xFF, 0xF7, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_type_specimen() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_type_specimen_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_vertical_align_bottom 48x48, 4-bit Alpha,  RLE, 91 bytes.
static const uint8_t ic_sharp_48_editor_vertical_align_bottom_data[] PROGMEM = {
  0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77,
  0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7,
  0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77,
  0x7C, 0x77, 0x71, 0x07, 0xFF, 0x07, 0x77, 0x30, 0x7F, 0xD0, 0x77, 0x75, 0x07, 0xFB, 0x07, 0x77,
  0x70, 0x7F, 0x90, 0x77, 0x77, 0x20, 0x7E, 0x07, 0x77, 0x74, 0x07, 0xC0, 0x77, 0x77, 0x60, 0x7A,
  0x07, 0x77, 0x77, 0x10, 0x07, 0x80, 0xA9, 0x30, 0x80, 0x9F, 0x4F,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_vertical_align_bottom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_vertical_align_bottom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_vertical_align_center 48x48, 4-bit Alpha,  RLE, 119 bytes.
static const uint8_t ic_sharp_48_editor_vertical_align_center_data[] PROGMEM = {
  0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77,
  0xC7, 0x77, 0x7C, 0x77, 0x71, 0x07, 0xFF, 0x07, 0x77, 0x30, 0x7F, 0xD0, 0x77, 0x75, 0x07, 0xFB,
  0x07, 0x77, 0x70, 0x7F, 0x90, 0x77, 0x77, 0x20, 0x7E, 0x07, 0x77, 0x74, 0x07, 0xC0, 0x77, 0x77,
  0x60, 0x7A, 0x07, 0x77, 0x77, 0x10, 0x07, 0x80, 0xA9, 0x30, 0x80, 0x9F, 0x4F, 0x80, 0xA9, 0x30,
  0x00, 0x77, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x77, 0x60, 0x7C, 0x07, 0x77, 0x74, 0x07, 0xE0, 0x77,
  0x77, 0x20, 0x7F, 0x90, 0x77, 0x77, 0x07, 0xFB, 0x07, 0x77, 0x50, 0x7F, 0xD0, 0x77, 0x73, 0x07,
  0xFF, 0x07, 0x77, 0x71, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77,
  0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_vertical_align_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 2, 39, 45), Box(0, 0, 47, 47),
      ic_sharp_48_editor_vertical_align_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_vertical_align_top 48x48, 4-bit Alpha,  RLE, 91 bytes.
static const uint8_t ic_sharp_48_editor_vertical_align_top_data[] PROGMEM = {
  0x80, 0x9F, 0x4F, 0x80, 0xA9, 0x30, 0x00, 0x77, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x77, 0x60, 0x7C,
  0x07, 0x77, 0x74, 0x07, 0xE0, 0x77, 0x77, 0x20, 0x7F, 0x90, 0x77, 0x77, 0x07, 0xFB, 0x07, 0x77,
  0x50, 0x7F, 0xD0, 0x77, 0x73, 0x07, 0xFF, 0x07, 0x77, 0x71, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7,
  0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77,
  0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C,
  0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77, 0x77, 0xC7, 0x77, 0x7C, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_vertical_align_top() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 6, 39, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_vertical_align_top_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_vertical_distribute 48x48, 4-bit Alpha,  RLE, 30 bytes.
static const uint8_t ic_sharp_48_editor_vertical_distribute_data[] PROGMEM = {
  0x80, 0xAB, 0x4F, 0x80, 0x98, 0x96, 0x0F, 0xFE, 0x77, 0x6F, 0xFE, 0x77, 0x6F, 0xFE, 0x77, 0x6F,
  0xFE, 0x77, 0x6F, 0xFE, 0x77, 0x6F, 0xFE, 0x80, 0x98, 0x96, 0x08, 0x0A, 0xB4, 0xF0,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_vertical_distribute() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_editor_vertical_distribute_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_editor_wrap_text 48x48, 4-bit Alpha,  RLE, 115 bytes.
static const uint8_t ic_sharp_48_editor_wrap_text_data[] PROGMEM = {
  0xFF, 0xFF, 0xC2, 0xFF, 0xFF, 0xC2, 0xFF, 0xFF, 0xC2, 0xFF, 0xFF, 0xC8, 0x0C, 0x96, 0x0F, 0xFF,
  0xD8, 0x2E, 0xC8, 0x24, 0xFF, 0xFF, 0xA0, 0x93, 0xFF, 0xFF, 0xB0, 0xB2, 0xFF, 0xFF, 0xC0, 0x97,
  0x77, 0x70, 0x30, 0x9C, 0x02, 0x77, 0x77, 0x10, 0x7B, 0x08, 0x77, 0x77, 0x20, 0xDA, 0x0C, 0x77,
  0x77, 0x20, 0x9A, 0x0E, 0x77, 0x70, 0x77, 0x10, 0x9A, 0x0E, 0x77, 0x60, 0x79, 0x71, 0x0D, 0xA0,
  0xC7, 0x75, 0x07, 0xA7, 0x07, 0xB0, 0x87, 0x74, 0x07, 0xB5, 0x03, 0x09, 0xC0, 0x2F, 0xD5, 0x07,
  0xFF, 0x09, 0x1F, 0xD4, 0x07, 0xFF, 0x0B, 0x2F, 0xD4, 0x07, 0xFE, 0x09, 0x3F, 0xD5, 0x07, 0xF9,
  0x82, 0xEC, 0x82, 0x77, 0x71, 0x07, 0xB7, 0x77, 0x73, 0x07, 0xA7, 0x77, 0x74, 0x07, 0x97, 0x77,
  0x75, 0x07, 0x75,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_48_editor_wrap_text() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 10, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_editor_wrap_text_data, Alpha4(color::Black));
  return value;
}
